{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_gateway",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_gasReceiver",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "InvalidAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotApprovedByGateway",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "commandId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_from",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "_message",
						"type": "string"
					}
				],
				"name": "Executed",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "commandId",
						"type": "bytes32"
					},
					{
						"internalType": "string",
						"name": "sourceChain",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "sourceAddress",
						"type": "string"
					},
					{
						"internalType": "bytes",
						"name": "payload",
						"type": "bytes"
					}
				],
				"name": "execute",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gasService",
				"outputs": [
					{
						"internalType": "contract IAxelarGasService",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gateway",
				"outputs": [
					{
						"internalType": "contract IAxelarGateway",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "message",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "destinationChain",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "destinationAddress",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_message",
						"type": "string"
					}
				],
				"name": "setRemoteValue",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sourceAddress",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sourceChain",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"InvalidAddress()": [
					{
						"details": "Thrown when a function is called with an invalid address."
					}
				],
				"NotApprovedByGateway()": [
					{
						"details": "Thrown when the call is not approved by the Axelar Gateway."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_gasReceiver": "address of axl gas service on deployed chain",
						"_gateway": "address of axl gateway on deployed chain"
					}
				},
				"execute(bytes32,string,string,bytes)": {
					"details": "This function ensures the call is approved by Axelar Gateway before execution. It uses a hash of the payload for validation and internally calls _execute for the actual command execution. Reverts if the validation fails.",
					"params": {
						"commandId": "The unique identifier of the cross-chain message being executed.",
						"payload": "The payload of the message payload.",
						"sourceAddress": "The address on the source chain that sent the message.",
						"sourceChain": "The name of the source chain from which the message originated."
					}
				},
				"gateway()": {
					"returns": {
						"_0": "The Axelar Gateway instance."
					}
				},
				"setRemoteValue(string,string,string)": {
					"details": "message param is passed in as gmp message",
					"params": {
						"_message": "message to be sent",
						"destinationAddress": "address on dest chain this tx is going to",
						"destinationChain": "name of the dest chain (ex. \"Fantom\")"
					}
				}
			},
			"title": "CallContract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"execute(bytes32,string,string,bytes)": {
					"notice": "Executes the cross-chain command after validating it with the Axelar Gateway."
				},
				"gateway()": {
					"notice": "Returns the address of the AxelarGateway contract."
				},
				"setRemoteValue(string,string,string)": {
					"notice": "Send message from chain A to chain B"
				}
			},
			"notice": "Send a message from chain A to chain B and stores gmp message",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/05_Axelar_CallContract.sol": "CallContract"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol": {
			"keccak256": "0x89078799d3ff3501cb859e3b87c9ac9541dd54bcdeb194b230324a2d74f6a74a",
			"license": "MIT",
			"urls": [
				"bzz-raw://d7e24a3b23e54b4fa45e2184da956a04a76b68dbc27b5706f465d8989ecb7109",
				"dweb:/ipfs/QmeFzVaUCYWgHAt9sCF62cUkGpvFfchH3riu7ZQCd5f8RP"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarExecutable.sol": {
			"keccak256": "0xc62de7533d4891bfd5bd8792e6638cb1d3ff4389dee2ce1f1dc8de235a057daa",
			"license": "MIT",
			"urls": [
				"bzz-raw://f934a6afcebde328dbf271af65a24370618f173c65f705739fb16e7f99195c15",
				"dweb:/ipfs/QmZ61TPX1wPk3UDhpGxktTdYvgei3kBG1iCMYLt99ANwhN"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGasService.sol": {
			"keccak256": "0x7ad77d3af41f342e9032889a7b5aa224ab0c6dfaf9ce9350fe403d4a596c5eae",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc2358f1f1138cd742a7cfdfc83420c488c19c3b3e39d703482e124e453953ee",
				"dweb:/ipfs/QmYki4j2yWrixJVs955DyS1ZmLD5zcxe8ss52w6DLBLRi4"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IAxelarGateway.sol": {
			"keccak256": "0xbd92798eade563d8a663db59f6f04db5acdee5beda3a6d091e44a7d5c6b2f68e",
			"license": "MIT",
			"urls": [
				"bzz-raw://1519882aed7b6de2ee1e316e5188d2bda1e305fc18a96b3895831f49dc9f90b0",
				"dweb:/ipfs/QmYTLwLGwmDkyX6GSE6PU93TkWP5mFz8qhmFyBrWfj6gaB"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IContractIdentifier.sol": {
			"keccak256": "0x21a94655f7f1ed3d7188bd38ce6187892c615b80f9a74e123cbc38113d855a35",
			"license": "MIT",
			"urls": [
				"bzz-raw://e7e1f30e159d40a9f8431c26955a584507bc23a30f19380c723acdb4182ba7c1",
				"dweb:/ipfs/QmXb965di5pU3m3W36k19ZX8m6qCDaEi1jEt6NocqrGPXj"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IERC20.sol": {
			"keccak256": "0xb77ad755f4eade679279d5ca12b6926595e41e17387e143530f4fb57672d58d7",
			"license": "MIT",
			"urls": [
				"bzz-raw://b0d01d0810d12dba98839b084440ab9b52e04d94e9431a6ffadabb1651d0f100",
				"dweb:/ipfs/Qme9KLMtbmNvsAj2giGTzNFKAymkMJq88Ef445pLiawKWa"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IImplementation.sol": {
			"keccak256": "0xa7f275514d44bec3ab8ab8c768736329174d7cc6c5cd329c3509a66bce9cd468",
			"license": "MIT",
			"urls": [
				"bzz-raw://983e8c97e4916b47244d71fa104fc368100991561fe8c28f1a6bae043763754d",
				"dweb:/ipfs/QmeFeJsCowShVsAe6RMiz3qjY2JTyRNYRRu1oYQcN9T6uV"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IInterchainGasEstimation.sol": {
			"keccak256": "0x5463c0d3632e53d3906796d4283a627bd7ebc63d0092685715d98340db9516ff",
			"license": "MIT",
			"urls": [
				"bzz-raw://9cd73f4b82b70f3e93b23ac591696de14b1cc88e1e60a5f66b1ac8b0e2ecd2ec",
				"dweb:/ipfs/Qmd8psz6tmcmop1iD6fqX8vCRfrkVm7aGMZCXEbsiVjBV8"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IOwnable.sol": {
			"keccak256": "0x5cb5691c9293e3011e1b133485411e8933ca1e110f2436a663df12991d134bf7",
			"license": "MIT",
			"urls": [
				"bzz-raw://cdbeb0f7ec37155f976a3bdd9f13055c80f1b2d17043740d387403cb8d65a096",
				"dweb:/ipfs/QmXKLyWetJGgwUuEtexjPxfeZdgUywhrHS4898fQSFkC5y"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IUpgradable.sol": {
			"keccak256": "0x4e1f84c9711c3c15c77aee5fce8de99fcb49a902c7e6ff24626c924a60b8c22d",
			"license": "MIT",
			"urls": [
				"bzz-raw://b2f36d8fb4b365e78663579bfd0d3252a6e290f6dd763d9275f4c6f5f51577d9",
				"dweb:/ipfs/QmZjhnPbjqnRztwbYYs1BdxRbSsAmSLkCfE9SNRk4jMFMe"
			]
		},
		"@axelar-network/axelar-gmp-sdk-solidity/contracts/types/GasEstimationTypes.sol": {
			"keccak256": "0x7da6d20700698dfae8f8252c442e4bebd29030ffcdac4fbbe986f1ddbcb6365c",
			"license": "MIT",
			"urls": [
				"bzz-raw://992662e49dbc87ab994d8b68c5183dcd5453c71d04f98816b68cb00589938058",
				"dweb:/ipfs/QmYiuEMnYZod1iRTaEcqbJcUp3LwdDPyt2M7KUaqECivau"
			]
		},
		"contracts/05_Axelar_CallContract.sol": {
			"keccak256": "0x3102c99f3fdb0e68ae596fa9e282fd950cb081c653e5b61dc5203f430a1f530d",
			"license": "MIT",
			"urls": [
				"bzz-raw://a06347e4c5c9f64796f70ed7a9c774476548d25f3316beb94892bb3baf468a58",
				"dweb:/ipfs/Qme3UVB7STvEyj7DicRXjThKoi2QgexRaShhCzKHwSUU51"
			]
		}
	},
	"version": 1
}