{
	"id": "acedf86c7330e694d38318d25fb3d6f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/12_TransferControllerDirect.sol": {
				"content": "// SPDX-License-Identifier: MIT \npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IMockAllocator} from \"../interfaces/IMockAllocator.sol\";\n\n// Contract that interacts with main USDC contract to transfer tokens\n// and Axelar bridge to grant datacap\n\ncontract TransferControllerDirect is Ownable {\n    // Address of USDC contract\n    address public usdcContractAddress;\n\n    // Address of Mock Allocator\n    address public mockAllocator;\n\n    // Create a pointer to the USDC contract\n    constructor(address initialOwner, address _usdcContractAddress, address _mockAllocator) Ownable(initialOwner) {\n        usdcContractAddress = _usdcContractAddress;\n        mockAllocator = _mockAllocator;\n    }\n\n    // Function to get USDC balance\n    function getUsdcBalance() external view returns (uint256 balance) {\n        // console.log(\"sender\", msg.sender);\n        IERC20 usdcContract = IERC20(usdcContractAddress);\n        uint256 account_balance = usdcContract.balanceOf(msg.sender);\n        // console.log(\"balance\", balance);\n        return account_balance;\n    }\n\n    function getUsdcBalance2(address _account)\n        external\n        view\n        returns (uint256 balance)\n    {\n        require(_account != address(0), \"Zero Address\");\n        IERC20 usdcContract = IERC20(usdcContractAddress);\n        uint256 account_balance = usdcContract.balanceOf(_account);\n\n        return account_balance;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFromAndGrantDatacap(address from, address to, uint256 value, bytes calldata clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)\n    {\n        IMockAllocator allocator = IMockAllocator(mockAllocator);\n        allocator.addVerifiedClient(clientFilecoinAddress, amount);\n\n        IERC20 usdcContract = IERC20(usdcContractAddress);\n        bool success = usdcContract.transferFrom(from, to, value);\n\n        return success;\n    }\n\n    function transferFromAndGrantDatacapMock(address from, address to, uint256 value, address clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)\n    {\n        IMockAllocator allocator = IMockAllocator(mockAllocator);\n        allocator.addVerifiedClientMock(clientFilecoinAddress, amount);\n\n        IERC20 usdcContract = IERC20(usdcContractAddress);\n        bool success = usdcContract.transferFrom(from, to, value);\n\n        return success;\n    }\n}\n"
			},
			"interfaces/IMockAllocator.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n/**\n * @title Interface for Allocator contract\n * @notice Definition of core functions and events of the Allocator contract\n */\ninterface IMockAllocator {\n    /**\n     * @dev Thrown if caller doesn't have enough allowance for given action\n     */\n    error InsufficientAllowance();\n\n    /**\n     * @dev Thrown if trying to add 0 allowance or grant 0 datacap\n     */\n    error AmountEqualZero();\n\n    /**\n     * @dev Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value\n     */\n    error AlreadyHasAllowance();\n\n    /**\n     * @dev Thrown if trying to set allowance to 0 when it's already 0\n     */\n    error AlreadyZero();\n\n    /**\n     * @dev Thrown if trying to call disabled function\n     */\n    error FunctionDisabled();\n\n    /**\n     * @notice Emitted when allocator's allowance is changed by manager\n     * @param allocator Allocator whose allowance has changed\n     * @param allowanceBefore Allowance before the change\n     * @param allowanceAfter Allowance after the change\n     */\n    event AllowanceChanged(address indexed allocator, uint256 allowanceBefore, uint256 allowanceAfter);\n\n    /**\n     * @notice Emitted when datacap is granted to a client\n     * @param allocator Allocator who granted the datacap\n     * @param client Client that received datacap (Filecoin address)\n     * @param amount Amount of datacap\n     */\n    event DatacapAllocated(address indexed allocator, bytes indexed client, uint256 amount);\n\n    /**\n     * @notice Get all allocators with non-zero allowance\n     * @return allocators List of allocators with non-zero allowance\n     */\n    // function getAllocators() external view returns (address[] memory allocators);\n\n    /**\n     * @notice Get allowance of an allocator\n     * @param allocator Allocator to get allowance for\n     * @return allowance Allocator's allowance\n     */\n    // function allowance(address allocator) external view returns (uint256 allowance);\n\n    /**\n     * @notice Add allowance to Allocator\n     * @param allocator Allocator that will receive allowance\n     * @param amount Amount of allowance to add\n     * @dev Emits AllowanceChanged event\n     * @dev Reverts if not called by contract owner\n     * @dev Reverts if trying to add 0 allowance\n     */\n    // function addAllowance(address allocator, uint256 amount) external;\n\n    /**\n     * @notice Set allowance of an Allocator. Can be used to remove allowance.\n     * @param allocator Allocator\n     * @param amount Amount of allowance to set\n     * @dev Emits AllowanceChanged event\n     * @dev Reverts if not called by contract owner\n     * @dev Reverts if setting to 0 when allocator already has 0 allowance\n     */\n    // function setAllowance(address allocator, uint256 amount) external;\n\n    /**\n     * @notice Grant allowance to a client.\n     * @param clientAddress Filecoin address of the client\n     * @param amount Amount of datacap to grant\n     * @dev Emits DatacapAllocated event\n     * @dev Reverts with InsufficientAllowance if caller doesn't have sufficient allowance\n     */\n    function addVerifiedClient(bytes calldata clientAddress, uint256 amount) external;\n\n    function addVerifiedClientMock(address clientAddress, uint256 amount) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/12_TransferControllerDirect.sol": {
				"TransferControllerDirect": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcContractAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_mockAllocator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getUsdcBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUsdcBalance2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mockAllocator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "clientFilecoinAddress",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFromAndGrantDatacap",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "clientFilecoinAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFromAndGrantDatacapMock",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferFromAndGrantDatacap(address,address,uint256,bytes,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/12_TransferControllerDirect.sol\":358:2754  contract TransferControllerDirect is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/12_TransferControllerDirect.sol\":595:804  constructor(address initialOwner, address _usdcContractAddress, address _mockAllocator) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/12_TransferControllerDirect.sol\":691:703  initialOwner */\n  dup3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/12_TransferControllerDirect.sol\":737:757  _usdcContractAddress */\n  dup2\n    /* \"contracts/12_TransferControllerDirect.sol\":715:734  usdcContractAddress */\n  0x01\n  0x00\n    /* \"contracts/12_TransferControllerDirect.sol\":715:757  usdcContractAddress = _usdcContractAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/12_TransferControllerDirect.sol\":783:797  _mockAllocator */\n  dup1\n    /* \"contracts/12_TransferControllerDirect.sol\":767:780  mockAllocator */\n  0x02\n  0x00\n    /* \"contracts/12_TransferControllerDirect.sol\":767:797  mockAllocator = _mockAllocator */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/12_TransferControllerDirect.sol\":595:804  constructor(address initialOwner, address _usdcContractAddress, address _mockAllocator) Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/12_TransferControllerDirect.sol\":358:2754  contract TransferControllerDirect is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  dup1\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":966:1085   */\ntag_36:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_38\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_39\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_40\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_21\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1632   */\ntag_22:\n    /* \"#utility.yul\":1601:1625   */\n  tag_42\n    /* \"#utility.yul\":1619:1624   */\n  dup2\n    /* \"#utility.yul\":1601:1625   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1596:1599   */\n  dup3\n    /* \"#utility.yul\":1589:1626   */\n  mstore\n    /* \"#utility.yul\":1514:1632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1638:1860   */\ntag_9:\n    /* \"#utility.yul\":1731:1735   */\n  0x00\n    /* \"#utility.yul\":1769:1771   */\n  0x20\n    /* \"#utility.yul\":1758:1767   */\n  dup3\n    /* \"#utility.yul\":1754:1772   */\n  add\n    /* \"#utility.yul\":1746:1772   */\n  swap1\n  pop\n    /* \"#utility.yul\":1782:1853   */\n  tag_44\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1839:1848   */\n  dup4\n    /* \"#utility.yul\":1835:1852   */\n  add\n    /* \"#utility.yul\":1826:1832   */\n  dup5\n    /* \"#utility.yul\":1782:1853   */\n  tag_22\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1638:1860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/12_TransferControllerDirect.sol\":358:2754  contract TransferControllerDirect is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/12_TransferControllerDirect.sol\":358:2754  contract TransferControllerDirect is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb9c37fd1\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc31ee12e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0f2a7dd3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f7eff6d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x225b0118\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e015584\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/12_TransferControllerDirect.sol\":515:543  address public mockAllocator */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12_TransferControllerDirect.sol\":1819:2282  function transferFromAndGrantDatacap(address from, address to, uint256 value, bytes calldata clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12_TransferControllerDirect.sol\":2288:2752  function transferFromAndGrantDatacapMock(address from, address to, uint256 value, address clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12_TransferControllerDirect.sol\":441:475  address public usdcContractAddress */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12_TransferControllerDirect.sol\":1176:1511  function getUsdcBalance2(address _account)... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/12_TransferControllerDirect.sol\":846:1170  function getUsdcBalance() external view returns (uint256 balance) {... */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/12_TransferControllerDirect.sol\":515:543  address public mockAllocator */\n    tag_14:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/12_TransferControllerDirect.sol\":1819:2282  function transferFromAndGrantDatacap(address from, address to, uint256 value, bytes calldata clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)... */\n    tag_20:\n        /* \"contracts/12_TransferControllerDirect.sol\":1979:1983  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_49:\n        /* \"contracts/12_TransferControllerDirect.sol\":1999:2023  IMockAllocator allocator */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":2041:2054  mockAllocator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/12_TransferControllerDirect.sol\":1999:2055  IMockAllocator allocator = IMockAllocator(mockAllocator) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2065:2074  allocator */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":2065:2092  allocator.addVerifiedClient */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x930fc006\n        /* \"contracts/12_TransferControllerDirect.sol\":2093:2114  clientFilecoinAddress */\n      dup7\n      dup7\n        /* \"contracts/12_TransferControllerDirect.sol\":2116:2122  amount */\n      dup7\n        /* \"contracts/12_TransferControllerDirect.sol\":2065:2123  allocator.addVerifiedClient(clientFilecoinAddress, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2134:2153  IERC20 usdcContract */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":2163:2182  usdcContractAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/12_TransferControllerDirect.sol\":2134:2183  IERC20 usdcContract = IERC20(usdcContractAddress) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2193:2205  bool success */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":2208:2220  usdcContract */\n      dup2\n        /* \"contracts/12_TransferControllerDirect.sol\":2208:2233  usdcContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/12_TransferControllerDirect.sol\":2234:2238  from */\n      dup12\n        /* \"contracts/12_TransferControllerDirect.sol\":2240:2242  to */\n      dup12\n        /* \"contracts/12_TransferControllerDirect.sol\":2244:2249  value */\n      dup12\n        /* \"contracts/12_TransferControllerDirect.sol\":2208:2250  usdcContract.transferFrom(from, to, value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/12_TransferControllerDirect.sol\":2193:2250  bool success = usdcContract.transferFrom(from, to, value) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2268:2275  success */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":2261:2275  return success */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":1819:2282  function transferFromAndGrantDatacap(address from, address to, uint256 value, bytes calldata clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/12_TransferControllerDirect.sol\":2288:2752  function transferFromAndGrantDatacapMock(address from, address to, uint256 value, address clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)... */\n    tag_26:\n        /* \"contracts/12_TransferControllerDirect.sol\":2445:2449  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_64:\n        /* \"contracts/12_TransferControllerDirect.sol\":2465:2489  IMockAllocator allocator */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":2507:2520  mockAllocator */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/12_TransferControllerDirect.sol\":2465:2521  IMockAllocator allocator = IMockAllocator(mockAllocator) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2531:2540  allocator */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":2531:2562  allocator.addVerifiedClientMock */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x63d67dff\n        /* \"contracts/12_TransferControllerDirect.sol\":2563:2584  clientFilecoinAddress */\n      dup6\n        /* \"contracts/12_TransferControllerDirect.sol\":2586:2592  amount */\n      dup6\n        /* \"contracts/12_TransferControllerDirect.sol\":2531:2593  allocator.addVerifiedClientMock(clientFilecoinAddress, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2604:2623  IERC20 usdcContract */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":2633:2652  usdcContractAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/12_TransferControllerDirect.sol\":2604:2653  IERC20 usdcContract = IERC20(usdcContractAddress) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2663:2675  bool success */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":2678:2690  usdcContract */\n      dup2\n        /* \"contracts/12_TransferControllerDirect.sol\":2678:2703  usdcContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/12_TransferControllerDirect.sol\":2704:2708  from */\n      dup11\n        /* \"contracts/12_TransferControllerDirect.sol\":2710:2712  to */\n      dup11\n        /* \"contracts/12_TransferControllerDirect.sol\":2714:2719  value */\n      dup11\n        /* \"contracts/12_TransferControllerDirect.sol\":2678:2720  usdcContract.transferFrom(from, to, value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_71:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_74:\n        /* \"contracts/12_TransferControllerDirect.sol\":2663:2720  bool success = usdcContract.transferFrom(from, to, value) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2738:2745  success */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":2731:2745  return success */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":2288:2752  function transferFromAndGrantDatacapMock(address from, address to, uint256 value, address clientFilecoinAddress, uint256 amount) external onlyOwner returns (bool)... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/12_TransferControllerDirect.sol\":441:475  address public usdcContractAddress */\n    tag_29:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/12_TransferControllerDirect.sol\":1176:1511  function getUsdcBalance2(address _account)... */\n    tag_39:\n        /* \"contracts/12_TransferControllerDirect.sol\":1266:1281  uint256 balance */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":1325:1326  0 */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":1305:1327  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/12_TransferControllerDirect.sol\":1305:1313  _account */\n      dup3\n        /* \"contracts/12_TransferControllerDirect.sol\":1305:1327  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/12_TransferControllerDirect.sol\":1297:1344  require(_account != address(0), \"Zero Address\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/12_TransferControllerDirect.sol\":1354:1373  IERC20 usdcContract */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":1383:1402  usdcContractAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/12_TransferControllerDirect.sol\":1354:1403  IERC20 usdcContract = IERC20(usdcContractAddress) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":1413:1436  uint256 account_balance */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":1439:1451  usdcContract */\n      dup2\n        /* \"contracts/12_TransferControllerDirect.sol\":1439:1461  usdcContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/12_TransferControllerDirect.sol\":1462:1470  _account */\n      dup6\n        /* \"contracts/12_TransferControllerDirect.sol\":1439:1471  usdcContract.balanceOf(_account) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/12_TransferControllerDirect.sol\":1413:1471  uint256 account_balance = usdcContract.balanceOf(_account) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":1489:1504  account_balance */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":1482:1504  return account_balance */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":1176:1511  function getUsdcBalance2(address _account)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/12_TransferControllerDirect.sol\":846:1170  function getUsdcBalance() external view returns (uint256 balance) {... */\n    tag_43:\n        /* \"contracts/12_TransferControllerDirect.sol\":895:910  uint256 balance */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":968:987  IERC20 usdcContract */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":997:1016  usdcContractAddress */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/12_TransferControllerDirect.sol\":968:1017  IERC20 usdcContract = IERC20(usdcContractAddress) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":1027:1050  uint256 account_balance */\n      0x00\n        /* \"contracts/12_TransferControllerDirect.sol\":1053:1065  usdcContract */\n      dup2\n        /* \"contracts/12_TransferControllerDirect.sol\":1053:1075  usdcContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/12_TransferControllerDirect.sol\":1076:1086  msg.sender */\n      caller\n        /* \"contracts/12_TransferControllerDirect.sol\":1053:1087  usdcContract.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_91:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_94:\n        /* \"contracts/12_TransferControllerDirect.sol\":1027:1087  uint256 account_balance = usdcContract.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":1148:1163  account_balance */\n      dup1\n        /* \"contracts/12_TransferControllerDirect.sol\":1141:1163  return account_balance */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/12_TransferControllerDirect.sol\":846:1170  function getUsdcBalance() external view returns (uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_98\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_110:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_111:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_141\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_110\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_112:\n        /* \"#utility.yul\":328:352   */\n      tag_143\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_111\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_145\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_112\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_114:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":797:914   */\n    tag_115:\n        /* \"#utility.yul\":906:907   */\n      0x00\n        /* \"#utility.yul\":903:904   */\n      dup1\n        /* \"#utility.yul\":896:908   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_116:\n        /* \"#utility.yul\":993:1017   */\n      tag_150\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_111\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_151:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_117:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_153\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_116\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1270   */\n    tag_118:\n        /* \"#utility.yul\":1230:1237   */\n      0x00\n        /* \"#utility.yul\":1259:1264   */\n      dup2\n        /* \"#utility.yul\":1248:1264   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_119:\n        /* \"#utility.yul\":1349:1373   */\n      tag_156\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_118\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_157:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_120:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_159\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_119\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1666   */\n    tag_121:\n        /* \"#utility.yul\":1658:1659   */\n      0x00\n        /* \"#utility.yul\":1655:1656   */\n      dup1\n        /* \"#utility.yul\":1648:1660   */\n      revert\n        /* \"#utility.yul\":1672:1789   */\n    tag_122:\n        /* \"#utility.yul\":1781:1782   */\n      0x00\n        /* \"#utility.yul\":1778:1779   */\n      dup1\n        /* \"#utility.yul\":1771:1783   */\n      revert\n        /* \"#utility.yul\":1795:1912   */\n    tag_123:\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1931:2483   */\n    tag_124:\n        /* \"#utility.yul\":1988:1996   */\n      0x00\n        /* \"#utility.yul\":1998:2004   */\n      dup1\n        /* \"#utility.yul\":2048:2051   */\n      dup4\n        /* \"#utility.yul\":2041:2045   */\n      0x1f\n        /* \"#utility.yul\":2033:2039   */\n      dup5\n        /* \"#utility.yul\":2029:2046   */\n      add\n        /* \"#utility.yul\":2025:2052   */\n      slt\n        /* \"#utility.yul\":2015:2137   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2056:2135   */\n      tag_165\n      tag_121\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2015:2137   */\n    tag_164:\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2156:2176   */\n      calldataload\n        /* \"#utility.yul\":2146:2176   */\n      swap1\n      pop\n        /* \"#utility.yul\":2199:2217   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2191:2197   */\n      dup2\n        /* \"#utility.yul\":2188:2218   */\n      gt\n        /* \"#utility.yul\":2185:2302   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2221:2300   */\n      tag_167\n      tag_122\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2185:2302   */\n    tag_166:\n        /* \"#utility.yul\":2335:2339   */\n      0x20\n        /* \"#utility.yul\":2327:2333   */\n      dup4\n        /* \"#utility.yul\":2323:2340   */\n      add\n        /* \"#utility.yul\":2311:2340   */\n      swap2\n      pop\n        /* \"#utility.yul\":2389:2392   */\n      dup4\n        /* \"#utility.yul\":2381:2385   */\n      0x01\n        /* \"#utility.yul\":2373:2379   */\n      dup3\n        /* \"#utility.yul\":2369:2386   */\n      mul\n        /* \"#utility.yul\":2359:2367   */\n      dup4\n        /* \"#utility.yul\":2355:2387   */\n      add\n        /* \"#utility.yul\":2352:2393   */\n      gt\n        /* \"#utility.yul\":2349:2477   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2396:2475   */\n      tag_169\n      tag_123\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2349:2477   */\n    tag_168:\n        /* \"#utility.yul\":1931:2483   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2489:3598   */\n    tag_19:\n        /* \"#utility.yul\":2595:2601   */\n      0x00\n        /* \"#utility.yul\":2603:2609   */\n      dup1\n        /* \"#utility.yul\":2611:2617   */\n      0x00\n        /* \"#utility.yul\":2619:2625   */\n      dup1\n        /* \"#utility.yul\":2627:2633   */\n      0x00\n        /* \"#utility.yul\":2635:2641   */\n      dup1\n        /* \"#utility.yul\":2684:2687   */\n      0xa0\n        /* \"#utility.yul\":2672:2681   */\n      dup8\n        /* \"#utility.yul\":2663:2670   */\n      dup10\n        /* \"#utility.yul\":2659:2682   */\n      sub\n        /* \"#utility.yul\":2655:2688   */\n      slt\n        /* \"#utility.yul\":2652:2772   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2691:2770   */\n      tag_172\n      tag_114\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2652:2772   */\n    tag_171:\n        /* \"#utility.yul\":2811:2812   */\n      0x00\n        /* \"#utility.yul\":2836:2889   */\n      tag_173\n        /* \"#utility.yul\":2881:2888   */\n      dup10\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup11\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_117\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2826:2889   */\n      swap7\n      pop\n        /* \"#utility.yul\":2782:2899   */\n      pop\n        /* \"#utility.yul\":2938:2940   */\n      0x20\n        /* \"#utility.yul\":2964:3017   */\n      tag_174\n        /* \"#utility.yul\":3009:3016   */\n      dup10\n        /* \"#utility.yul\":3000:3006   */\n      dup3\n        /* \"#utility.yul\":2989:2998   */\n      dup11\n        /* \"#utility.yul\":2985:3007   */\n      add\n        /* \"#utility.yul\":2964:3017   */\n      tag_117\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2954:3017   */\n      swap6\n      pop\n        /* \"#utility.yul\":2909:3027   */\n      pop\n        /* \"#utility.yul\":3066:3068   */\n      0x40\n        /* \"#utility.yul\":3092:3145   */\n      tag_175\n        /* \"#utility.yul\":3137:3144   */\n      dup10\n        /* \"#utility.yul\":3128:3134   */\n      dup3\n        /* \"#utility.yul\":3117:3126   */\n      dup11\n        /* \"#utility.yul\":3113:3135   */\n      add\n        /* \"#utility.yul\":3092:3145   */\n      tag_120\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3082:3145   */\n      swap5\n      pop\n        /* \"#utility.yul\":3037:3155   */\n      pop\n        /* \"#utility.yul\":3222:3224   */\n      0x60\n        /* \"#utility.yul\":3211:3220   */\n      dup8\n        /* \"#utility.yul\":3207:3225   */\n      add\n        /* \"#utility.yul\":3194:3226   */\n      calldataload\n        /* \"#utility.yul\":3253:3271   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3245:3251   */\n      dup2\n        /* \"#utility.yul\":3242:3272   */\n      gt\n        /* \"#utility.yul\":3239:3356   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":3275:3354   */\n      tag_177\n      tag_115\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3239:3356   */\n    tag_176:\n        /* \"#utility.yul\":3388:3452   */\n      tag_178\n        /* \"#utility.yul\":3444:3451   */\n      dup10\n        /* \"#utility.yul\":3435:3441   */\n      dup3\n        /* \"#utility.yul\":3424:3433   */\n      dup11\n        /* \"#utility.yul\":3420:3442   */\n      add\n        /* \"#utility.yul\":3388:3452   */\n      tag_124\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3370:3452   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":3165:3462   */\n      pop\n        /* \"#utility.yul\":3501:3504   */\n      0x80\n        /* \"#utility.yul\":3528:3581   */\n      tag_179\n        /* \"#utility.yul\":3573:3580   */\n      dup10\n        /* \"#utility.yul\":3564:3570   */\n      dup3\n        /* \"#utility.yul\":3553:3562   */\n      dup11\n        /* \"#utility.yul\":3549:3571   */\n      add\n        /* \"#utility.yul\":3528:3581   */\n      tag_120\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3518:3581   */\n      swap2\n      pop\n        /* \"#utility.yul\":3472:3591   */\n      pop\n        /* \"#utility.yul\":2489:3598   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":3604:3694   */\n    tag_125:\n        /* \"#utility.yul\":3638:3645   */\n      0x00\n        /* \"#utility.yul\":3681:3686   */\n      dup2\n        /* \"#utility.yul\":3674:3687   */\n      iszero\n        /* \"#utility.yul\":3667:3688   */\n      iszero\n        /* \"#utility.yul\":3656:3688   */\n      swap1\n      pop\n        /* \"#utility.yul\":3604:3694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3700:3809   */\n    tag_126:\n        /* \"#utility.yul\":3781:3802   */\n      tag_182\n        /* \"#utility.yul\":3796:3801   */\n      dup2\n        /* \"#utility.yul\":3781:3802   */\n      tag_125\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3776:3779   */\n      dup3\n        /* \"#utility.yul\":3769:3803   */\n      mstore\n        /* \"#utility.yul\":3700:3809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4025   */\n    tag_22:\n        /* \"#utility.yul\":3902:3906   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x20\n        /* \"#utility.yul\":3929:3938   */\n      dup3\n        /* \"#utility.yul\":3925:3943   */\n      add\n        /* \"#utility.yul\":3917:3943   */\n      swap1\n      pop\n        /* \"#utility.yul\":3953:4018   */\n      tag_184\n        /* \"#utility.yul\":4015:4016   */\n      0x00\n        /* \"#utility.yul\":4004:4013   */\n      dup4\n        /* \"#utility.yul\":4000:4017   */\n      add\n        /* \"#utility.yul\":3991:3997   */\n      dup5\n        /* \"#utility.yul\":3953:4018   */\n      tag_126\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3815:4025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4031:4942   */\n    tag_25:\n        /* \"#utility.yul\":4126:4132   */\n      0x00\n        /* \"#utility.yul\":4134:4140   */\n      dup1\n        /* \"#utility.yul\":4142:4148   */\n      0x00\n        /* \"#utility.yul\":4150:4156   */\n      dup1\n        /* \"#utility.yul\":4158:4164   */\n      0x00\n        /* \"#utility.yul\":4207:4210   */\n      0xa0\n        /* \"#utility.yul\":4195:4204   */\n      dup7\n        /* \"#utility.yul\":4186:4193   */\n      dup9\n        /* \"#utility.yul\":4182:4205   */\n      sub\n        /* \"#utility.yul\":4178:4211   */\n      slt\n        /* \"#utility.yul\":4175:4295   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4214:4293   */\n      tag_187\n      tag_114\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4175:4295   */\n    tag_186:\n        /* \"#utility.yul\":4334:4335   */\n      0x00\n        /* \"#utility.yul\":4359:4412   */\n      tag_188\n        /* \"#utility.yul\":4404:4411   */\n      dup9\n        /* \"#utility.yul\":4395:4401   */\n      dup3\n        /* \"#utility.yul\":4384:4393   */\n      dup10\n        /* \"#utility.yul\":4380:4402   */\n      add\n        /* \"#utility.yul\":4359:4412   */\n      tag_117\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4349:4412   */\n      swap6\n      pop\n        /* \"#utility.yul\":4305:4422   */\n      pop\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"#utility.yul\":4487:4540   */\n      tag_189\n        /* \"#utility.yul\":4532:4539   */\n      dup9\n        /* \"#utility.yul\":4523:4529   */\n      dup3\n        /* \"#utility.yul\":4512:4521   */\n      dup10\n        /* \"#utility.yul\":4508:4530   */\n      add\n        /* \"#utility.yul\":4487:4540   */\n      tag_117\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4477:4540   */\n      swap5\n      pop\n        /* \"#utility.yul\":4432:4550   */\n      pop\n        /* \"#utility.yul\":4589:4591   */\n      0x40\n        /* \"#utility.yul\":4615:4668   */\n      tag_190\n        /* \"#utility.yul\":4660:4667   */\n      dup9\n        /* \"#utility.yul\":4651:4657   */\n      dup3\n        /* \"#utility.yul\":4640:4649   */\n      dup10\n        /* \"#utility.yul\":4636:4658   */\n      add\n        /* \"#utility.yul\":4615:4668   */\n      tag_120\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4605:4668   */\n      swap4\n      pop\n        /* \"#utility.yul\":4560:4678   */\n      pop\n        /* \"#utility.yul\":4717:4719   */\n      0x60\n        /* \"#utility.yul\":4743:4796   */\n      tag_191\n        /* \"#utility.yul\":4788:4795   */\n      dup9\n        /* \"#utility.yul\":4779:4785   */\n      dup3\n        /* \"#utility.yul\":4768:4777   */\n      dup10\n        /* \"#utility.yul\":4764:4786   */\n      add\n        /* \"#utility.yul\":4743:4796   */\n      tag_117\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4733:4796   */\n      swap3\n      pop\n        /* \"#utility.yul\":4688:4806   */\n      pop\n        /* \"#utility.yul\":4845:4848   */\n      0x80\n        /* \"#utility.yul\":4872:4925   */\n      tag_192\n        /* \"#utility.yul\":4917:4924   */\n      dup9\n        /* \"#utility.yul\":4908:4914   */\n      dup3\n        /* \"#utility.yul\":4897:4906   */\n      dup10\n        /* \"#utility.yul\":4893:4915   */\n      add\n        /* \"#utility.yul\":4872:4925   */\n      tag_120\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4862:4925   */\n      swap2\n      pop\n        /* \"#utility.yul\":4816:4935   */\n      pop\n        /* \"#utility.yul\":4031:4942   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4948:5277   */\n    tag_38:\n        /* \"#utility.yul\":5007:5013   */\n      0x00\n        /* \"#utility.yul\":5056:5058   */\n      0x20\n        /* \"#utility.yul\":5044:5053   */\n      dup3\n        /* \"#utility.yul\":5035:5042   */\n      dup5\n        /* \"#utility.yul\":5031:5054   */\n      sub\n        /* \"#utility.yul\":5027:5059   */\n      slt\n        /* \"#utility.yul\":5024:5143   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":5062:5141   */\n      tag_195\n      tag_114\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5024:5143   */\n    tag_194:\n        /* \"#utility.yul\":5182:5183   */\n      0x00\n        /* \"#utility.yul\":5207:5260   */\n      tag_196\n        /* \"#utility.yul\":5252:5259   */\n      dup5\n        /* \"#utility.yul\":5243:5249   */\n      dup3\n        /* \"#utility.yul\":5232:5241   */\n      dup6\n        /* \"#utility.yul\":5228:5250   */\n      add\n        /* \"#utility.yul\":5207:5260   */\n      tag_117\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5197:5260   */\n      swap2\n      pop\n        /* \"#utility.yul\":5153:5270   */\n      pop\n        /* \"#utility.yul\":4948:5277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:5401   */\n    tag_127:\n        /* \"#utility.yul\":5370:5394   */\n      tag_198\n        /* \"#utility.yul\":5388:5393   */\n      dup2\n        /* \"#utility.yul\":5370:5394   */\n      tag_118\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5365:5368   */\n      dup3\n        /* \"#utility.yul\":5358:5395   */\n      mstore\n        /* \"#utility.yul\":5283:5401   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5407:5629   */\n    tag_41:\n        /* \"#utility.yul\":5500:5504   */\n      0x00\n        /* \"#utility.yul\":5538:5540   */\n      0x20\n        /* \"#utility.yul\":5527:5536   */\n      dup3\n        /* \"#utility.yul\":5523:5541   */\n      add\n        /* \"#utility.yul\":5515:5541   */\n      swap1\n      pop\n        /* \"#utility.yul\":5551:5622   */\n      tag_200\n        /* \"#utility.yul\":5619:5620   */\n      0x00\n        /* \"#utility.yul\":5608:5617   */\n      dup4\n        /* \"#utility.yul\":5604:5621   */\n      add\n        /* \"#utility.yul\":5595:5601   */\n      dup5\n        /* \"#utility.yul\":5551:5622   */\n      tag_127\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5407:5629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5635:5803   */\n    tag_128:\n        /* \"#utility.yul\":5718:5729   */\n      0x00\n        /* \"#utility.yul\":5752:5758   */\n      dup3\n        /* \"#utility.yul\":5747:5750   */\n      dup3\n        /* \"#utility.yul\":5740:5759   */\n      mstore\n        /* \"#utility.yul\":5792:5796   */\n      0x20\n        /* \"#utility.yul\":5787:5790   */\n      dup3\n        /* \"#utility.yul\":5783:5797   */\n      add\n        /* \"#utility.yul\":5768:5797   */\n      swap1\n      pop\n        /* \"#utility.yul\":5635:5803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5809:5957   */\n    tag_129:\n        /* \"#utility.yul\":5907:5913   */\n      dup3\n        /* \"#utility.yul\":5902:5905   */\n      dup2\n        /* \"#utility.yul\":5897:5900   */\n      dup4\n        /* \"#utility.yul\":5884:5914   */\n      calldatacopy\n        /* \"#utility.yul\":5948:5949   */\n      0x00\n        /* \"#utility.yul\":5939:5945   */\n      dup4\n        /* \"#utility.yul\":5934:5937   */\n      dup4\n        /* \"#utility.yul\":5930:5946   */\n      add\n        /* \"#utility.yul\":5923:5950   */\n      mstore\n        /* \"#utility.yul\":5809:5957   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5963:6065   */\n    tag_130:\n        /* \"#utility.yul\":6004:6010   */\n      0x00\n        /* \"#utility.yul\":6055:6057   */\n      0x1f\n        /* \"#utility.yul\":6051:6058   */\n      not\n        /* \"#utility.yul\":6046:6048   */\n      0x1f\n        /* \"#utility.yul\":6039:6044   */\n      dup4\n        /* \"#utility.yul\":6035:6049   */\n      add\n        /* \"#utility.yul\":6031:6059   */\n      and\n        /* \"#utility.yul\":6021:6059   */\n      swap1\n      pop\n        /* \"#utility.yul\":5963:6065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6093:6407   */\n    tag_131:\n        /* \"#utility.yul\":6189:6192   */\n      0x00\n        /* \"#utility.yul\":6210:6280   */\n      tag_205\n        /* \"#utility.yul\":6273:6279   */\n      dup4\n        /* \"#utility.yul\":6268:6271   */\n      dup6\n        /* \"#utility.yul\":6210:6280   */\n      tag_128\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6203:6280   */\n      swap4\n      pop\n        /* \"#utility.yul\":6290:6346   */\n      tag_206\n        /* \"#utility.yul\":6339:6345   */\n      dup4\n        /* \"#utility.yul\":6334:6337   */\n      dup6\n        /* \"#utility.yul\":6327:6332   */\n      dup5\n        /* \"#utility.yul\":6290:6346   */\n      tag_129\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6371:6400   */\n      tag_207\n        /* \"#utility.yul\":6393:6399   */\n      dup4\n        /* \"#utility.yul\":6371:6400   */\n      tag_130\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6366:6369   */\n      dup5\n        /* \"#utility.yul\":6362:6401   */\n      add\n        /* \"#utility.yul\":6355:6401   */\n      swap1\n      pop\n        /* \"#utility.yul\":6093:6407   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6413:6852   */\n    tag_53:\n        /* \"#utility.yul\":6562:6566   */\n      0x00\n        /* \"#utility.yul\":6600:6602   */\n      0x40\n        /* \"#utility.yul\":6589:6598   */\n      dup3\n        /* \"#utility.yul\":6585:6603   */\n      add\n        /* \"#utility.yul\":6577:6603   */\n      swap1\n      pop\n        /* \"#utility.yul\":6649:6658   */\n      dup2\n        /* \"#utility.yul\":6643:6647   */\n      dup2\n        /* \"#utility.yul\":6639:6659   */\n      sub\n        /* \"#utility.yul\":6635:6636   */\n      0x00\n        /* \"#utility.yul\":6624:6633   */\n      dup4\n        /* \"#utility.yul\":6620:6637   */\n      add\n        /* \"#utility.yul\":6613:6660   */\n      mstore\n        /* \"#utility.yul\":6677:6763   */\n      tag_209\n        /* \"#utility.yul\":6758:6762   */\n      dup2\n        /* \"#utility.yul\":6749:6755   */\n      dup6\n        /* \"#utility.yul\":6741:6747   */\n      dup8\n        /* \"#utility.yul\":6677:6763   */\n      tag_131\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6669:6763   */\n      swap1\n      pop\n        /* \"#utility.yul\":6773:6845   */\n      tag_210\n        /* \"#utility.yul\":6841:6843   */\n      0x20\n        /* \"#utility.yul\":6830:6839   */\n      dup4\n        /* \"#utility.yul\":6826:6844   */\n      add\n        /* \"#utility.yul\":6817:6823   */\n      dup5\n        /* \"#utility.yul\":6773:6845   */\n      tag_127\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6413:6852   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6858:7300   */\n    tag_58:\n        /* \"#utility.yul\":7007:7011   */\n      0x00\n        /* \"#utility.yul\":7045:7047   */\n      0x60\n        /* \"#utility.yul\":7034:7043   */\n      dup3\n        /* \"#utility.yul\":7030:7048   */\n      add\n        /* \"#utility.yul\":7022:7048   */\n      swap1\n      pop\n        /* \"#utility.yul\":7058:7129   */\n      tag_212\n        /* \"#utility.yul\":7126:7127   */\n      0x00\n        /* \"#utility.yul\":7115:7124   */\n      dup4\n        /* \"#utility.yul\":7111:7128   */\n      add\n        /* \"#utility.yul\":7102:7108   */\n      dup7\n        /* \"#utility.yul\":7058:7129   */\n      tag_112\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":7139:7211   */\n      tag_213\n        /* \"#utility.yul\":7207:7209   */\n      0x20\n        /* \"#utility.yul\":7196:7205   */\n      dup4\n        /* \"#utility.yul\":7192:7210   */\n      add\n        /* \"#utility.yul\":7183:7189   */\n      dup6\n        /* \"#utility.yul\":7139:7211   */\n      tag_112\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7221:7293   */\n      tag_214\n        /* \"#utility.yul\":7289:7291   */\n      0x40\n        /* \"#utility.yul\":7278:7287   */\n      dup4\n        /* \"#utility.yul\":7274:7292   */\n      add\n        /* \"#utility.yul\":7265:7271   */\n      dup5\n        /* \"#utility.yul\":7221:7293   */\n      tag_127\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6858:7300   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7306:7422   */\n    tag_132:\n        /* \"#utility.yul\":7376:7397   */\n      tag_216\n        /* \"#utility.yul\":7391:7396   */\n      dup2\n        /* \"#utility.yul\":7376:7397   */\n      tag_125\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7369:7374   */\n      dup2\n        /* \"#utility.yul\":7366:7398   */\n      eq\n        /* \"#utility.yul\":7356:7416   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":7412:7413   */\n      0x00\n        /* \"#utility.yul\":7409:7410   */\n      dup1\n        /* \"#utility.yul\":7402:7414   */\n      revert\n        /* \"#utility.yul\":7356:7416   */\n    tag_217:\n        /* \"#utility.yul\":7306:7422   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7428:7565   */\n    tag_133:\n        /* \"#utility.yul\":7482:7487   */\n      0x00\n        /* \"#utility.yul\":7513:7519   */\n      dup2\n        /* \"#utility.yul\":7507:7520   */\n      mload\n        /* \"#utility.yul\":7498:7520   */\n      swap1\n      pop\n        /* \"#utility.yul\":7529:7559   */\n      tag_219\n        /* \"#utility.yul\":7553:7558   */\n      dup2\n        /* \"#utility.yul\":7529:7559   */\n      tag_132\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7428:7565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7571:7916   */\n    tag_62:\n        /* \"#utility.yul\":7638:7644   */\n      0x00\n        /* \"#utility.yul\":7687:7689   */\n      0x20\n        /* \"#utility.yul\":7675:7684   */\n      dup3\n        /* \"#utility.yul\":7666:7673   */\n      dup5\n        /* \"#utility.yul\":7662:7685   */\n      sub\n        /* \"#utility.yul\":7658:7690   */\n      slt\n        /* \"#utility.yul\":7655:7774   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":7693:7772   */\n      tag_222\n      tag_114\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7655:7774   */\n    tag_221:\n        /* \"#utility.yul\":7813:7814   */\n      0x00\n        /* \"#utility.yul\":7838:7899   */\n      tag_223\n        /* \"#utility.yul\":7891:7898   */\n      dup5\n        /* \"#utility.yul\":7882:7888   */\n      dup3\n        /* \"#utility.yul\":7871:7880   */\n      dup6\n        /* \"#utility.yul\":7867:7889   */\n      add\n        /* \"#utility.yul\":7838:7899   */\n      tag_133\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7828:7899   */\n      swap2\n      pop\n        /* \"#utility.yul\":7784:7909   */\n      pop\n        /* \"#utility.yul\":7571:7916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7922:8254   */\n    tag_67:\n        /* \"#utility.yul\":8043:8047   */\n      0x00\n        /* \"#utility.yul\":8081:8083   */\n      0x40\n        /* \"#utility.yul\":8070:8079   */\n      dup3\n        /* \"#utility.yul\":8066:8084   */\n      add\n        /* \"#utility.yul\":8058:8084   */\n      swap1\n      pop\n        /* \"#utility.yul\":8094:8165   */\n      tag_225\n        /* \"#utility.yul\":8162:8163   */\n      0x00\n        /* \"#utility.yul\":8151:8160   */\n      dup4\n        /* \"#utility.yul\":8147:8164   */\n      add\n        /* \"#utility.yul\":8138:8144   */\n      dup6\n        /* \"#utility.yul\":8094:8165   */\n      tag_112\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8175:8247   */\n      tag_226\n        /* \"#utility.yul\":8243:8245   */\n      0x20\n        /* \"#utility.yul\":8232:8241   */\n      dup4\n        /* \"#utility.yul\":8228:8246   */\n      add\n        /* \"#utility.yul\":8219:8225   */\n      dup5\n        /* \"#utility.yul\":8175:8247   */\n      tag_127\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":7922:8254   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8260:8429   */\n    tag_134:\n        /* \"#utility.yul\":8344:8355   */\n      0x00\n        /* \"#utility.yul\":8378:8384   */\n      dup3\n        /* \"#utility.yul\":8373:8376   */\n      dup3\n        /* \"#utility.yul\":8366:8385   */\n      mstore\n        /* \"#utility.yul\":8418:8422   */\n      0x20\n        /* \"#utility.yul\":8413:8416   */\n      dup3\n        /* \"#utility.yul\":8409:8423   */\n      add\n        /* \"#utility.yul\":8394:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8260:8429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8435:8597   */\n    tag_135:\n        /* \"#utility.yul\":8575:8589   */\n      0x5a65726f20416464726573730000000000000000000000000000000000000000\n        /* \"#utility.yul\":8571:8572   */\n      0x00\n        /* \"#utility.yul\":8563:8569   */\n      dup3\n        /* \"#utility.yul\":8559:8573   */\n      add\n        /* \"#utility.yul\":8552:8590   */\n      mstore\n        /* \"#utility.yul\":8435:8597   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8603:8969   */\n    tag_136:\n        /* \"#utility.yul\":8745:8748   */\n      0x00\n        /* \"#utility.yul\":8766:8833   */\n      tag_230\n        /* \"#utility.yul\":8830:8832   */\n      0x0c\n        /* \"#utility.yul\":8825:8828   */\n      dup4\n        /* \"#utility.yul\":8766:8833   */\n      tag_134\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":8759:8833   */\n      swap2\n      pop\n        /* \"#utility.yul\":8842:8935   */\n      tag_231\n        /* \"#utility.yul\":8931:8934   */\n      dup3\n        /* \"#utility.yul\":8842:8935   */\n      tag_135\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":8960:8962   */\n      0x20\n        /* \"#utility.yul\":8955:8958   */\n      dup3\n        /* \"#utility.yul\":8951:8963   */\n      add\n        /* \"#utility.yul\":8944:8963   */\n      swap1\n      pop\n        /* \"#utility.yul\":8603:8969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8975:9394   */\n    tag_84:\n        /* \"#utility.yul\":9141:9145   */\n      0x00\n        /* \"#utility.yul\":9179:9181   */\n      0x20\n        /* \"#utility.yul\":9168:9177   */\n      dup3\n        /* \"#utility.yul\":9164:9182   */\n      add\n        /* \"#utility.yul\":9156:9182   */\n      swap1\n      pop\n        /* \"#utility.yul\":9228:9237   */\n      dup2\n        /* \"#utility.yul\":9222:9226   */\n      dup2\n        /* \"#utility.yul\":9218:9238   */\n      sub\n        /* \"#utility.yul\":9214:9215   */\n      0x00\n        /* \"#utility.yul\":9203:9212   */\n      dup4\n        /* \"#utility.yul\":9199:9216   */\n      add\n        /* \"#utility.yul\":9192:9239   */\n      mstore\n        /* \"#utility.yul\":9256:9387   */\n      tag_233\n        /* \"#utility.yul\":9382:9386   */\n      dup2\n        /* \"#utility.yul\":9256:9387   */\n      tag_136\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9248:9387   */\n      swap1\n      pop\n        /* \"#utility.yul\":8975:9394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9400:9543   */\n    tag_137:\n        /* \"#utility.yul\":9457:9462   */\n      0x00\n        /* \"#utility.yul\":9488:9494   */\n      dup2\n        /* \"#utility.yul\":9482:9495   */\n      mload\n        /* \"#utility.yul\":9473:9495   */\n      swap1\n      pop\n        /* \"#utility.yul\":9504:9537   */\n      tag_235\n        /* \"#utility.yul\":9531:9536   */\n      dup2\n        /* \"#utility.yul\":9504:9537   */\n      tag_119\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9400:9543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9549:9900   */\n    tag_89:\n        /* \"#utility.yul\":9619:9625   */\n      0x00\n        /* \"#utility.yul\":9668:9670   */\n      0x20\n        /* \"#utility.yul\":9656:9665   */\n      dup3\n        /* \"#utility.yul\":9647:9654   */\n      dup5\n        /* \"#utility.yul\":9643:9666   */\n      sub\n        /* \"#utility.yul\":9639:9671   */\n      slt\n        /* \"#utility.yul\":9636:9755   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":9674:9753   */\n      tag_238\n      tag_114\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":9636:9755   */\n    tag_237:\n        /* \"#utility.yul\":9794:9795   */\n      0x00\n        /* \"#utility.yul\":9819:9883   */\n      tag_239\n        /* \"#utility.yul\":9875:9882   */\n      dup5\n        /* \"#utility.yul\":9866:9872   */\n      dup3\n        /* \"#utility.yul\":9855:9864   */\n      dup6\n        /* \"#utility.yul\":9851:9873   */\n      add\n        /* \"#utility.yul\":9819:9883   */\n      tag_137\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9809:9883   */\n      swap2\n      pop\n        /* \"#utility.yul\":9765:9893   */\n      pop\n        /* \"#utility.yul\":9549:9900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a5431dc835aa19a717df86a327c536225caa762b5e6a828930b6d986ed85df4f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_289": {
									"entryPoint": null,
									"id": 289,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 314,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1863:5",
										"nodeType": "YulBlock",
										"src": "0:1863:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:81:5",
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nativeSrc": "389:65:5",
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:5",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nativeSrc": "400:54:5",
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nativeSrc": "511:51:5",
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nativeSrc": "521:35:5",
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nativeSrc": "532:24:5",
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:5",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:5",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nativeSrc": "611:79:5",
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:5",
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:5",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:5",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nativeSrc": "670:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nativeSrc": "670:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nativeSrc": "641:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nativeSrc": "631:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nativeSrc": "624:43:5",
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nativeSrc": "621:63:5",
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:5",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nativeSrc": "759:80:5",
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nativeSrc": "769:22:5",
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nativeSrc": "778:13:5",
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nativeSrc": "800:33:5",
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nativeSrc": "800:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:5",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:5",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nativeSrc": "956:552:5",
													"nodeType": "YulBlock",
													"src": "956:552:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:5",
																"nodeType": "YulBlock",
																"src": "1002:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:5"
																			},
																			"nativeSrc": "1004:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:5"
																		},
																		"nativeSrc": "1004:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:5"
																		},
																		"nativeSrc": "973:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:5",
																		"nodeType": "YulLiteral",
																		"src": "998:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:5"
																},
																"nativeSrc": "969:32:5",
																"nodeType": "YulFunctionCall",
																"src": "969:32:5"
															},
															"nativeSrc": "966:119:5",
															"nodeType": "YulIf",
															"src": "966:119:5"
														},
														{
															"nativeSrc": "1095:128:5",
															"nodeType": "YulBlock",
															"src": "1095:128:5",
															"statements": [
																{
																	"nativeSrc": "1110:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:5"
																				},
																				"nativeSrc": "1181:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:5"
																		},
																		"nativeSrc": "1149:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:5",
															"nodeType": "YulBlock",
															"src": "1233:129:5",
															"statements": [
																{
																	"nativeSrc": "1248:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:5"
																				},
																				"nativeSrc": "1320:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:5"
																		},
																		"nativeSrc": "1288:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:5",
															"nodeType": "YulBlock",
															"src": "1372:129:5",
															"statements": [
																{
																	"nativeSrc": "1387:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:5",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:5"
																				},
																				"nativeSrc": "1459:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:5"
																		},
																		"nativeSrc": "1427:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:5",
														"nodeType": "YulTypedName",
														"src": "910:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:5",
														"nodeType": "YulTypedName",
														"src": "921:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:5",
														"nodeType": "YulTypedName",
														"src": "933:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:5",
														"nodeType": "YulTypedName",
														"src": "941:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:5",
														"nodeType": "YulTypedName",
														"src": "949:6:5",
														"type": ""
													}
												],
												"src": "845:663:5"
											},
											{
												"body": {
													"nativeSrc": "1579:53:5",
													"nodeType": "YulBlock",
													"src": "1579:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1596:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1619:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1601:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1601:17:5"
																		},
																		"nativeSrc": "1601:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:5"
																},
																"nativeSrc": "1589:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1589:37:5"
															},
															"nativeSrc": "1589:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1589:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1514:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1567:5:5",
														"nodeType": "YulTypedName",
														"src": "1567:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1574:3:5",
														"nodeType": "YulTypedName",
														"src": "1574:3:5",
														"type": ""
													}
												],
												"src": "1514:118:5"
											},
											{
												"body": {
													"nativeSrc": "1736:124:5",
													"nodeType": "YulBlock",
													"src": "1736:124:5",
													"statements": [
														{
															"nativeSrc": "1746:26:5",
															"nodeType": "YulAssignment",
															"src": "1746:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:5"
																},
																"nativeSrc": "1754:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1850:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:5"
																		},
																		"nativeSrc": "1835:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1782:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1782:43:5"
																},
																"nativeSrc": "1782:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1782:71:5"
															},
															"nativeSrc": "1782:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1782:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1638:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:5",
														"nodeType": "YulTypedName",
														"src": "1708:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1720:6:5",
														"nodeType": "YulTypedName",
														"src": "1720:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1731:4:5",
														"nodeType": "YulTypedName",
														"src": "1731:4:5",
														"type": ""
													}
												],
												"src": "1638:222:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161102a38038061102a83398181016040528101906100319190610259565b825f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102b8565b60405180910390fd5b6100b18161013a60201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506102d1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610228826101ff565b9050919050565b6102388161021e565b8114610242575f80fd5b50565b5f815190506102538161022f565b92915050565b5f805f606084860312156102705761026f6101fb565b5b5f61027d86828701610245565b935050602061028e86828701610245565b925050604061029f86828701610245565b9150509250925092565b6102b28161021e565b82525050565b5f6020820190506102cb5f8301846102a9565b92915050565b610d4c806102de5f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063715018a611610064578063715018a6146101315780638da5cb5b1461013b578063b9c37fd114610159578063c31ee12e14610189578063f2fde38b146101a757610091565b80630f2a7dd3146100955780631f7eff6d146100b3578063225b0118146100e35780632e01558414610113575b5f80fd5b61009d6101c3565b6040516100aa91906108b2565b60405180910390f35b6100cd60048036038101906100c89190610991565b6101e8565b6040516100da9190610a41565b60405180910390f35b6100fd60048036038101906100f89190610a5a565b610335565b60405161010a9190610a41565b60405180910390f35b61011b61047f565b60405161012891906108b2565b60405180910390f35b6101396104a4565b005b6101436104b7565b60405161015091906108b2565b60405180910390f35b610173600480360381019061016e9190610ad1565b6104de565b6040516101809190610b0b565b60405180910390f35b6101916105f7565b60405161019e9190610b0b565b60405180910390f35b6101c160048036038101906101bc9190610ad1565b6106a0565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6101f1610724565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663930fc0068686866040518463ffffffff1660e01b815260040161025393929190610b7e565b5f604051808303815f87803b15801561026a575f80fd5b505af115801561027c573d5f803e3d5ffd5b505050505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8b8b8b6040518463ffffffff1660e01b81526004016102e393929190610bae565b6020604051808303815f875af11580156102ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103239190610c0d565b90508093505050509695505050505050565b5f61033e610724565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166363d67dff85856040518363ffffffff1660e01b815260040161039e929190610c38565b5f604051808303815f87803b1580156103b5575f80fd5b505af11580156103c7573d5f803e3d5ffd5b505050505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8a8a8a6040518463ffffffff1660e01b815260040161042e93929190610bae565b6020604051808303815f875af115801561044a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061046e9190610c0d565b905080935050505095945050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104ac610724565b6104b55f6107ab565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054490610cb9565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016105ac91906108b2565b602060405180830381865afa1580156105c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105eb9190610ceb565b90508092505050919050565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161065791906108b2565b602060405180830381865afa158015610672573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106969190610ceb565b9050809250505090565b6106a8610724565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610718575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070f91906108b2565b60405180910390fd5b610721816107ab565b50565b61072c61086c565b73ffffffffffffffffffffffffffffffffffffffff1661074a6104b7565b73ffffffffffffffffffffffffffffffffffffffff16146107a95761076d61086c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107a091906108b2565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61089c82610873565b9050919050565b6108ac81610892565b82525050565b5f6020820190506108c55f8301846108a3565b92915050565b5f80fd5b5f80fd5b6108dc81610892565b81146108e6575f80fd5b50565b5f813590506108f7816108d3565b92915050565b5f819050919050565b61090f816108fd565b8114610919575f80fd5b50565b5f8135905061092a81610906565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261095157610950610930565b5b8235905067ffffffffffffffff81111561096e5761096d610934565b5b60208301915083600182028301111561098a57610989610938565b5b9250929050565b5f805f805f8060a087890312156109ab576109aa6108cb565b5b5f6109b889828a016108e9565b96505060206109c989828a016108e9565b95505060406109da89828a0161091c565b945050606087013567ffffffffffffffff8111156109fb576109fa6108cf565b5b610a0789828a0161093c565b93509350506080610a1a89828a0161091c565b9150509295509295509295565b5f8115159050919050565b610a3b81610a27565b82525050565b5f602082019050610a545f830184610a32565b92915050565b5f805f805f60a08688031215610a7357610a726108cb565b5b5f610a80888289016108e9565b9550506020610a91888289016108e9565b9450506040610aa28882890161091c565b9350506060610ab3888289016108e9565b9250506080610ac48882890161091c565b9150509295509295909350565b5f60208284031215610ae657610ae56108cb565b5b5f610af3848285016108e9565b91505092915050565b610b05816108fd565b82525050565b5f602082019050610b1e5f830184610afc565b92915050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f610b5d8385610b24565b9350610b6a838584610b34565b610b7383610b42565b840190509392505050565b5f6040820190508181035f830152610b97818587610b52565b9050610ba66020830184610afc565b949350505050565b5f606082019050610bc15f8301866108a3565b610bce60208301856108a3565b610bdb6040830184610afc565b949350505050565b610bec81610a27565b8114610bf6575f80fd5b50565b5f81519050610c0781610be3565b92915050565b5f60208284031215610c2257610c216108cb565b5b5f610c2f84828501610bf9565b91505092915050565b5f604082019050610c4b5f8301856108a3565b610c586020830184610afc565b9392505050565b5f82825260208201905092915050565b7f5a65726f204164647265737300000000000000000000000000000000000000005f82015250565b5f610ca3600c83610c5f565b9150610cae82610c6f565b602082019050919050565b5f6020820190508181035f830152610cd081610c97565b9050919050565b5f81519050610ce581610906565b92915050565b5f60208284031215610d0057610cff6108cb565b5b5f610d0d84828501610cd7565b9150509291505056fea2646970667358221220a5431dc835aa19a717df86a327c536225caa762b5e6a828930b6d986ed85df4f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x102A CODESIZE SUB DUP1 PUSH2 0x102A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x259 JUMP JUMPDEST DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x13A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x2D1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x228 DUP3 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP2 EQ PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x253 DUP2 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x270 JUMPI PUSH2 0x26F PUSH2 0x1FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27D DUP7 DUP3 DUP8 ADD PUSH2 0x245 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28E DUP7 DUP3 DUP8 ADD PUSH2 0x245 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x29F DUP7 DUP3 DUP8 ADD PUSH2 0x245 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2B2 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CB PUSH0 DUP4 ADD DUP5 PUSH2 0x2A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD4C DUP1 PUSH2 0x2DE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xB9C37FD1 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xC31EE12E EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xF2A7DD3 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1F7EFF6D EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x225B0118 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2E015584 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1F1 PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x930FC006 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33E PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x63D67DFF DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP3 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4AC PUSH2 0x724 JUMP JUMPDEST PUSH2 0x4B5 PUSH0 PUSH2 0x7AB JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x718 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP2 PUSH2 0x7AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x72C PUSH2 0x86C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74A PUSH2 0x4B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A9 JUMPI PUSH2 0x76D PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x89C DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0x892 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x8A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8DC DUP2 PUSH2 0x892 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8F7 DUP2 PUSH2 0x8D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92A DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x951 JUMPI PUSH2 0x950 PUSH2 0x930 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96E JUMPI PUSH2 0x96D PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0x938 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x9AB JUMPI PUSH2 0x9AA PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9B8 DUP10 DUP3 DUP11 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x9C9 DUP10 DUP3 DUP11 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x9DA DUP10 DUP3 DUP11 ADD PUSH2 0x91C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FB JUMPI PUSH2 0x9FA PUSH2 0x8CF JUMP JUMPDEST JUMPDEST PUSH2 0xA07 DUP10 DUP3 DUP11 ADD PUSH2 0x93C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x80 PUSH2 0xA1A DUP10 DUP3 DUP11 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B DUP2 PUSH2 0xA27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA54 PUSH0 DUP4 ADD DUP5 PUSH2 0xA32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA80 DUP9 DUP3 DUP10 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA91 DUP9 DUP3 DUP10 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xAA2 DUP9 DUP3 DUP10 ADD PUSH2 0x91C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xAB3 DUP9 DUP3 DUP10 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xAC4 DUP9 DUP3 DUP10 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF3 DUP5 DUP3 DUP6 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1E PUSH0 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5D DUP4 DUP6 PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH2 0xB6A DUP4 DUP6 DUP5 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xB73 DUP4 PUSH2 0xB42 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB97 DUP2 DUP6 DUP8 PUSH2 0xB52 JUMP JUMPDEST SWAP1 POP PUSH2 0xBA6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBC1 PUSH0 DUP4 ADD DUP7 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0xBCE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0xBDB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xBEC DUP2 PUSH2 0xA27 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0xBE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC22 JUMPI PUSH2 0xC21 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC2F DUP5 DUP3 DUP6 ADD PUSH2 0xBF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4B PUSH0 DUP4 ADD DUP6 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0xC58 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A65726F20416464726573730000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCA3 PUSH1 0xC DUP4 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH2 0xCAE DUP3 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCD0 DUP2 PUSH2 0xC97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE5 DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD00 JUMPI PUSH2 0xCFF PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD0D DUP5 DUP3 DUP6 ADD PUSH2 0xCD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 NUMBER SAR 0xC8 CALLDATALOAD 0xAA NOT 0xA7 OR 0xDF DUP7 LOG3 0x27 0xC5 CALLDATASIZE 0x22 TLOAD 0xAA PUSH23 0x2B5E6A828930B6D986ED85DF4F64736F6C634300081A00 CALLER ",
							"sourceMap": "358:2396:3:-:0;;;595:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;691:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;737:20:3::1;715:19;;:42;;;;;;;;;;;;;;;;;;783:14;767:13;;:30;;;;;;;;;;;;;;;;;;595:209:::0;;;358:2396;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;358:2396:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1828,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 2156,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1963,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getUsdcBalance2_346": {
									"entryPoint": 1246,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUsdcBalance_312": {
									"entryPoint": 1527,
									"id": 312,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mockAllocator_268": {
									"entryPoint": 451,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1207,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1188,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFromAndGrantDatacapMock_447": {
									"entryPoint": 821,
									"id": 447,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@transferFromAndGrantDatacap_397": {
									"entryPoint": 488,
									"id": 397,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1696,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usdcContractAddress_266": {
									"entryPoint": 1151,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint256": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptrt_uint256": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2942,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2868,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9903:5",
										"nodeType": "YulBlock",
										"src": "0:9903:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "184:51:5",
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nativeSrc": "194:35:5",
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nativeSrc": "205:24:5",
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:5",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:5",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nativeSrc": "306:53:5",
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nativeSrc": "328:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nativeSrc": "316:37:5",
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nativeSrc": "316:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:5",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:5",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nativeSrc": "463:124:5",
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nativeSrc": "473:26:5",
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:5",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:18:5",
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:5",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nativeSrc": "562:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nativeSrc": "509:71:5",
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nativeSrc": "509:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:5",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:5",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:5",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											},
											{
												"body": {
													"nativeSrc": "633:35:5",
													"nodeType": "YulBlock",
													"src": "633:35:5",
													"statements": [
														{
															"nativeSrc": "643:19:5",
															"nodeType": "YulAssignment",
															"src": "643:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:5",
																		"nodeType": "YulLiteral",
																		"src": "659:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:5"
																},
																"nativeSrc": "653:9:5",
																"nodeType": "YulFunctionCall",
																"src": "653:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:5",
														"nodeType": "YulTypedName",
														"src": "626:6:5",
														"type": ""
													}
												],
												"src": "593:75:5"
											},
											{
												"body": {
													"nativeSrc": "763:28:5",
													"nodeType": "YulBlock",
													"src": "763:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:5",
																		"nodeType": "YulLiteral",
																		"src": "780:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:5",
																		"nodeType": "YulLiteral",
																		"src": "783:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:5"
																},
																"nativeSrc": "773:12:5",
																"nodeType": "YulFunctionCall",
																"src": "773:12:5"
															},
															"nativeSrc": "773:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:5"
											},
											{
												"body": {
													"nativeSrc": "886:28:5",
													"nodeType": "YulBlock",
													"src": "886:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:5",
																		"nodeType": "YulLiteral",
																		"src": "903:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:5",
																		"nodeType": "YulLiteral",
																		"src": "906:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:5"
																},
																"nativeSrc": "896:12:5",
																"nodeType": "YulFunctionCall",
																"src": "896:12:5"
															},
															"nativeSrc": "896:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:5"
											},
											{
												"body": {
													"nativeSrc": "963:79:5",
													"nodeType": "YulBlock",
													"src": "963:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:5",
																"nodeType": "YulBlock",
																"src": "1020:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:5"
																			},
																			"nativeSrc": "1022:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:5"
																		},
																		"nativeSrc": "1022:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:5"
																				},
																				"nativeSrc": "993:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:5"
																		},
																		"nativeSrc": "983:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:5"
																},
																"nativeSrc": "976:43:5",
																"nodeType": "YulFunctionCall",
																"src": "976:43:5"
															},
															"nativeSrc": "973:63:5",
															"nodeType": "YulIf",
															"src": "973:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:5",
														"nodeType": "YulTypedName",
														"src": "956:5:5",
														"type": ""
													}
												],
												"src": "920:122:5"
											},
											{
												"body": {
													"nativeSrc": "1100:87:5",
													"nodeType": "YulBlock",
													"src": "1100:87:5",
													"statements": [
														{
															"nativeSrc": "1110:29:5",
															"nodeType": "YulAssignment",
															"src": "1110:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:5"
																},
																"nativeSrc": "1119:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:5"
																},
																"nativeSrc": "1148:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:5"
															},
															"nativeSrc": "1148:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:5",
														"nodeType": "YulTypedName",
														"src": "1078:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:5",
														"nodeType": "YulTypedName",
														"src": "1086:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:5",
														"nodeType": "YulTypedName",
														"src": "1094:5:5",
														"type": ""
													}
												],
												"src": "1048:139:5"
											},
											{
												"body": {
													"nativeSrc": "1238:32:5",
													"nodeType": "YulBlock",
													"src": "1238:32:5",
													"statements": [
														{
															"nativeSrc": "1248:16:5",
															"nodeType": "YulAssignment",
															"src": "1248:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "1259:5:5",
																"nodeType": "YulIdentifier",
																"src": "1259:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1248:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1248:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1193:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1220:5:5",
														"nodeType": "YulTypedName",
														"src": "1220:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1230:7:5",
														"nodeType": "YulTypedName",
														"src": "1230:7:5",
														"type": ""
													}
												],
												"src": "1193:77:5"
											},
											{
												"body": {
													"nativeSrc": "1319:79:5",
													"nodeType": "YulBlock",
													"src": "1319:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:5",
																"nodeType": "YulBlock",
																"src": "1376:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:5"
																			},
																			"nativeSrc": "1378:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:5"
																		},
																		"nativeSrc": "1378:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:5"
																				},
																				"nativeSrc": "1349:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:5"
																		},
																		"nativeSrc": "1339:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:5"
																},
																"nativeSrc": "1332:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:5"
															},
															"nativeSrc": "1329:63:5",
															"nodeType": "YulIf",
															"src": "1329:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:5",
														"nodeType": "YulTypedName",
														"src": "1312:5:5",
														"type": ""
													}
												],
												"src": "1276:122:5"
											},
											{
												"body": {
													"nativeSrc": "1456:87:5",
													"nodeType": "YulBlock",
													"src": "1456:87:5",
													"statements": [
														{
															"nativeSrc": "1466:29:5",
															"nodeType": "YulAssignment",
															"src": "1466:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:5"
																},
																"nativeSrc": "1475:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:5"
																},
																"nativeSrc": "1504:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:5"
															},
															"nativeSrc": "1504:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:5",
														"nodeType": "YulTypedName",
														"src": "1434:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:5",
														"nodeType": "YulTypedName",
														"src": "1442:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:5",
														"nodeType": "YulTypedName",
														"src": "1450:5:5",
														"type": ""
													}
												],
												"src": "1404:139:5"
											},
											{
												"body": {
													"nativeSrc": "1638:28:5",
													"nodeType": "YulBlock",
													"src": "1638:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1655:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1655:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1658:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1658:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1648:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1648:6:5"
																},
																"nativeSrc": "1648:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1648:12:5"
															},
															"nativeSrc": "1648:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1648:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1549:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1549:117:5"
											},
											{
												"body": {
													"nativeSrc": "1761:28:5",
													"nodeType": "YulBlock",
													"src": "1761:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1778:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1778:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1771:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:5"
																},
																"nativeSrc": "1771:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1771:12:5"
															},
															"nativeSrc": "1771:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1771:12:5"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1672:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1672:117:5"
											},
											{
												"body": {
													"nativeSrc": "1884:28:5",
													"nodeType": "YulBlock",
													"src": "1884:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1901:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1901:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1904:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1904:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:5"
																},
																"nativeSrc": "1894:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1894:12:5"
															},
															"nativeSrc": "1894:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "1894:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1795:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1795:117:5"
											},
											{
												"body": {
													"nativeSrc": "2005:478:5",
													"nodeType": "YulBlock",
													"src": "2005:478:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2054:83:5",
																"nodeType": "YulBlock",
																"src": "2054:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2056:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2056:77:5"
																			},
																			"nativeSrc": "2056:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2056:79:5"
																		},
																		"nativeSrc": "2056:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2056:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2033:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2033:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2041:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2041:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2029:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2029:3:5"
																				},
																				"nativeSrc": "2029:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2029:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2048:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2048:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2025:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2025:3:5"
																		},
																		"nativeSrc": "2025:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2025:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2018:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:5"
																},
																"nativeSrc": "2018:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2018:35:5"
															},
															"nativeSrc": "2015:122:5",
															"nodeType": "YulIf",
															"src": "2015:122:5"
														},
														{
															"nativeSrc": "2146:30:5",
															"nodeType": "YulAssignment",
															"src": "2146:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2169:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2169:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2156:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2156:12:5"
																},
																"nativeSrc": "2156:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2156:20:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2146:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2219:83:5",
																"nodeType": "YulBlock",
																"src": "2219:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2221:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2221:77:5"
																			},
																			"nativeSrc": "2221:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2221:79:5"
																		},
																		"nativeSrc": "2221:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2191:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2199:18:5",
																		"nodeType": "YulLiteral",
																		"src": "2199:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2188:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2188:2:5"
																},
																"nativeSrc": "2188:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2188:30:5"
															},
															"nativeSrc": "2185:117:5",
															"nodeType": "YulIf",
															"src": "2185:117:5"
														},
														{
															"nativeSrc": "2311:29:5",
															"nodeType": "YulAssignment",
															"src": "2311:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2327:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2327:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2335:4:5",
																		"nodeType": "YulLiteral",
																		"src": "2335:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2323:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2323:3:5"
																},
																"nativeSrc": "2323:17:5",
																"nodeType": "YulFunctionCall",
																"src": "2323:17:5"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2311:8:5",
																	"nodeType": "YulIdentifier",
																	"src": "2311:8:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2394:83:5",
																"nodeType": "YulBlock",
																"src": "2394:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2396:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2396:77:5"
																			},
																			"nativeSrc": "2396:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2396:79:5"
																		},
																		"nativeSrc": "2396:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2359:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "2359:8:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2373:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2373:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2381:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2381:4:5",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2369:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2369:3:5"
																				},
																				"nativeSrc": "2369:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2369:17:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2355:3:5"
																		},
																		"nativeSrc": "2355:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2355:32:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2389:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2389:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2352:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2352:2:5"
																},
																"nativeSrc": "2352:41:5",
																"nodeType": "YulFunctionCall",
																"src": "2352:41:5"
															},
															"nativeSrc": "2349:128:5",
															"nodeType": "YulIf",
															"src": "2349:128:5"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "1931:552:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1972:6:5",
														"nodeType": "YulTypedName",
														"src": "1972:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1980:3:5",
														"nodeType": "YulTypedName",
														"src": "1980:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1988:8:5",
														"nodeType": "YulTypedName",
														"src": "1988:8:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1998:6:5",
														"nodeType": "YulTypedName",
														"src": "1998:6:5",
														"type": ""
													}
												],
												"src": "1931:552:5"
											},
											{
												"body": {
													"nativeSrc": "2642:956:5",
													"nodeType": "YulBlock",
													"src": "2642:956:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2689:83:5",
																"nodeType": "YulBlock",
																"src": "2689:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2691:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2691:77:5"
																			},
																			"nativeSrc": "2691:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2691:79:5"
																		},
																		"nativeSrc": "2691:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2691:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2663:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2663:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2672:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2672:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2659:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:5"
																		},
																		"nativeSrc": "2659:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2659:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2684:3:5",
																		"nodeType": "YulLiteral",
																		"src": "2684:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2655:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2655:3:5"
																},
																"nativeSrc": "2655:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2655:33:5"
															},
															"nativeSrc": "2652:120:5",
															"nodeType": "YulIf",
															"src": "2652:120:5"
														},
														{
															"nativeSrc": "2782:117:5",
															"nodeType": "YulBlock",
															"src": "2782:117:5",
															"statements": [
																{
																	"nativeSrc": "2797:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2797:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2811:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2811:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2801:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2801:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:5"
																				},
																				"nativeSrc": "2857:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2836:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:5"
																		},
																		"nativeSrc": "2836:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2826:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2909:118:5",
															"nodeType": "YulBlock",
															"src": "2909:118:5",
															"statements": [
																{
																	"nativeSrc": "2924:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2924:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2938:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2938:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2928:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2928:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2954:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2954:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2989:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2989:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3000:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3000:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2985:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2985:3:5"
																				},
																				"nativeSrc": "2985:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2985:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3009:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3009:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2964:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2964:20:5"
																		},
																		"nativeSrc": "2964:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2964:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2954:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2954:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3037:118:5",
															"nodeType": "YulBlock",
															"src": "3037:118:5",
															"statements": [
																{
																	"nativeSrc": "3052:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3052:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3066:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3066:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3056:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3056:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3082:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3082:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3117:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3117:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3128:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3128:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3113:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3113:3:5"
																				},
																				"nativeSrc": "3113:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3113:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3137:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3137:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3092:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3092:20:5"
																		},
																		"nativeSrc": "3092:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3092:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3082:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3082:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3165:297:5",
															"nodeType": "YulBlock",
															"src": "3165:297:5",
															"statements": [
																{
																	"nativeSrc": "3180:46:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3180:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3211:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3211:9:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3222:2:5",
																						"nodeType": "YulLiteral",
																						"src": "3222:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3207:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3207:3:5"
																				},
																				"nativeSrc": "3207:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3207:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3194:12:5",
																			"nodeType": "YulIdentifier",
																			"src": "3194:12:5"
																		},
																		"nativeSrc": "3194:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3184:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3184:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3273:83:5",
																		"nodeType": "YulBlock",
																		"src": "3273:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3275:77:5",
																						"nodeType": "YulIdentifier",
																						"src": "3275:77:5"
																					},
																					"nativeSrc": "3275:79:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3275:79:5"
																				},
																				"nativeSrc": "3275:79:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3275:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3245:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3253:18:5",
																				"nodeType": "YulLiteral",
																				"src": "3253:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3242:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "3242:2:5"
																		},
																		"nativeSrc": "3242:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3242:30:5"
																	},
																	"nativeSrc": "3239:117:5",
																	"nodeType": "YulIf",
																	"src": "3239:117:5"
																},
																{
																	"nativeSrc": "3370:82:5",
																	"nodeType": "YulAssignment",
																	"src": "3370:82:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3424:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3424:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3435:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3435:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3420:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3420:3:5"
																				},
																				"nativeSrc": "3420:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3420:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3444:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3444:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "3388:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "3388:31:5"
																		},
																		"nativeSrc": "3388:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3388:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3370:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3370:6:5"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "3378:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3378:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3472:119:5",
															"nodeType": "YulBlock",
															"src": "3472:119:5",
															"statements": [
																{
																	"nativeSrc": "3487:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3487:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3501:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3501:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3491:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3491:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3518:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3518:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3553:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3553:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3564:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3564:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3549:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3549:3:5"
																				},
																				"nativeSrc": "3549:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3549:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3573:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3573:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3528:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3528:20:5"
																		},
																		"nativeSrc": "3528:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3528:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "3518:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3518:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptrt_uint256",
												"nativeSrc": "2489:1109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2572:9:5",
														"nodeType": "YulTypedName",
														"src": "2572:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2583:7:5",
														"nodeType": "YulTypedName",
														"src": "2583:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2595:6:5",
														"nodeType": "YulTypedName",
														"src": "2595:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2603:6:5",
														"nodeType": "YulTypedName",
														"src": "2603:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2611:6:5",
														"nodeType": "YulTypedName",
														"src": "2611:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2619:6:5",
														"nodeType": "YulTypedName",
														"src": "2619:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2627:6:5",
														"nodeType": "YulTypedName",
														"src": "2627:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2635:6:5",
														"nodeType": "YulTypedName",
														"src": "2635:6:5",
														"type": ""
													}
												],
												"src": "2489:1109:5"
											},
											{
												"body": {
													"nativeSrc": "3646:48:5",
													"nodeType": "YulBlock",
													"src": "3646:48:5",
													"statements": [
														{
															"nativeSrc": "3656:32:5",
															"nodeType": "YulAssignment",
															"src": "3656:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3681:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3681:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3674:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3674:6:5"
																		},
																		"nativeSrc": "3674:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3674:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3667:6:5"
																},
																"nativeSrc": "3667:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3667:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3656:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3656:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3604:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3628:5:5",
														"nodeType": "YulTypedName",
														"src": "3628:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3638:7:5",
														"nodeType": "YulTypedName",
														"src": "3638:7:5",
														"type": ""
													}
												],
												"src": "3604:90:5"
											},
											{
												"body": {
													"nativeSrc": "3759:50:5",
													"nodeType": "YulBlock",
													"src": "3759:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3776:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3776:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3796:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3796:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3781:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "3781:14:5"
																		},
																		"nativeSrc": "3781:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3769:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3769:6:5"
																},
																"nativeSrc": "3769:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3769:34:5"
															},
															"nativeSrc": "3769:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3769:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3700:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3747:5:5",
														"nodeType": "YulTypedName",
														"src": "3747:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3754:3:5",
														"nodeType": "YulTypedName",
														"src": "3754:3:5",
														"type": ""
													}
												],
												"src": "3700:109:5"
											},
											{
												"body": {
													"nativeSrc": "3907:118:5",
													"nodeType": "YulBlock",
													"src": "3907:118:5",
													"statements": [
														{
															"nativeSrc": "3917:26:5",
															"nodeType": "YulAssignment",
															"src": "3917:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3929:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3929:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3925:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3925:3:5"
																},
																"nativeSrc": "3925:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3925:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3917:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3917:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3991:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3991:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4004:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4015:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4015:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4000:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:5"
																		},
																		"nativeSrc": "4000:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3953:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "3953:37:5"
																},
																"nativeSrc": "3953:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3953:65:5"
															},
															"nativeSrc": "3953:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3953:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3815:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3879:9:5",
														"nodeType": "YulTypedName",
														"src": "3879:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3891:6:5",
														"nodeType": "YulTypedName",
														"src": "3891:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3902:4:5",
														"nodeType": "YulTypedName",
														"src": "3902:4:5",
														"type": ""
													}
												],
												"src": "3815:210:5"
											},
											{
												"body": {
													"nativeSrc": "4165:777:5",
													"nodeType": "YulBlock",
													"src": "4165:777:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4212:83:5",
																"nodeType": "YulBlock",
																"src": "4212:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4214:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "4214:77:5"
																			},
																			"nativeSrc": "4214:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4214:79:5"
																		},
																		"nativeSrc": "4214:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4214:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4186:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4186:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4195:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4195:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4182:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4182:3:5"
																		},
																		"nativeSrc": "4182:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4182:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4207:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4207:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4178:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4178:3:5"
																},
																"nativeSrc": "4178:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4178:33:5"
															},
															"nativeSrc": "4175:120:5",
															"nodeType": "YulIf",
															"src": "4175:120:5"
														},
														{
															"nativeSrc": "4305:117:5",
															"nodeType": "YulBlock",
															"src": "4305:117:5",
															"statements": [
																{
																	"nativeSrc": "4320:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4320:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4334:1:5",
																		"nodeType": "YulLiteral",
																		"src": "4334:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4324:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4324:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4349:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4349:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4384:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4384:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4395:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4395:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4380:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4380:3:5"
																				},
																				"nativeSrc": "4380:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4380:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4404:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4404:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4359:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4359:20:5"
																		},
																		"nativeSrc": "4359:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4359:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4349:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4349:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4432:118:5",
															"nodeType": "YulBlock",
															"src": "4432:118:5",
															"statements": [
																{
																	"nativeSrc": "4447:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4447:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4461:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4451:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4451:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4477:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4477:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4512:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4512:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4523:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4523:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4508:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4508:3:5"
																				},
																				"nativeSrc": "4508:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4508:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4532:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4532:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4487:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4487:20:5"
																		},
																		"nativeSrc": "4487:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4487:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4477:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4477:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4560:118:5",
															"nodeType": "YulBlock",
															"src": "4560:118:5",
															"statements": [
																{
																	"nativeSrc": "4575:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4575:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4589:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4589:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4579:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4579:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4605:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4605:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4640:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4640:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4651:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4651:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4636:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4636:3:5"
																				},
																				"nativeSrc": "4636:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4636:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4660:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4660:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4615:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4615:20:5"
																		},
																		"nativeSrc": "4615:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4615:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4605:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4605:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4688:118:5",
															"nodeType": "YulBlock",
															"src": "4688:118:5",
															"statements": [
																{
																	"nativeSrc": "4703:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4703:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4717:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4717:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4707:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4707:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4733:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4733:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4768:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4768:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4779:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4779:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4764:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4764:3:5"
																				},
																				"nativeSrc": "4764:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4764:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4788:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4788:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4743:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4743:20:5"
																		},
																		"nativeSrc": "4743:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4743:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4733:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4733:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4816:119:5",
															"nodeType": "YulBlock",
															"src": "4816:119:5",
															"statements": [
																{
																	"nativeSrc": "4831:17:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4831:17:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4845:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4845:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4835:6:5",
																			"nodeType": "YulTypedName",
																			"src": "4835:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4862:63:5",
																	"nodeType": "YulAssignment",
																	"src": "4862:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4897:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "4897:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4908:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "4908:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4893:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4893:3:5"
																				},
																				"nativeSrc": "4893:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4893:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4917:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4917:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4872:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "4872:20:5"
																		},
																		"nativeSrc": "4872:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4872:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4862:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "4862:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint256",
												"nativeSrc": "4031:911:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4103:9:5",
														"nodeType": "YulTypedName",
														"src": "4103:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4114:7:5",
														"nodeType": "YulTypedName",
														"src": "4114:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4126:6:5",
														"nodeType": "YulTypedName",
														"src": "4126:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4134:6:5",
														"nodeType": "YulTypedName",
														"src": "4134:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4142:6:5",
														"nodeType": "YulTypedName",
														"src": "4142:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4150:6:5",
														"nodeType": "YulTypedName",
														"src": "4150:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4158:6:5",
														"nodeType": "YulTypedName",
														"src": "4158:6:5",
														"type": ""
													}
												],
												"src": "4031:911:5"
											},
											{
												"body": {
													"nativeSrc": "5014:263:5",
													"nodeType": "YulBlock",
													"src": "5014:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5060:83:5",
																"nodeType": "YulBlock",
																"src": "5060:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5062:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5062:77:5"
																			},
																			"nativeSrc": "5062:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5062:79:5"
																		},
																		"nativeSrc": "5062:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5062:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5035:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5035:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5044:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5044:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5031:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5031:3:5"
																		},
																		"nativeSrc": "5031:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5031:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5056:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5056:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5027:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5027:3:5"
																},
																"nativeSrc": "5027:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5027:32:5"
															},
															"nativeSrc": "5024:119:5",
															"nodeType": "YulIf",
															"src": "5024:119:5"
														},
														{
															"nativeSrc": "5153:117:5",
															"nodeType": "YulBlock",
															"src": "5153:117:5",
															"statements": [
																{
																	"nativeSrc": "5168:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5168:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5182:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5182:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5172:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5172:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5197:63:5",
																	"nodeType": "YulAssignment",
																	"src": "5197:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5232:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5232:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5243:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5243:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5228:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5228:3:5"
																				},
																				"nativeSrc": "5228:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5228:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5252:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5252:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5207:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "5207:20:5"
																		},
																		"nativeSrc": "5207:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5207:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5197:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5197:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4948:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4984:9:5",
														"nodeType": "YulTypedName",
														"src": "4984:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4995:7:5",
														"nodeType": "YulTypedName",
														"src": "4995:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5007:6:5",
														"nodeType": "YulTypedName",
														"src": "5007:6:5",
														"type": ""
													}
												],
												"src": "4948:329:5"
											},
											{
												"body": {
													"nativeSrc": "5348:53:5",
													"nodeType": "YulBlock",
													"src": "5348:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5365:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5365:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5388:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "5388:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5370:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "5370:17:5"
																		},
																		"nativeSrc": "5370:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5370:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5358:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:5"
																},
																"nativeSrc": "5358:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5358:37:5"
															},
															"nativeSrc": "5358:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "5358:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5283:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5336:5:5",
														"nodeType": "YulTypedName",
														"src": "5336:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5343:3:5",
														"nodeType": "YulTypedName",
														"src": "5343:3:5",
														"type": ""
													}
												],
												"src": "5283:118:5"
											},
											{
												"body": {
													"nativeSrc": "5505:124:5",
													"nodeType": "YulBlock",
													"src": "5505:124:5",
													"statements": [
														{
															"nativeSrc": "5515:26:5",
															"nodeType": "YulAssignment",
															"src": "5515:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5527:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5527:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5538:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5538:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5523:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:5"
																},
																"nativeSrc": "5523:18:5",
																"nodeType": "YulFunctionCall",
																"src": "5523:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5515:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5515:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5595:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5595:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5608:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5608:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5619:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5619:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5604:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:5"
																		},
																		"nativeSrc": "5604:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5551:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "5551:43:5"
																},
																"nativeSrc": "5551:71:5",
																"nodeType": "YulFunctionCall",
																"src": "5551:71:5"
															},
															"nativeSrc": "5551:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "5551:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5407:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5477:9:5",
														"nodeType": "YulTypedName",
														"src": "5477:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5489:6:5",
														"nodeType": "YulTypedName",
														"src": "5489:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5500:4:5",
														"nodeType": "YulTypedName",
														"src": "5500:4:5",
														"type": ""
													}
												],
												"src": "5407:222:5"
											},
											{
												"body": {
													"nativeSrc": "5730:73:5",
													"nodeType": "YulBlock",
													"src": "5730:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5747:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5747:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5752:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5752:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5740:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5740:6:5"
																},
																"nativeSrc": "5740:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5740:19:5"
															},
															"nativeSrc": "5740:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "5740:19:5"
														},
														{
															"nativeSrc": "5768:29:5",
															"nodeType": "YulAssignment",
															"src": "5768:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5787:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5787:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5792:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5792:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5783:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5783:3:5"
																},
																"nativeSrc": "5783:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5783:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5768:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "5768:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "5635:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5702:3:5",
														"nodeType": "YulTypedName",
														"src": "5702:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5707:6:5",
														"nodeType": "YulTypedName",
														"src": "5707:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5718:11:5",
														"nodeType": "YulTypedName",
														"src": "5718:11:5",
														"type": ""
													}
												],
												"src": "5635:168:5"
											},
											{
												"body": {
													"nativeSrc": "5873:84:5",
													"nodeType": "YulBlock",
													"src": "5873:84:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5897:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5897:3:5"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5902:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5902:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5907:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5907:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5884:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "5884:12:5"
																},
																"nativeSrc": "5884:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5884:30:5"
															},
															"nativeSrc": "5884:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5884:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5934:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5934:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5939:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5939:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:5"
																		},
																		"nativeSrc": "5930:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5930:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5948:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5923:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5923:6:5"
																},
																"nativeSrc": "5923:27:5",
																"nodeType": "YulFunctionCall",
																"src": "5923:27:5"
															},
															"nativeSrc": "5923:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "5923:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5809:148:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5855:3:5",
														"nodeType": "YulTypedName",
														"src": "5855:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5860:3:5",
														"nodeType": "YulTypedName",
														"src": "5860:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5865:6:5",
														"nodeType": "YulTypedName",
														"src": "5865:6:5",
														"type": ""
													}
												],
												"src": "5809:148:5"
											},
											{
												"body": {
													"nativeSrc": "6011:54:5",
													"nodeType": "YulBlock",
													"src": "6011:54:5",
													"statements": [
														{
															"nativeSrc": "6021:38:5",
															"nodeType": "YulAssignment",
															"src": "6021:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6039:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6039:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6046:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6046:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6035:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:5"
																		},
																		"nativeSrc": "6035:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6055:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6055:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6051:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6051:3:5"
																		},
																		"nativeSrc": "6051:7:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6051:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6031:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6031:3:5"
																},
																"nativeSrc": "6031:28:5",
																"nodeType": "YulFunctionCall",
																"src": "6031:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6021:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5963:102:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5994:5:5",
														"nodeType": "YulTypedName",
														"src": "5994:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6004:6:5",
														"nodeType": "YulTypedName",
														"src": "6004:6:5",
														"type": ""
													}
												],
												"src": "5963:102:5"
											},
											{
												"body": {
													"nativeSrc": "6193:214:5",
													"nodeType": "YulBlock",
													"src": "6193:214:5",
													"statements": [
														{
															"nativeSrc": "6203:77:5",
															"nodeType": "YulAssignment",
															"src": "6203:77:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6268:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6268:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6273:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6273:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6210:57:5",
																	"nodeType": "YulIdentifier",
																	"src": "6210:57:5"
																},
																"nativeSrc": "6210:70:5",
																"nodeType": "YulFunctionCall",
																"src": "6210:70:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6203:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6203:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6327:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6327:5:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6334:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6334:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6339:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6339:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6290:36:5",
																	"nodeType": "YulIdentifier",
																	"src": "6290:36:5"
																},
																"nativeSrc": "6290:56:5",
																"nodeType": "YulFunctionCall",
																"src": "6290:56:5"
															},
															"nativeSrc": "6290:56:5",
															"nodeType": "YulExpressionStatement",
															"src": "6290:56:5"
														},
														{
															"nativeSrc": "6355:46:5",
															"nodeType": "YulAssignment",
															"src": "6355:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6366:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6366:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6393:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6393:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6371:21:5",
																			"nodeType": "YulIdentifier",
																			"src": "6371:21:5"
																		},
																		"nativeSrc": "6371:29:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6371:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6362:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6362:3:5"
																},
																"nativeSrc": "6362:39:5",
																"nodeType": "YulFunctionCall",
																"src": "6362:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6355:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6355:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "6093:314:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6166:5:5",
														"nodeType": "YulTypedName",
														"src": "6166:5:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6173:6:5",
														"nodeType": "YulTypedName",
														"src": "6173:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6181:3:5",
														"nodeType": "YulTypedName",
														"src": "6181:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6189:3:5",
														"nodeType": "YulTypedName",
														"src": "6189:3:5",
														"type": ""
													}
												],
												"src": "6093:314:5"
											},
											{
												"body": {
													"nativeSrc": "6567:285:5",
													"nodeType": "YulBlock",
													"src": "6567:285:5",
													"statements": [
														{
															"nativeSrc": "6577:26:5",
															"nodeType": "YulAssignment",
															"src": "6577:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6589:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6589:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6600:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6600:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6585:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:5"
																},
																"nativeSrc": "6585:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6585:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6577:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6577:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6624:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6624:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6635:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6635:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6620:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:5"
																		},
																		"nativeSrc": "6620:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6643:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6643:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6649:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6639:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:5"
																		},
																		"nativeSrc": "6639:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6639:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6613:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6613:6:5"
																},
																"nativeSrc": "6613:47:5",
																"nodeType": "YulFunctionCall",
																"src": "6613:47:5"
															},
															"nativeSrc": "6613:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "6613:47:5"
														},
														{
															"nativeSrc": "6669:94:5",
															"nodeType": "YulAssignment",
															"src": "6669:94:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6749:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6749:6:5"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6758:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "6758:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6677:63:5",
																	"nodeType": "YulIdentifier",
																	"src": "6677:63:5"
																},
																"nativeSrc": "6677:86:5",
																"nodeType": "YulFunctionCall",
																"src": "6677:86:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6669:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6669:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6817:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6817:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6830:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6830:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6841:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6841:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6826:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6826:3:5"
																		},
																		"nativeSrc": "6826:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6826:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6773:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6773:43:5"
																},
																"nativeSrc": "6773:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6773:72:5"
															},
															"nativeSrc": "6773:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6773:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "6413:439:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6523:9:5",
														"nodeType": "YulTypedName",
														"src": "6523:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6535:6:5",
														"nodeType": "YulTypedName",
														"src": "6535:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6543:6:5",
														"nodeType": "YulTypedName",
														"src": "6543:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6551:6:5",
														"nodeType": "YulTypedName",
														"src": "6551:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6562:4:5",
														"nodeType": "YulTypedName",
														"src": "6562:4:5",
														"type": ""
													}
												],
												"src": "6413:439:5"
											},
											{
												"body": {
													"nativeSrc": "7012:288:5",
													"nodeType": "YulBlock",
													"src": "7012:288:5",
													"statements": [
														{
															"nativeSrc": "7022:26:5",
															"nodeType": "YulAssignment",
															"src": "7022:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7034:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "7034:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7045:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7045:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7030:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7030:3:5"
																},
																"nativeSrc": "7030:18:5",
																"nodeType": "YulFunctionCall",
																"src": "7030:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7022:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7022:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7102:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7102:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7115:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7115:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7126:1:5",
																				"nodeType": "YulLiteral",
																				"src": "7126:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7111:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7111:3:5"
																		},
																		"nativeSrc": "7111:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7111:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7058:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7058:43:5"
																},
																"nativeSrc": "7058:71:5",
																"nodeType": "YulFunctionCall",
																"src": "7058:71:5"
															},
															"nativeSrc": "7058:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "7058:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7183:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7183:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7196:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7196:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7207:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7207:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7192:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7192:3:5"
																		},
																		"nativeSrc": "7192:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7192:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7139:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7139:43:5"
																},
																"nativeSrc": "7139:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7139:72:5"
															},
															"nativeSrc": "7139:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7139:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7265:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7265:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7278:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7278:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7289:2:5",
																				"nodeType": "YulLiteral",
																				"src": "7289:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7274:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7274:3:5"
																		},
																		"nativeSrc": "7274:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7274:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7221:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7221:43:5"
																},
																"nativeSrc": "7221:72:5",
																"nodeType": "YulFunctionCall",
																"src": "7221:72:5"
															},
															"nativeSrc": "7221:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "7221:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6858:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6968:9:5",
														"nodeType": "YulTypedName",
														"src": "6968:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6980:6:5",
														"nodeType": "YulTypedName",
														"src": "6980:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6988:6:5",
														"nodeType": "YulTypedName",
														"src": "6988:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6996:6:5",
														"nodeType": "YulTypedName",
														"src": "6996:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7007:4:5",
														"nodeType": "YulTypedName",
														"src": "7007:4:5",
														"type": ""
													}
												],
												"src": "6858:442:5"
											},
											{
												"body": {
													"nativeSrc": "7346:76:5",
													"nodeType": "YulBlock",
													"src": "7346:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7400:16:5",
																"nodeType": "YulBlock",
																"src": "7400:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7409:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7409:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7412:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7412:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7402:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7402:6:5"
																			},
																			"nativeSrc": "7402:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7402:12:5"
																		},
																		"nativeSrc": "7402:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7402:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7369:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7369:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7391:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7391:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7376:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "7376:14:5"
																				},
																				"nativeSrc": "7376:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7376:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7366:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7366:2:5"
																		},
																		"nativeSrc": "7366:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7366:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7359:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7359:6:5"
																},
																"nativeSrc": "7359:40:5",
																"nodeType": "YulFunctionCall",
																"src": "7359:40:5"
															},
															"nativeSrc": "7356:60:5",
															"nodeType": "YulIf",
															"src": "7356:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7306:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7339:5:5",
														"nodeType": "YulTypedName",
														"src": "7339:5:5",
														"type": ""
													}
												],
												"src": "7306:116:5"
											},
											{
												"body": {
													"nativeSrc": "7488:77:5",
													"nodeType": "YulBlock",
													"src": "7488:77:5",
													"statements": [
														{
															"nativeSrc": "7498:22:5",
															"nodeType": "YulAssignment",
															"src": "7498:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7513:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7513:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7507:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7507:5:5"
																},
																"nativeSrc": "7507:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7507:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7498:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7498:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7553:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7553:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7529:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7529:23:5"
																},
																"nativeSrc": "7529:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7529:30:5"
															},
															"nativeSrc": "7529:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7529:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7428:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7466:6:5",
														"nodeType": "YulTypedName",
														"src": "7466:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7474:3:5",
														"nodeType": "YulTypedName",
														"src": "7474:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7482:5:5",
														"nodeType": "YulTypedName",
														"src": "7482:5:5",
														"type": ""
													}
												],
												"src": "7428:137:5"
											},
											{
												"body": {
													"nativeSrc": "7645:271:5",
													"nodeType": "YulBlock",
													"src": "7645:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7691:83:5",
																"nodeType": "YulBlock",
																"src": "7691:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7693:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "7693:77:5"
																			},
																			"nativeSrc": "7693:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7693:79:5"
																		},
																		"nativeSrc": "7693:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7693:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7666:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7666:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7675:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7662:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7662:3:5"
																		},
																		"nativeSrc": "7662:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7662:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7687:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7687:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7658:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7658:3:5"
																},
																"nativeSrc": "7658:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7658:32:5"
															},
															"nativeSrc": "7655:119:5",
															"nodeType": "YulIf",
															"src": "7655:119:5"
														},
														{
															"nativeSrc": "7784:125:5",
															"nodeType": "YulBlock",
															"src": "7784:125:5",
															"statements": [
																{
																	"nativeSrc": "7799:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7799:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7813:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7813:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7803:6:5",
																			"nodeType": "YulTypedName",
																			"src": "7803:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7828:71:5",
																	"nodeType": "YulAssignment",
																	"src": "7828:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7871:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "7871:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7882:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7882:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7867:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "7867:3:5"
																				},
																				"nativeSrc": "7867:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7867:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7891:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7891:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7838:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "7838:28:5"
																		},
																		"nativeSrc": "7838:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7838:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7828:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7828:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7571:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7615:9:5",
														"nodeType": "YulTypedName",
														"src": "7615:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7626:7:5",
														"nodeType": "YulTypedName",
														"src": "7626:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7638:6:5",
														"nodeType": "YulTypedName",
														"src": "7638:6:5",
														"type": ""
													}
												],
												"src": "7571:345:5"
											},
											{
												"body": {
													"nativeSrc": "8048:206:5",
													"nodeType": "YulBlock",
													"src": "8048:206:5",
													"statements": [
														{
															"nativeSrc": "8058:26:5",
															"nodeType": "YulAssignment",
															"src": "8058:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8070:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "8070:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8081:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8081:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8066:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8066:3:5"
																},
																"nativeSrc": "8066:18:5",
																"nodeType": "YulFunctionCall",
																"src": "8066:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8058:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8058:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8138:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8138:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8151:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8151:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8162:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8162:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8147:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:5"
																		},
																		"nativeSrc": "8147:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8147:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8094:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8094:43:5"
																},
																"nativeSrc": "8094:71:5",
																"nodeType": "YulFunctionCall",
																"src": "8094:71:5"
															},
															"nativeSrc": "8094:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "8094:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8219:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8219:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8232:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8243:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8243:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8228:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:5"
																		},
																		"nativeSrc": "8228:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8228:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8175:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "8175:43:5"
																},
																"nativeSrc": "8175:72:5",
																"nodeType": "YulFunctionCall",
																"src": "8175:72:5"
															},
															"nativeSrc": "8175:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "8175:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7922:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8012:9:5",
														"nodeType": "YulTypedName",
														"src": "8012:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8024:6:5",
														"nodeType": "YulTypedName",
														"src": "8024:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8032:6:5",
														"nodeType": "YulTypedName",
														"src": "8032:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8043:4:5",
														"nodeType": "YulTypedName",
														"src": "8043:4:5",
														"type": ""
													}
												],
												"src": "7922:332:5"
											},
											{
												"body": {
													"nativeSrc": "8356:73:5",
													"nodeType": "YulBlock",
													"src": "8356:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8373:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8373:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8378:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8378:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8366:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8366:6:5"
																},
																"nativeSrc": "8366:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8366:19:5"
															},
															"nativeSrc": "8366:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "8366:19:5"
														},
														{
															"nativeSrc": "8394:29:5",
															"nodeType": "YulAssignment",
															"src": "8394:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8413:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8413:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8418:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8418:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8409:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8409:3:5"
																},
																"nativeSrc": "8409:14:5",
																"nodeType": "YulFunctionCall",
																"src": "8409:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8394:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8394:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8260:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8328:3:5",
														"nodeType": "YulTypedName",
														"src": "8328:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8333:6:5",
														"nodeType": "YulTypedName",
														"src": "8333:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8344:11:5",
														"nodeType": "YulTypedName",
														"src": "8344:11:5",
														"type": ""
													}
												],
												"src": "8260:169:5"
											},
											{
												"body": {
													"nativeSrc": "8541:56:5",
													"nodeType": "YulBlock",
													"src": "8541:56:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8563:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8563:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8571:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8571:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8559:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8559:3:5"
																		},
																		"nativeSrc": "8559:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8559:14:5"
																	},
																	{
																		"hexValue": "5a65726f2041646472657373",
																		"kind": "string",
																		"nativeSrc": "8575:14:5",
																		"nodeType": "YulLiteral",
																		"src": "8575:14:5",
																		"type": "",
																		"value": "Zero Address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8552:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8552:6:5"
																},
																"nativeSrc": "8552:38:5",
																"nodeType": "YulFunctionCall",
																"src": "8552:38:5"
															},
															"nativeSrc": "8552:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "8552:38:5"
														}
													]
												},
												"name": "store_literal_in_memory_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be",
												"nativeSrc": "8435:162:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8533:6:5",
														"nodeType": "YulTypedName",
														"src": "8533:6:5",
														"type": ""
													}
												],
												"src": "8435:162:5"
											},
											{
												"body": {
													"nativeSrc": "8749:220:5",
													"nodeType": "YulBlock",
													"src": "8749:220:5",
													"statements": [
														{
															"nativeSrc": "8759:74:5",
															"nodeType": "YulAssignment",
															"src": "8759:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8825:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8825:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8830:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8830:2:5",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8766:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8766:58:5"
																},
																"nativeSrc": "8766:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8766:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8759:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8759:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8931:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8931:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be",
																	"nativeSrc": "8842:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8842:88:5"
																},
																"nativeSrc": "8842:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8842:93:5"
															},
															"nativeSrc": "8842:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8842:93:5"
														},
														{
															"nativeSrc": "8944:19:5",
															"nodeType": "YulAssignment",
															"src": "8944:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8955:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8955:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8960:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8960:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8951:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8951:3:5"
																},
																"nativeSrc": "8951:12:5",
																"nodeType": "YulFunctionCall",
																"src": "8951:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8944:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8944:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8603:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8737:3:5",
														"nodeType": "YulTypedName",
														"src": "8737:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8745:3:5",
														"nodeType": "YulTypedName",
														"src": "8745:3:5",
														"type": ""
													}
												],
												"src": "8603:366:5"
											},
											{
												"body": {
													"nativeSrc": "9146:248:5",
													"nodeType": "YulBlock",
													"src": "9146:248:5",
													"statements": [
														{
															"nativeSrc": "9156:26:5",
															"nodeType": "YulAssignment",
															"src": "9156:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9168:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9168:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9179:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9179:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9164:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9164:3:5"
																},
																"nativeSrc": "9164:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9164:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9156:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9156:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9203:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9214:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9214:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9199:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:5"
																		},
																		"nativeSrc": "9199:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9199:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9222:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9222:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9228:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9228:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9218:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9218:3:5"
																		},
																		"nativeSrc": "9218:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9218:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9192:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:5"
																},
																"nativeSrc": "9192:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9192:47:5"
															},
															"nativeSrc": "9192:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9192:47:5"
														},
														{
															"nativeSrc": "9248:139:5",
															"nodeType": "YulAssignment",
															"src": "9248:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9382:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9382:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9256:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9256:124:5"
																},
																"nativeSrc": "9256:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9256:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9248:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9248:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8975:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9126:9:5",
														"nodeType": "YulTypedName",
														"src": "9126:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9141:4:5",
														"nodeType": "YulTypedName",
														"src": "9141:4:5",
														"type": ""
													}
												],
												"src": "8975:419:5"
											},
											{
												"body": {
													"nativeSrc": "9463:80:5",
													"nodeType": "YulBlock",
													"src": "9463:80:5",
													"statements": [
														{
															"nativeSrc": "9473:22:5",
															"nodeType": "YulAssignment",
															"src": "9473:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9488:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9482:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9482:5:5"
																},
																"nativeSrc": "9482:13:5",
																"nodeType": "YulFunctionCall",
																"src": "9482:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9473:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9473:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9531:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9531:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9504:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "9504:26:5"
																},
																"nativeSrc": "9504:33:5",
																"nodeType": "YulFunctionCall",
																"src": "9504:33:5"
															},
															"nativeSrc": "9504:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "9504:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9400:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9441:6:5",
														"nodeType": "YulTypedName",
														"src": "9441:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9449:3:5",
														"nodeType": "YulTypedName",
														"src": "9449:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9457:5:5",
														"nodeType": "YulTypedName",
														"src": "9457:5:5",
														"type": ""
													}
												],
												"src": "9400:143:5"
											},
											{
												"body": {
													"nativeSrc": "9626:274:5",
													"nodeType": "YulBlock",
													"src": "9626:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9672:83:5",
																"nodeType": "YulBlock",
																"src": "9672:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9674:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "9674:77:5"
																			},
																			"nativeSrc": "9674:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9674:79:5"
																		},
																		"nativeSrc": "9674:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9674:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9647:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9647:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9656:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9656:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9643:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9643:3:5"
																		},
																		"nativeSrc": "9643:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9643:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9668:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9668:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9639:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9639:3:5"
																},
																"nativeSrc": "9639:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9639:32:5"
															},
															"nativeSrc": "9636:119:5",
															"nodeType": "YulIf",
															"src": "9636:119:5"
														},
														{
															"nativeSrc": "9765:128:5",
															"nodeType": "YulBlock",
															"src": "9765:128:5",
															"statements": [
																{
																	"nativeSrc": "9780:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9780:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9794:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9794:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9784:6:5",
																			"nodeType": "YulTypedName",
																			"src": "9784:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9809:74:5",
																	"nodeType": "YulAssignment",
																	"src": "9809:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9855:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "9855:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9866:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "9866:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9851:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9851:3:5"
																				},
																				"nativeSrc": "9851:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9851:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9875:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9875:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "9819:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "9819:31:5"
																		},
																		"nativeSrc": "9819:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9819:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9809:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "9809:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9549:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9596:9:5",
														"nodeType": "YulTypedName",
														"src": "9596:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9607:7:5",
														"nodeType": "YulTypedName",
														"src": "9607:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9619:6:5",
														"nodeType": "YulTypedName",
														"src": "9619:6:5",
														"type": ""
													}
												],
												"src": "9549:351:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero Address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c8063715018a611610064578063715018a6146101315780638da5cb5b1461013b578063b9c37fd114610159578063c31ee12e14610189578063f2fde38b146101a757610091565b80630f2a7dd3146100955780631f7eff6d146100b3578063225b0118146100e35780632e01558414610113575b5f80fd5b61009d6101c3565b6040516100aa91906108b2565b60405180910390f35b6100cd60048036038101906100c89190610991565b6101e8565b6040516100da9190610a41565b60405180910390f35b6100fd60048036038101906100f89190610a5a565b610335565b60405161010a9190610a41565b60405180910390f35b61011b61047f565b60405161012891906108b2565b60405180910390f35b6101396104a4565b005b6101436104b7565b60405161015091906108b2565b60405180910390f35b610173600480360381019061016e9190610ad1565b6104de565b6040516101809190610b0b565b60405180910390f35b6101916105f7565b60405161019e9190610b0b565b60405180910390f35b6101c160048036038101906101bc9190610ad1565b6106a0565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6101f1610724565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663930fc0068686866040518463ffffffff1660e01b815260040161025393929190610b7e565b5f604051808303815f87803b15801561026a575f80fd5b505af115801561027c573d5f803e3d5ffd5b505050505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8b8b8b6040518463ffffffff1660e01b81526004016102e393929190610bae565b6020604051808303815f875af11580156102ff573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103239190610c0d565b90508093505050509695505050505050565b5f61033e610724565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166363d67dff85856040518363ffffffff1660e01b815260040161039e929190610c38565b5f604051808303815f87803b1580156103b5575f80fd5b505af11580156103c7573d5f803e3d5ffd5b505050505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8a8a8a6040518463ffffffff1660e01b815260040161042e93929190610bae565b6020604051808303815f875af115801561044a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061046e9190610c0d565b905080935050505095945050505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104ac610724565b6104b55f6107ab565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054490610cb9565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b81526004016105ac91906108b2565b602060405180830381865afa1580156105c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105eb9190610ceb565b90508092505050919050565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161065791906108b2565b602060405180830381865afa158015610672573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106969190610ceb565b9050809250505090565b6106a8610724565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610718575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161070f91906108b2565b60405180910390fd5b610721816107ab565b50565b61072c61086c565b73ffffffffffffffffffffffffffffffffffffffff1661074a6104b7565b73ffffffffffffffffffffffffffffffffffffffff16146107a95761076d61086c565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107a091906108b2565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61089c82610873565b9050919050565b6108ac81610892565b82525050565b5f6020820190506108c55f8301846108a3565b92915050565b5f80fd5b5f80fd5b6108dc81610892565b81146108e6575f80fd5b50565b5f813590506108f7816108d3565b92915050565b5f819050919050565b61090f816108fd565b8114610919575f80fd5b50565b5f8135905061092a81610906565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261095157610950610930565b5b8235905067ffffffffffffffff81111561096e5761096d610934565b5b60208301915083600182028301111561098a57610989610938565b5b9250929050565b5f805f805f8060a087890312156109ab576109aa6108cb565b5b5f6109b889828a016108e9565b96505060206109c989828a016108e9565b95505060406109da89828a0161091c565b945050606087013567ffffffffffffffff8111156109fb576109fa6108cf565b5b610a0789828a0161093c565b93509350506080610a1a89828a0161091c565b9150509295509295509295565b5f8115159050919050565b610a3b81610a27565b82525050565b5f602082019050610a545f830184610a32565b92915050565b5f805f805f60a08688031215610a7357610a726108cb565b5b5f610a80888289016108e9565b9550506020610a91888289016108e9565b9450506040610aa28882890161091c565b9350506060610ab3888289016108e9565b9250506080610ac48882890161091c565b9150509295509295909350565b5f60208284031215610ae657610ae56108cb565b5b5f610af3848285016108e9565b91505092915050565b610b05816108fd565b82525050565b5f602082019050610b1e5f830184610afc565b92915050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f610b5d8385610b24565b9350610b6a838584610b34565b610b7383610b42565b840190509392505050565b5f6040820190508181035f830152610b97818587610b52565b9050610ba66020830184610afc565b949350505050565b5f606082019050610bc15f8301866108a3565b610bce60208301856108a3565b610bdb6040830184610afc565b949350505050565b610bec81610a27565b8114610bf6575f80fd5b50565b5f81519050610c0781610be3565b92915050565b5f60208284031215610c2257610c216108cb565b5b5f610c2f84828501610bf9565b91505092915050565b5f604082019050610c4b5f8301856108a3565b610c586020830184610afc565b9392505050565b5f82825260208201905092915050565b7f5a65726f204164647265737300000000000000000000000000000000000000005f82015250565b5f610ca3600c83610c5f565b9150610cae82610c6f565b602082019050919050565b5f6020820190508181035f830152610cd081610c97565b9050919050565b5f81519050610ce581610906565b92915050565b5f60208284031215610d0057610cff6108cb565b5b5f610d0d84828501610cd7565b9150509291505056fea2646970667358221220a5431dc835aa19a717df86a327c536225caa762b5e6a828930b6d986ed85df4f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xB9C37FD1 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xC31EE12E EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xF2A7DD3 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1F7EFF6D EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x225B0118 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x2E015584 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x991 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xA5A JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xA41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x4B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xAD1 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1F1 PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x930FC006 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB7E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x33E PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x63D67DFF DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP3 SWAP2 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x44A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46E SWAP2 SWAP1 PUSH2 0xC0D JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4AC PUSH2 0x724 JUMP JUMPDEST PUSH2 0x4B5 PUSH0 PUSH2 0x7AB JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x544 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EB SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x724 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x718 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70F SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x721 DUP2 PUSH2 0x7AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x72C PUSH2 0x86C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x74A PUSH2 0x4B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A9 JUMPI PUSH2 0x76D PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x89C DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AC DUP2 PUSH2 0x892 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x8A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x8DC DUP2 PUSH2 0x892 JUMP JUMPDEST DUP2 EQ PUSH2 0x8E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8F7 DUP2 PUSH2 0x8D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90F DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP2 EQ PUSH2 0x919 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x92A DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x951 JUMPI PUSH2 0x950 PUSH2 0x930 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96E JUMPI PUSH2 0x96D PUSH2 0x934 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0x938 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x9AB JUMPI PUSH2 0x9AA PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9B8 DUP10 DUP3 DUP11 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x9C9 DUP10 DUP3 DUP11 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x9DA DUP10 DUP3 DUP11 ADD PUSH2 0x91C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FB JUMPI PUSH2 0x9FA PUSH2 0x8CF JUMP JUMPDEST JUMPDEST PUSH2 0xA07 DUP10 DUP3 DUP11 ADD PUSH2 0x93C JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x80 PUSH2 0xA1A DUP10 DUP3 DUP11 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA3B DUP2 PUSH2 0xA27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA54 PUSH0 DUP4 ADD DUP5 PUSH2 0xA32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA80 DUP9 DUP3 DUP10 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA91 DUP9 DUP3 DUP10 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xAA2 DUP9 DUP3 DUP10 ADD PUSH2 0x91C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xAB3 DUP9 DUP3 DUP10 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xAC4 DUP9 DUP3 DUP10 ADD PUSH2 0x91C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAE6 JUMPI PUSH2 0xAE5 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAF3 DUP5 DUP3 DUP6 ADD PUSH2 0x8E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0x8FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1E PUSH0 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB5D DUP4 DUP6 PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH2 0xB6A DUP4 DUP6 DUP5 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xB73 DUP4 PUSH2 0xB42 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB97 DUP2 DUP6 DUP8 PUSH2 0xB52 JUMP JUMPDEST SWAP1 POP PUSH2 0xBA6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBC1 PUSH0 DUP4 ADD DUP7 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0xBCE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0xBDB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xBEC DUP2 PUSH2 0xA27 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC07 DUP2 PUSH2 0xBE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC22 JUMPI PUSH2 0xC21 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC2F DUP5 DUP3 DUP6 ADD PUSH2 0xBF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4B PUSH0 DUP4 ADD DUP6 PUSH2 0x8A3 JUMP JUMPDEST PUSH2 0xC58 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5A65726F20416464726573730000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCA3 PUSH1 0xC DUP4 PUSH2 0xC5F JUMP JUMPDEST SWAP2 POP PUSH2 0xCAE DUP3 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCD0 DUP2 PUSH2 0xC97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE5 DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD00 JUMPI PUSH2 0xCFF PUSH2 0x8CB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD0D DUP5 DUP3 DUP6 ADD PUSH2 0xCD7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 NUMBER SAR 0xC8 CALLDATALOAD 0xAA NOT 0xA7 OR 0xDF DUP7 LOG3 0x27 0xC5 CALLDATASIZE 0x22 TLOAD 0xAA PUSH23 0x2B5E6A828930B6D986ED85DF4F64736F6C634300081A00 CALLER ",
							"sourceMap": "358:2396:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:463;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:464;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;441:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1176:335:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;846:324;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;515:28:3;;;;;;;;;;;;;:::o;1819:463::-;1979:4;1531:13:0;:11;:13::i;:::-;1999:24:3::1;2041:13;;;;;;;;;;;1999:56;;2065:9;:27;;;2093:21;;2116:6;2065:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2134:19;2163;;;;;;;;;;;2134:49;;2193:12;2208;:25;;;2234:4;2240:2;2244:5;2208:42;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2193:57;;2268:7;2261:14;;;;;1819:463:::0;;;;;;;;:::o;2288:464::-;2445:4;1531:13:0;:11;:13::i;:::-;2465:24:3::1;2507:13;;;;;;;;;;;2465:56;;2531:9;:31;;;2563:21;2586:6;2531:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2604:19;2633;;;;;;;;;;;2604:49;;2663:12;2678;:25;;;2704:4;2710:2;2714:5;2678:42;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2663:57;;2738:7;2731:14;;;;;2288:464:::0;;;;;;;:::o;441:34::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1176:335:3:-;1266:15;1325:1;1305:22;;:8;:22;;;1297:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1354:19;1383;;;;;;;;;;;1354:49;;1413:23;1439:12;:22;;;1462:8;1439:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1413:58;;1489:15;1482:22;;;;1176:335;;;:::o;846:324::-;895:15;968:19;997;;;;;;;;;;;968:49;;1027:23;1053:12;:22;;;1076:10;1053:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1027:60;;1148:15;1141:22;;;;846:324;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:117::-;1658:1;1655;1648:12;1672:117;1781:1;1778;1771:12;1795:117;1904:1;1901;1894:12;1931:552;1988:8;1998:6;2048:3;2041:4;2033:6;2029:17;2025:27;2015:122;;2056:79;;:::i;:::-;2015:122;2169:6;2156:20;2146:30;;2199:18;2191:6;2188:30;2185:117;;;2221:79;;:::i;:::-;2185:117;2335:4;2327:6;2323:17;2311:29;;2389:3;2381:4;2373:6;2369:17;2359:8;2355:32;2352:41;2349:128;;;2396:79;;:::i;:::-;2349:128;1931:552;;;;;:::o;2489:1109::-;2595:6;2603;2611;2619;2627;2635;2684:3;2672:9;2663:7;2659:23;2655:33;2652:120;;;2691:79;;:::i;:::-;2652:120;2811:1;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2782:117;2938:2;2964:53;3009:7;3000:6;2989:9;2985:22;2964:53;:::i;:::-;2954:63;;2909:118;3066:2;3092:53;3137:7;3128:6;3117:9;3113:22;3092:53;:::i;:::-;3082:63;;3037:118;3222:2;3211:9;3207:18;3194:32;3253:18;3245:6;3242:30;3239:117;;;3275:79;;:::i;:::-;3239:117;3388:64;3444:7;3435:6;3424:9;3420:22;3388:64;:::i;:::-;3370:82;;;;3165:297;3501:3;3528:53;3573:7;3564:6;3553:9;3549:22;3528:53;:::i;:::-;3518:63;;3472:119;2489:1109;;;;;;;;:::o;3604:90::-;3638:7;3681:5;3674:13;3667:21;3656:32;;3604:90;;;:::o;3700:109::-;3781:21;3796:5;3781:21;:::i;:::-;3776:3;3769:34;3700:109;;:::o;3815:210::-;3902:4;3940:2;3929:9;3925:18;3917:26;;3953:65;4015:1;4004:9;4000:17;3991:6;3953:65;:::i;:::-;3815:210;;;;:::o;4031:911::-;4126:6;4134;4142;4150;4158;4207:3;4195:9;4186:7;4182:23;4178:33;4175:120;;;4214:79;;:::i;:::-;4175:120;4334:1;4359:53;4404:7;4395:6;4384:9;4380:22;4359:53;:::i;:::-;4349:63;;4305:117;4461:2;4487:53;4532:7;4523:6;4512:9;4508:22;4487:53;:::i;:::-;4477:63;;4432:118;4589:2;4615:53;4660:7;4651:6;4640:9;4636:22;4615:53;:::i;:::-;4605:63;;4560:118;4717:2;4743:53;4788:7;4779:6;4768:9;4764:22;4743:53;:::i;:::-;4733:63;;4688:118;4845:3;4872:53;4917:7;4908:6;4897:9;4893:22;4872:53;:::i;:::-;4862:63;;4816:119;4031:911;;;;;;;;:::o;4948:329::-;5007:6;5056:2;5044:9;5035:7;5031:23;5027:32;5024:119;;;5062:79;;:::i;:::-;5024:119;5182:1;5207:53;5252:7;5243:6;5232:9;5228:22;5207:53;:::i;:::-;5197:63;;5153:117;4948:329;;;;:::o;5283:118::-;5370:24;5388:5;5370:24;:::i;:::-;5365:3;5358:37;5283:118;;:::o;5407:222::-;5500:4;5538:2;5527:9;5523:18;5515:26;;5551:71;5619:1;5608:9;5604:17;5595:6;5551:71;:::i;:::-;5407:222;;;;:::o;5635:168::-;5718:11;5752:6;5747:3;5740:19;5792:4;5787:3;5783:14;5768:29;;5635:168;;;;:::o;5809:148::-;5907:6;5902:3;5897;5884:30;5948:1;5939:6;5934:3;5930:16;5923:27;5809:148;;;:::o;5963:102::-;6004:6;6055:2;6051:7;6046:2;6039:5;6035:14;6031:28;6021:38;;5963:102;;;:::o;6093:314::-;6189:3;6210:70;6273:6;6268:3;6210:70;:::i;:::-;6203:77;;6290:56;6339:6;6334:3;6327:5;6290:56;:::i;:::-;6371:29;6393:6;6371:29;:::i;:::-;6366:3;6362:39;6355:46;;6093:314;;;;;:::o;6413:439::-;6562:4;6600:2;6589:9;6585:18;6577:26;;6649:9;6643:4;6639:20;6635:1;6624:9;6620:17;6613:47;6677:86;6758:4;6749:6;6741;6677:86;:::i;:::-;6669:94;;6773:72;6841:2;6830:9;6826:18;6817:6;6773:72;:::i;:::-;6413:439;;;;;;:::o;6858:442::-;7007:4;7045:2;7034:9;7030:18;7022:26;;7058:71;7126:1;7115:9;7111:17;7102:6;7058:71;:::i;:::-;7139:72;7207:2;7196:9;7192:18;7183:6;7139:72;:::i;:::-;7221;7289:2;7278:9;7274:18;7265:6;7221:72;:::i;:::-;6858:442;;;;;;:::o;7306:116::-;7376:21;7391:5;7376:21;:::i;:::-;7369:5;7366:32;7356:60;;7412:1;7409;7402:12;7356:60;7306:116;:::o;7428:137::-;7482:5;7513:6;7507:13;7498:22;;7529:30;7553:5;7529:30;:::i;:::-;7428:137;;;;:::o;7571:345::-;7638:6;7687:2;7675:9;7666:7;7662:23;7658:32;7655:119;;;7693:79;;:::i;:::-;7655:119;7813:1;7838:61;7891:7;7882:6;7871:9;7867:22;7838:61;:::i;:::-;7828:71;;7784:125;7571:345;;;;:::o;7922:332::-;8043:4;8081:2;8070:9;8066:18;8058:26;;8094:71;8162:1;8151:9;8147:17;8138:6;8094:71;:::i;:::-;8175:72;8243:2;8232:9;8228:18;8219:6;8175:72;:::i;:::-;7922:332;;;;;:::o;8260:169::-;8344:11;8378:6;8373:3;8366:19;8418:4;8413:3;8409:14;8394:29;;8260:169;;;;:::o;8435:162::-;8575:14;8571:1;8563:6;8559:14;8552:38;8435:162;:::o;8603:366::-;8745:3;8766:67;8830:2;8825:3;8766:67;:::i;:::-;8759:74;;8842:93;8931:3;8842:93;:::i;:::-;8960:2;8955:3;8951:12;8944:19;;8603:366;;;:::o;8975:419::-;9141:4;9179:2;9168:9;9164:18;9156:26;;9228:9;9222:4;9218:20;9214:1;9203:9;9199:17;9192:47;9256:131;9382:4;9256:131;:::i;:::-;9248:139;;8975:419;;;:::o;9400:143::-;9457:5;9488:6;9482:13;9473:22;;9504:33;9531:5;9504:33;:::i;:::-;9400:143;;;;:::o;9549:351::-;9619:6;9668:2;9656:9;9647:7;9643:23;9639:32;9636:119;;;9674:79;;:::i;:::-;9636:119;9794:1;9819:64;9875:7;9866:6;9855:9;9851:22;9819:64;:::i;:::-;9809:74;;9765:128;9549:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "680800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getUsdcBalance()": "infinite",
								"getUsdcBalance2(address)": "infinite",
								"mockAllocator()": "2509",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"transferFromAndGrantDatacap(address,address,uint256,bytes,uint256)": "infinite",
								"transferFromAndGrantDatacapMock(address,address,uint256,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"usdcContractAddress()": "2575"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 358,
									"end": 2754,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 595,
									"end": 804,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 595,
									"end": 804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 595,
									"end": 804,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 595,
									"end": 804,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 595,
									"end": 804,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 595,
									"end": 804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 595,
									"end": 804,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 691,
									"end": 703,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 737,
									"end": 757,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 715,
									"end": 734,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 715,
									"end": 734,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 715,
									"end": 757,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 783,
									"end": 797,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 767,
									"end": 780,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 767,
									"end": 780,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 767,
									"end": 797,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 804,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1601,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1599,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1589,
									"end": 1626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1514,
									"end": 1632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1731,
									"end": 1735,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1771,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1758,
									"end": 1767,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1754,
									"end": 1772,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1835,
									"end": 1852,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1826,
									"end": 1832,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1782,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1638,
									"end": 1860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 358,
									"end": 2754,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5431dc835aa19a717df86a327c536225caa762b5e6a828930b6d986ed85df4f64736f6c634300081a0033",
									".code": [
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "B9C37FD1"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "C31EE12E"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "F2A7DD3"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "1F7EFF6D"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "225B0118"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "2E015584"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 2754,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 515,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1819,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1819,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2288,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2288,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2288,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 441,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 441,
											"end": 475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1176,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1176,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1176,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 846,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 846,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 515,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 515,
											"end": 543,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 515,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1979,
											"end": 1983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1999,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2041,
											"end": 2054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2055,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2055,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2074,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "930FC006"
										},
										{
											"begin": 2093,
											"end": 2114,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2114,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2122,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2065,
											"end": 2123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2123,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2123,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2065,
											"end": 2123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2134,
											"end": 2183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 2234,
											"end": 2238,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2240,
											"end": 2242,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2249,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2208,
											"end": 2250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2250,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2208,
											"end": 2250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2208,
											"end": 2250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2193,
											"end": 2250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2268,
											"end": 2275,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2275,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 2282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2445,
											"end": 2449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2465,
											"end": 2521,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2540,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "63D67DFF"
										},
										{
											"begin": 2563,
											"end": 2584,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2586,
											"end": 2592,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2531,
											"end": 2593,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2633,
											"end": 2652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 2704,
											"end": 2708,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2710,
											"end": 2712,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2678,
											"end": 2720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2720,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2678,
											"end": 2720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2678,
											"end": 2720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2738,
											"end": 2745,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2745,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 441,
											"end": 475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 441,
											"end": 475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1266,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1297,
											"end": 1344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1297,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1402,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1451,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1461,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1461,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1462,
											"end": 1470,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1439,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1439,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1439,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1471,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1504,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 968,
											"end": 987,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 968,
											"end": 1017,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 968,
											"end": 1017,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1075,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1076,
											"end": 1086,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1053,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1053,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1053,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1163,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 846,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 797,
											"end": 914,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 797,
											"end": 914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 906,
											"end": 907,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 904,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 908,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1666,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1549,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1660,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1789,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1672,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1771,
											"end": 1783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1795,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2052,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2056,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2056,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2015,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2176,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2218,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2221,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2221,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2185,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2339,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2333,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2392,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2386,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2367,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2393,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2396,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2396,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2349,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2670,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2682,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2688,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2772,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2652,
											"end": 2772,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2691,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2691,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2770,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2691,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2772,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2652,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2782,
											"end": 2899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2938,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3009,
											"end": 3016,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 2998,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2964,
											"end": 3017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3017,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2964,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3017,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 3017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2909,
											"end": 3027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3068,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3092,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3128,
											"end": 3134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3113,
											"end": 3135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3092,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3145,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3092,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3145,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3211,
											"end": 3220,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3272,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3356,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3239,
											"end": 3356,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3275,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3275,
											"end": 3354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3354,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3275,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3356,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3239,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3388,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3452,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3452,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3504,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3562,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3571,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3528,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3581,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3528,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 3598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3694,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3604,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3674,
											"end": 3687,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3688,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3809,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3700,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3781,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3781,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3776,
											"end": 3779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3769,
											"end": 3803,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3700,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 4025,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3815,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 3943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3917,
											"end": 3943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 4015,
											"end": 4016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4017,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3953,
											"end": 4018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 4025,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 4025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 4025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 4025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4164,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4195,
											"end": 4204,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4193,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4182,
											"end": 4205,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4211,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4295,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4175,
											"end": 4295,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4214,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4295,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 4175,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4334,
											"end": 4335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4404,
											"end": 4411,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4393,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4380,
											"end": 4402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4359,
											"end": 4412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4412,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4359,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4349,
											"end": 4412,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4349,
											"end": 4412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4487,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4532,
											"end": 4539,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4512,
											"end": 4521,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4508,
											"end": 4530,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4487,
											"end": 4540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4540,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4487,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4540,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4591,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4615,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4660,
											"end": 4667,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4649,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4658,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4615,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4615,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4615,
											"end": 4668,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4615,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4668,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4560,
											"end": 4678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4719,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4743,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4777,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4764,
											"end": 4786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4743,
											"end": 4796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4796,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4743,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4796,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4733,
											"end": 4796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4848,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4872,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4917,
											"end": 4924,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4914,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4872,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4872,
											"end": 4925,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4872,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4816,
											"end": 4935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5056,
											"end": 5058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5042,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5054,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5059,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5062,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5062,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5024,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5252,
											"end": 5259,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5241,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5250,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5207,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 5207,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5197,
											"end": 5260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5197,
											"end": 5260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4948,
											"end": 5277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5401,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5283,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5388,
											"end": 5393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5370,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5365,
											"end": 5368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5358,
											"end": 5395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5629,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5407,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5536,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5619,
											"end": 5620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5608,
											"end": 5617,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5551,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5622,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5551,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5629,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5803,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5635,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5729,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5740,
											"end": 5759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5768,
											"end": 5797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5768,
											"end": 5797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5803,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5957,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5809,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 5913,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5902,
											"end": 5905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5897,
											"end": 5900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5884,
											"end": 5914,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 5937,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5809,
											"end": 5957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5963,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6010,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6057,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6051,
											"end": 6058,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6046,
											"end": 6048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6039,
											"end": 6044,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6031,
											"end": 6059,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6407,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6093,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6273,
											"end": 6279,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6271,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6210,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6280,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6210,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6203,
											"end": 6280,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6203,
											"end": 6280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6339,
											"end": 6345,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6337,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6332,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6290,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6290,
											"end": 6346,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6290,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 6393,
											"end": 6399,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6371,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 6371,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6366,
											"end": 6369,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6362,
											"end": 6401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6407,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6407,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6600,
											"end": 6602,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6577,
											"end": 6603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6577,
											"end": 6603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6660,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6758,
											"end": 6762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6755,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6677,
											"end": 6763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6763,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6677,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6841,
											"end": 6843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6823,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6773,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6773,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6413,
											"end": 6852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7047,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7034,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7030,
											"end": 7048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7022,
											"end": 7048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 7126,
											"end": 7127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7115,
											"end": 7124,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7111,
											"end": 7128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7102,
											"end": 7108,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7058,
											"end": 7129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7129,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 7058,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7207,
											"end": 7209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7192,
											"end": 7210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7189,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 7139,
											"end": 7211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7211,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 7139,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7289,
											"end": 7291,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7278,
											"end": 7287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7292,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 7221,
											"end": 7293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7221,
											"end": 7293,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7221,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7306,
											"end": 7422,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7306,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7391,
											"end": 7396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7376,
											"end": 7397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7376,
											"end": 7397,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7376,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7369,
											"end": 7374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7398,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7356,
											"end": 7416,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7412,
											"end": 7413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7414,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7416,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7356,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7306,
											"end": 7422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7306,
											"end": 7422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7513,
											"end": 7519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7507,
											"end": 7520,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7498,
											"end": 7520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7498,
											"end": 7520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7553,
											"end": 7558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 7529,
											"end": 7559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7916,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7571,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7638,
											"end": 7644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7689,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7662,
											"end": 7685,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7658,
											"end": 7690,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7655,
											"end": 7774,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7655,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7655,
											"end": 7774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7693,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7693,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7693,
											"end": 7772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7693,
											"end": 7772,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 7693,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7655,
											"end": 7774,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7655,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7838,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7891,
											"end": 7898,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7880,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7867,
											"end": 7889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7838,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 7838,
											"end": 7899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7838,
											"end": 7899,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 7838,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 7899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 7899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7916,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 8254,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 7922,
											"end": 8254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8083,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8070,
											"end": 8079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8066,
											"end": 8084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8058,
											"end": 8084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8094,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8162,
											"end": 8163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8160,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8147,
											"end": 8164,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8094,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 8094,
											"end": 8165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8094,
											"end": 8165,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 8094,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8243,
											"end": 8245,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8232,
											"end": 8241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8219,
											"end": 8225,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8175,
											"end": 8247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8247,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8175,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 8254,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 8254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 8254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 8254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 8254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 8254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8429,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8260,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8378,
											"end": 8384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8366,
											"end": 8385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8418,
											"end": 8422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8413,
											"end": 8416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8409,
											"end": 8423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8394,
											"end": 8423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8429,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8429,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8260,
											"end": 8429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8435,
											"end": 8597,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 8435,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8575,
											"end": 8589,
											"name": "PUSH",
											"source": 5,
											"value": "5A65726F20416464726573730000000000000000000000000000000000000000"
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8559,
											"end": 8573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8435,
											"end": 8597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8435,
											"end": 8597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8969,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 8603,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8745,
											"end": 8748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 8830,
											"end": 8832,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8766,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8766,
											"end": 8833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8766,
											"end": 8833,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 8766,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8833,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8931,
											"end": 8934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 8842,
											"end": 8935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8935,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 8842,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8962,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8955,
											"end": 8958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8951,
											"end": 8963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 8963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 8963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8969,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8603,
											"end": 8969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9394,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 8975,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9141,
											"end": 9145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9168,
											"end": 9177,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9228,
											"end": 9237,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9222,
											"end": 9226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9218,
											"end": 9238,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9199,
											"end": 9216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9382,
											"end": 9386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 9256,
											"end": 9387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9387,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9256,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9248,
											"end": 9387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9248,
											"end": 9387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9394,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8975,
											"end": 9394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9543,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 9400,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9457,
											"end": 9462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9495,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9473,
											"end": 9495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9473,
											"end": 9495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 9531,
											"end": 9536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 9504,
											"end": 9537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9537,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 9504,
											"end": 9537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9543,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9543,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9900,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 9549,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9670,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9647,
											"end": 9654,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9643,
											"end": 9666,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9671,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9755,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9636,
											"end": 9755,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9674,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9674,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 9674,
											"end": 9753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9674,
											"end": 9753,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9674,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9636,
											"end": 9755,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9636,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9794,
											"end": 9795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9875,
											"end": 9882,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9864,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9851,
											"end": 9873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 9819,
											"end": 9883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9819,
											"end": 9883,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9819,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9883,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9765,
											"end": 9893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9900,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9549,
											"end": 9900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/12_TransferControllerDirect.sol",
								"interfaces/IMockAllocator.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getUsdcBalance()": "c31ee12e",
							"getUsdcBalance2(address)": "b9c37fd1",
							"mockAllocator()": "0f2a7dd3",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferFromAndGrantDatacap(address,address,uint256,bytes,uint256)": "1f7eff6d",
							"transferFromAndGrantDatacapMock(address,address,uint256,address,uint256)": "225b0118",
							"transferOwnership(address)": "f2fde38b",
							"usdcContractAddress()": "2e015584"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcContractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mockAllocator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getUsdcBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUsdcBalance2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockAllocator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"clientFilecoinAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndGrantDatacap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"clientFilecoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromAndGrantDatacapMock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferFromAndGrantDatacap(address,address,uint256,bytes,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/12_TransferControllerDirect.sol\":\"TransferControllerDirect\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/12_TransferControllerDirect.sol\":{\"keccak256\":\"0x38d7ae677694872b0d53667d2648aba56ff56607207812db93364391a9920b99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c4ccc50a0ea0e1bebc33de98a2c8c4d25c8fc3dbcb83614d72e1a3d8980963e\",\"dweb:/ipfs/QmYD9PXDQMkb4MCVUcstsuYNTR32vyKeWkr4mTiTFrVqZa\"]},\"interfaces/IMockAllocator.sol\":{\"keccak256\":\"0xd800b2cdec7fe10a6f748f54244e2c808213848917985229c83f125bf525f5bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bf500e29b9e2d22869bba2c732901027873112f3796a33db35a940e2598cb8f2\",\"dweb:/ipfs/QmRNRnb3pfj1co4VWA2C8Ctop6G76XfqmhF4WFP2LaB6ko\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/12_TransferControllerDirect.sol:TransferControllerDirect",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "contracts/12_TransferControllerDirect.sol:TransferControllerDirect",
								"label": "usdcContractAddress",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 268,
								"contract": "contracts/12_TransferControllerDirect.sol:TransferControllerDirect",
								"label": "mockAllocator",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IMockAllocator.sol": {
				"IMockAllocator": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyHasAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AmountEqualZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FunctionDisabled",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "allocator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allowanceBefore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allowanceAfter",
									"type": "uint256"
								}
							],
							"name": "AllowanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "allocator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "client",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DatacapAllocated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "clientAddress",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addVerifiedClient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "clientAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addVerifiedClientMock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AlreadyHasAllowance()": [
								{
									"details": "Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value"
								}
							],
							"AlreadyZero()": [
								{
									"details": "Thrown if trying to set allowance to 0 when it's already 0"
								}
							],
							"AmountEqualZero()": [
								{
									"details": "Thrown if trying to add 0 allowance or grant 0 datacap"
								}
							],
							"FunctionDisabled()": [
								{
									"details": "Thrown if trying to call disabled function"
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Thrown if caller doesn't have enough allowance for given action"
								}
							]
						},
						"events": {
							"AllowanceChanged(address,uint256,uint256)": {
								"params": {
									"allocator": "Allocator whose allowance has changed",
									"allowanceAfter": "Allowance after the change",
									"allowanceBefore": "Allowance before the change"
								}
							},
							"DatacapAllocated(address,bytes,uint256)": {
								"params": {
									"allocator": "Allocator who granted the datacap",
									"amount": "Amount of datacap",
									"client": "Client that received datacap (Filecoin address)"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addVerifiedClient(bytes,uint256)": {
								"details": "Emits DatacapAllocated eventReverts with InsufficientAllowance if caller doesn't have sufficient allowance",
								"params": {
									"amount": "Amount of datacap to grant",
									"clientAddress": "Filecoin address of the client"
								}
							}
						},
						"title": "Interface for Allocator contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addVerifiedClient(bytes,uint256)": "930fc006",
							"addVerifiedClientMock(address,uint256)": "63d67dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyHasAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountEqualZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FunctionDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowanceBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowanceAfter\",\"type\":\"uint256\"}],\"name\":\"AllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"client\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DatacapAllocated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"clientAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addVerifiedClient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addVerifiedClientMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyHasAllowance()\":[{\"details\":\"Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value\"}],\"AlreadyZero()\":[{\"details\":\"Thrown if trying to set allowance to 0 when it's already 0\"}],\"AmountEqualZero()\":[{\"details\":\"Thrown if trying to add 0 allowance or grant 0 datacap\"}],\"FunctionDisabled()\":[{\"details\":\"Thrown if trying to call disabled function\"}],\"InsufficientAllowance()\":[{\"details\":\"Thrown if caller doesn't have enough allowance for given action\"}]},\"events\":{\"AllowanceChanged(address,uint256,uint256)\":{\"params\":{\"allocator\":\"Allocator whose allowance has changed\",\"allowanceAfter\":\"Allowance after the change\",\"allowanceBefore\":\"Allowance before the change\"}},\"DatacapAllocated(address,bytes,uint256)\":{\"params\":{\"allocator\":\"Allocator who granted the datacap\",\"amount\":\"Amount of datacap\",\"client\":\"Client that received datacap (Filecoin address)\"}}},\"kind\":\"dev\",\"methods\":{\"addVerifiedClient(bytes,uint256)\":{\"details\":\"Emits DatacapAllocated eventReverts with InsufficientAllowance if caller doesn't have sufficient allowance\",\"params\":{\"amount\":\"Amount of datacap to grant\",\"clientAddress\":\"Filecoin address of the client\"}}},\"title\":\"Interface for Allocator contract\",\"version\":1},\"userdoc\":{\"events\":{\"AllowanceChanged(address,uint256,uint256)\":{\"notice\":\"Emitted when allocator's allowance is changed by manager\"},\"DatacapAllocated(address,bytes,uint256)\":{\"notice\":\"Emitted when datacap is granted to a client\"}},\"kind\":\"user\",\"methods\":{\"addVerifiedClient(bytes,uint256)\":{\"notice\":\"Grant allowance to a client.\"}},\"notice\":\"Definition of core functions and events of the Allocator contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IMockAllocator.sol\":\"IMockAllocator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IMockAllocator.sol\":{\"keccak256\":\"0xd800b2cdec7fe10a6f748f54244e2c808213848917985229c83f125bf525f5bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bf500e29b9e2d22869bba2c732901027873112f3796a33db35a940e2598cb8f2\",\"dweb:/ipfs/QmRNRnb3pfj1co4VWA2C8Ctop6G76XfqmhF4WFP2LaB6ko\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AllowanceChanged(address,uint256,uint256)": {
								"notice": "Emitted when allocator's allowance is changed by manager"
							},
							"DatacapAllocated(address,bytes,uint256)": {
								"notice": "Emitted when datacap is granted to a client"
							}
						},
						"kind": "user",
						"methods": {
							"addVerifiedClient(bytes,uint256)": {
								"notice": "Grant allowance to a client."
							}
						},
						"notice": "Definition of core functions and events of the Allocator contract",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"contracts/12_TransferControllerDirect.sol": {
				"ast": {
					"absolutePath": "contracts/12_TransferControllerDirect.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						],
						"IMockAllocator": [
							500
						],
						"Ownable": [
							147
						],
						"TransferControllerDirect": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 226,
							"src": "58:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 148,
							"src": "115:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 259,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "123:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IMockAllocator.sol",
							"file": "../interfaces/IMockAllocator.sol",
							"id": 262,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 449,
							"sourceUnit": 501,
							"src": "183:64:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 261,
										"name": "IMockAllocator",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 500,
										"src": "191:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 263,
										"name": "Ownable",
										"nameLocations": [
											"395:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "395:7:3"
									},
									"id": 264,
									"nodeType": "InheritanceSpecifier",
									"src": "395:7:3"
								}
							],
							"canonicalName": "TransferControllerDirect",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448,
								147,
								255
							],
							"name": "TransferControllerDirect",
							"nameLocation": "367:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2e015584",
									"id": 266,
									"mutability": "mutable",
									"name": "usdcContractAddress",
									"nameLocation": "456:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "441:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 265,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f2a7dd3",
									"id": 268,
									"mutability": "mutable",
									"name": "mockAllocator",
									"nameLocation": "530:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "515:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 267,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "705:99:3",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "usdcContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "715:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 281,
														"name": "_usdcContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "737:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "715:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "715:42:3"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "mockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "767:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 285,
														"name": "_mockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "783:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "767:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "767:30:3"
											}
										]
									},
									"id": 289,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 277,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 270,
													"src": "691:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 278,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 276,
												"name": "Ownable",
												"nameLocations": [
													"683:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "683:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "683:21:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "615:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "607:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "_usdcContractAddress",
												"nameLocation": "637:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "629:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "_mockAllocator",
												"nameLocation": "667:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "659:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:76:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:0:3"
									},
									"scope": 448,
									"src": "595:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "912:258:3",
										"statements": [
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "usdcContract",
														"nameLocation": "975:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "968:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 295,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 294,
																"name": "IERC20",
																"nameLocations": [
																	"968:6:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 225,
																"src": "968:6:3"
															},
															"referencedDeclaration": 225,
															"src": "968:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"arguments": [
														{
															"id": 298,
															"name": "usdcContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "997:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 297,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "990:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "968:49:3"
											},
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "account_balance",
														"nameLocation": "1035:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "1027:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 301,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1027:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1076:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1080:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1076:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 303,
															"name": "usdcContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "1053:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1066:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "1053:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1053:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1027:60:3"
											},
											{
												"expression": {
													"id": 309,
													"name": "account_balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1148:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 293,
												"id": 310,
												"nodeType": "Return",
												"src": "1141:22:3"
											}
										]
									},
									"functionSelector": "c31ee12e",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUsdcBalance",
									"nameLocation": "855:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:3"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "903:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "895:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:17:3"
									},
									"scope": 448,
									"src": "846:324:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "1287:224:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "1305:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1325:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1317:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 321,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1317:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1317:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1305:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2041646472657373",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1329:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be",
																"typeString": "literal_string \"Zero Address\""
															},
															"value": "Zero Address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ef4df38e17efa233f86f31ba1f777c86e862585794386894c50f894317da6be",
																"typeString": "literal_string \"Zero Address\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1297:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1297:47:3"
											},
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "usdcContract",
														"nameLocation": "1361:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "1354:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 330,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 329,
																"name": "IERC20",
																"nameLocations": [
																	"1354:6:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 225,
																"src": "1354:6:3"
															},
															"referencedDeclaration": 225,
															"src": "1354:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"arguments": [
														{
															"id": 333,
															"name": "usdcContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "1383:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 332,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1376:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1354:49:3"
											},
											{
												"assignments": [
													337
												],
												"declarations": [
													{
														"constant": false,
														"id": 337,
														"mutability": "mutable",
														"name": "account_balance",
														"nameLocation": "1421:15:3",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "1413:23:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1413:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 342,
												"initialValue": {
													"arguments": [
														{
															"id": 340,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "1462:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 338,
															"name": "usdcContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1439:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1452:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "1439:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1439:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1413:58:3"
											},
											{
												"expression": {
													"id": 343,
													"name": "account_balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "1489:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 318,
												"id": 344,
												"nodeType": "Return",
												"src": "1482:22:3"
											}
										]
									},
									"functionSelector": "b9c37fd1",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUsdcBalance2",
									"nameLocation": "1185:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1209:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1201:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:18:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1274:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1266:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:17:3"
									},
									"scope": 448,
									"src": "1176:335:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1989:293:3",
										"statements": [
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "allocator",
														"nameLocation": "2014:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "1999:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMockAllocator_$500",
															"typeString": "contract IMockAllocator"
														},
														"typeName": {
															"id": 365,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 364,
																"name": "IMockAllocator",
																"nameLocations": [
																	"1999:14:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 500,
																"src": "1999:14:3"
															},
															"referencedDeclaration": 500,
															"src": "1999:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$500",
																"typeString": "contract IMockAllocator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"arguments": [
														{
															"id": 368,
															"name": "mockAllocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2041:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 367,
														"name": "IMockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2026:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMockAllocator_$500_$",
															"typeString": "type(contract IMockAllocator)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2026:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMockAllocator_$500",
														"typeString": "contract IMockAllocator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1999:56:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "clientFilecoinAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "2093:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 375,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "2116:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 371,
															"name": "allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "2065:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$500",
																"typeString": "contract IMockAllocator"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2075:17:3",
														"memberName": "addVerifiedClient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 492,
														"src": "2065:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (bytes memory,uint256) external"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2065:58:3"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "usdcContract",
														"nameLocation": "2141:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "2134:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 379,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 378,
																"name": "IERC20",
																"nameLocations": [
																	"2134:6:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 225,
																"src": "2134:6:3"
															},
															"referencedDeclaration": 225,
															"src": "2134:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 384,
												"initialValue": {
													"arguments": [
														{
															"id": 382,
															"name": "usdcContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "2163:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2156:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2156:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2134:49:3"
											},
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2198:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "2193:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 385,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2193:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"arguments": [
														{
															"id": 389,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2234:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "2240:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 391,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "2244:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 387,
															"name": "usdcContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2208:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2221:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "2208:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2208:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2193:57:3"
											},
											{
												"expression": {
													"id": 394,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 386,
													"src": "2268:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 363,
												"id": 395,
												"nodeType": "Return",
												"src": "2261:14:3"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1517:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "1f7eff6d",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 359,
												"name": "onlyOwner",
												"nameLocations": [
													"1960:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1960:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1960:9:3"
										}
									],
									"name": "transferFromAndGrantDatacap",
									"nameLocation": "1828:27:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1864:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1856:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1878:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1870:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1890:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1882:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "clientFilecoinAddress",
												"nameLocation": "1912:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1897:36:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1897:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1943:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1935:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:95:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1979:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1979:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1978:6:3"
									},
									"scope": 448,
									"src": "1819:463:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "2455:297:3",
										"statements": [
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "allocator",
														"nameLocation": "2480:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "2465:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMockAllocator_$500",
															"typeString": "contract IMockAllocator"
														},
														"typeName": {
															"id": 415,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 414,
																"name": "IMockAllocator",
																"nameLocations": [
																	"2465:14:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 500,
																"src": "2465:14:3"
															},
															"referencedDeclaration": 500,
															"src": "2465:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$500",
																"typeString": "contract IMockAllocator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"arguments": [
														{
															"id": 418,
															"name": "mockAllocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2507:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "IMockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2492:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMockAllocator_$500_$",
															"typeString": "type(contract IMockAllocator)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMockAllocator_$500",
														"typeString": "contract IMockAllocator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2465:56:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "clientFilecoinAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "2563:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "2586:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 421,
															"name": "allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2531:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$500",
																"typeString": "contract IMockAllocator"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2541:21:3",
														"memberName": "addVerifiedClientMock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 499,
														"src": "2531:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2531:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2531:62:3"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "usdcContract",
														"nameLocation": "2611:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "2604:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 429,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 428,
																"name": "IERC20",
																"nameLocations": [
																	"2604:6:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 225,
																"src": "2604:6:3"
															},
															"referencedDeclaration": 225,
															"src": "2604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "usdcContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "2633:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 431,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "2626:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2626:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2604:49:3"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2668:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "2663:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 435,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2663:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"arguments": [
														{
															"id": 439,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "2704:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "2710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "2714:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 437,
															"name": "usdcContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "2678:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2691:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "2678:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2678:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2663:57:3"
											},
											{
												"expression": {
													"id": 444,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 436,
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 413,
												"id": 445,
												"nodeType": "Return",
												"src": "2731:14:3"
											}
										]
									},
									"functionSelector": "225b0118",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 410,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 409,
												"name": "onlyOwner",
												"nameLocations": [
													"2426:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2426:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2426:9:3"
										}
									],
									"name": "transferFromAndGrantDatacapMock",
									"nameLocation": "2297:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2337:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2329:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2351:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2343:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2363:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2355:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "clientFilecoinAddress",
												"nameLocation": "2378:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2370:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2409:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2401:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2328:88:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:6:3"
									},
									"scope": 448,
									"src": "2288:464:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 449,
							"src": "358:2396:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "33:2722:3"
				},
				"id": 3
			},
			"interfaces/IMockAllocator.sol": {
				"ast": {
					"absolutePath": "interfaces/IMockAllocator.sol",
					"exportedSymbols": {
						"IMockAllocator": [
							500
						]
					},
					"id": 501,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMockAllocator",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 451,
								"nodeType": "StructuredDocumentation",
								"src": "64:127:4",
								"text": " @title Interface for Allocator contract\n @notice Definition of core functions and events of the Allocator contract"
							},
							"fullyImplemented": false,
							"id": 500,
							"linearizedBaseContracts": [
								500
							],
							"name": "IMockAllocator",
							"nameLocation": "202:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "223:87:4",
										"text": " @dev Thrown if caller doesn't have enough allowance for given action"
									},
									"errorSelector": "13be252b",
									"id": 454,
									"name": "InsufficientAllowance",
									"nameLocation": "321:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:4"
									},
									"src": "315:30:4"
								},
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "351:78:4",
										"text": " @dev Thrown if trying to add 0 allowance or grant 0 datacap"
									},
									"errorSelector": "b0da7f34",
									"id": 457,
									"name": "AmountEqualZero",
									"nameLocation": "440:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:4"
									},
									"src": "434:24:4"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "464:155:4",
										"text": " @dev Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value"
									},
									"errorSelector": "494d1493",
									"id": 460,
									"name": "AlreadyHasAllowance",
									"nameLocation": "630:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:4"
									},
									"src": "624:28:4"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "658:82:4",
										"text": " @dev Thrown if trying to set allowance to 0 when it's already 0"
									},
									"errorSelector": "5657d5eb",
									"id": 463,
									"name": "AlreadyZero",
									"nameLocation": "751:11:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:2:4"
									},
									"src": "745:20:4"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "771:66:4",
										"text": " @dev Thrown if trying to call disabled function"
									},
									"errorSelector": "bf241488",
									"id": 466,
									"name": "FunctionDisabled",
									"nameLocation": "848:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "864:2:4"
									},
									"src": "842:25:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "873:259:4",
										"text": " @notice Emitted when allocator's allowance is changed by manager\n @param allocator Allocator whose allowance has changed\n @param allowanceBefore Allowance before the change\n @param allowanceAfter Allowance after the change"
									},
									"eventSelector": "d30aeeeb3755c0784618bd3ff45998e5b4be082df174ed87c3a79f37e2fb56a6",
									"id": 475,
									"name": "AllowanceChanged",
									"nameLocation": "1143:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "allocator",
												"nameLocation": "1176:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1160:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowanceBefore",
												"nameLocation": "1195:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1187:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowanceAfter",
												"nameLocation": "1220:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1212:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:76:4"
									},
									"src": "1137:99:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1242:236:4",
										"text": " @notice Emitted when datacap is granted to a client\n @param allocator Allocator who granted the datacap\n @param client Client that received datacap (Filecoin address)\n @param amount Amount of datacap"
									},
									"eventSelector": "9b88bd178c90ce12441ff8588a493795e519ac037930d64fdb0d15de4fb53e37",
									"id": 484,
									"name": "DatacapAllocated",
									"nameLocation": "1489:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "allocator",
												"nameLocation": "1522:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1506:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "client",
												"nameLocation": "1547:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1533:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1533:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1563:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "1555:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:65:4"
									},
									"src": "1483:88:4"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "2863:294:4",
										"text": " @notice Grant allowance to a client.\n @param clientAddress Filecoin address of the client\n @param amount Amount of datacap to grant\n @dev Emits DatacapAllocated event\n @dev Reverts with InsufficientAllowance if caller doesn't have sufficient allowance"
									},
									"functionSelector": "930fc006",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addVerifiedClient",
									"nameLocation": "3171:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "clientAddress",
												"nameLocation": "3204:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3189:28:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 486,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3227:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3219:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:46:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:0:4"
									},
									"scope": 500,
									"src": "3162:82:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "63d67dff",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addVerifiedClientMock",
									"nameLocation": "3259:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "clientAddress",
												"nameLocation": "3289:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3281:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3312:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3304:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3304:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3280:39:4"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3328:0:4"
									},
									"scope": 500,
									"src": "3250:79:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 501,
							"src": "192:3139:4",
							"usedErrors": [
								454,
								457,
								460,
								463,
								466
							],
							"usedEvents": [
								475,
								484
							]
						}
					],
					"src": "39:3293:4"
				},
				"id": 4
			}
		}
	}
}