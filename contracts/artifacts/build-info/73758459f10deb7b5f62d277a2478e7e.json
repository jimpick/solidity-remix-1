{
	"id": "73758459f10deb7b5f62d277a2478e7e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/15_DatacapGatewayDirect.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.0;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport {IMockAllocator} from \"./interfaces/IMockAllocator.sol\";\nimport {IStorageProviderEscrowFactory} from \"./interfaces/IStorageProviderEscrowFactory.sol\";\nimport {IDatacapGateway} from \"./interfaces/IDatacapGateway.sol\";\n\ncontract DatacapGatewayDirect is Ownable, IDatacapGateway {\n    address public mockAllocator;\n\n    address public storageProviderEscrowFactoryAddr;\n\n    constructor(address initialOwner, address _mockAllocator) Ownable(initialOwner) {\n        mockAllocator = _mockAllocator;\n    }\n\n    function setStorageProviderEscrowFactory(address storageProviderEscrowFactoryAddress) external onlyOwner {\n        storageProviderEscrowFactoryAddr = storageProviderEscrowFactoryAddress;\n    }\n\n    modifier onlyEscrowContracts() {\n        if (storageProviderEscrowFactoryAddr == address(0)) {\n            revert StorageProviderEscrowFactoryUnset();\n        }\n\n        IStorageProviderEscrowFactory factory = IStorageProviderEscrowFactory(storageProviderEscrowFactoryAddr);\n        if (!factory.isEscrow(msg.sender)) {\n            revert UnauthorizedAccount(msg.sender);\n        }\n        _;\n    }\n\n    function hasAccess() external view onlyEscrowContracts returns (bool) {\n        return true;\n    }\n\n    function grantDatacap(bytes calldata clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {\n        IMockAllocator allocator = IMockAllocator(mockAllocator);\n        allocator.addVerifiedClient(clientFilecoinAddress, amount);\n    }\n\n    function grantDatacapMock(address clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {\n        IMockAllocator allocator = IMockAllocator(mockAllocator);\n        allocator.addVerifiedClientMock(clientFilecoinAddress, amount);\n    }\n}"
			},
			"contracts/interfaces/IDatacapGateway.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ninterface IDatacapGateway {\n    error StorageProviderEscrowFactoryUnset();\n\n    error UnauthorizedAccount(address account);\n\n    function setStorageProviderEscrowFactory(address storageProviderEscrowFactoryAddress) external;\n\n    function hasAccess() external view returns (bool);\n \n    function grantDatacap(bytes calldata clientFilecoinAddress, uint256 amount) external;\n \n    function grantDatacapMock(address clientFilecoinAddress, uint256 amount) external;\n}\n"
			},
			"contracts/interfaces/IStorageProviderEscrowFactory.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n/**\n * @title Interface for Allocator contract\n * @notice Definition of core functions and events of the Allocator contract\n */\ninterface IStorageProviderEscrowFactory {\n    error DatacapGatewayUnset();\n\n    function datacapGateway() external returns (address);\n\n    function setDatacapGateway(address datacapGatewayAddress) external;\n\n    function createStorageProviderEscrow() external;\n\n    function getEscrowById(uint256 id) external view returns (address);\n \n    function getAllEscrows() external view returns (address[] memory);\n\n    function isEscrow(address escrowContract) external view returns (bool);\n}\n"
			},
			"contracts/interfaces/IMockAllocator.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n/**\n * @title Interface for Allocator contract\n * @notice Definition of core functions and events of the Allocator contract\n */\ninterface IMockAllocator {\n    /**\n     * @dev Thrown if caller doesn't have enough allowance for given action\n     */\n    error InsufficientAllowance();\n\n    /**\n     * @dev Thrown if trying to add 0 allowance or grant 0 datacap\n     */\n    error AmountEqualZero();\n\n    /**\n     * @dev Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value\n     */\n    error AlreadyHasAllowance();\n\n    /**\n     * @dev Thrown if trying to set allowance to 0 when it's already 0\n     */\n    error AlreadyZero();\n\n    /**\n     * @dev Thrown if trying to call disabled function\n     */\n    error FunctionDisabled();\n\n    /**\n     * @notice Emitted when allocator's allowance is changed by manager\n     * @param allocator Allocator whose allowance has changed\n     * @param allowanceBefore Allowance before the change\n     * @param allowanceAfter Allowance after the change\n     */\n    event AllowanceChanged(address indexed allocator, uint256 allowanceBefore, uint256 allowanceAfter);\n\n    /**\n     * @notice Emitted when datacap is granted to a client\n     * @param allocator Allocator who granted the datacap\n     * @param client Client that received datacap (Filecoin address)\n     * @param amount Amount of datacap\n     */\n    event DatacapAllocated(address indexed allocator, bytes indexed client, uint256 amount);\n\n    /**\n     * @notice Get all allocators with non-zero allowance\n     * @return allocators List of allocators with non-zero allowance\n     */\n    // function getAllocators() external view returns (address[] memory allocators);\n\n    /**\n     * @notice Get allowance of an allocator\n     * @param allocator Allocator to get allowance for\n     * @return allowance Allocator's allowance\n     */\n    // function allowance(address allocator) external view returns (uint256 allowance);\n\n    /**\n     * @notice Add allowance to Allocator\n     * @param allocator Allocator that will receive allowance\n     * @param amount Amount of allowance to add\n     * @dev Emits AllowanceChanged event\n     * @dev Reverts if not called by contract owner\n     * @dev Reverts if trying to add 0 allowance\n     */\n    // function addAllowance(address allocator, uint256 amount) external;\n\n    /**\n     * @notice Set allowance of an Allocator. Can be used to remove allowance.\n     * @param allocator Allocator\n     * @param amount Amount of allowance to set\n     * @dev Emits AllowanceChanged event\n     * @dev Reverts if not called by contract owner\n     * @dev Reverts if setting to 0 when allocator already has 0 allowance\n     */\n    // function setAllowance(address allocator, uint256 amount) external;\n\n    /**\n     * @notice Grant allowance to a client.\n     * @param clientAddress Filecoin address of the client\n     * @param amount Amount of datacap to grant\n     * @dev Emits DatacapAllocated event\n     * @dev Reverts with InsufficientAllowance if caller doesn't have sufficient allowance\n     */\n    function addVerifiedClient(bytes calldata clientAddress, uint256 amount) external;\n\n    function addVerifiedClientMock(address clientAddress, uint256 amount) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/15_DatacapGatewayDirect.sol": {
				"DatacapGatewayDirect": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_mockAllocator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "StorageProviderEscrowFactoryUnset",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "UnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "clientFilecoinAddress",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "grantDatacap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "clientFilecoinAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "grantDatacapMock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasAccess",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mockAllocator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "storageProviderEscrowFactoryAddress",
									"type": "address"
								}
							],
							"name": "setStorageProviderEscrowFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "storageProviderEscrowFactoryAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/15_DatacapGatewayDirect.sol\":400:1893  contract DatacapGatewayDirect is Ownable, IDatacapGateway {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/15_DatacapGatewayDirect.sol\":553:680  constructor(address initialOwner, address _mockAllocator) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/15_DatacapGatewayDirect.sol\":619:631  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/15_DatacapGatewayDirect.sol\":659:673  _mockAllocator */\n  dup1\n    /* \"contracts/15_DatacapGatewayDirect.sol\":643:656  mockAllocator */\n  0x01\n  0x00\n    /* \"contracts/15_DatacapGatewayDirect.sol\":643:673  mockAllocator = _mockAllocator */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/15_DatacapGatewayDirect.sol\":553:680  constructor(address initialOwner, address _mockAllocator) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/15_DatacapGatewayDirect.sol\":400:1893  contract DatacapGatewayDirect is Ownable, IDatacapGateway {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/15_DatacapGatewayDirect.sol\":400:1893  contract DatacapGatewayDirect is Ownable, IDatacapGateway {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/15_DatacapGatewayDirect.sol\":400:1893  contract DatacapGatewayDirect is Ownable, IDatacapGateway {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9b85622c\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x9b85622c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbcaf0d9a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xca09c885\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf4bd456d\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0f2a7dd3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x85a2dd15\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/15_DatacapGatewayDirect.sol\":464:492  address public mockAllocator */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1288:1386  function hasAccess() external view onlyEscrowContracts returns (bool) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/15_DatacapGatewayDirect.sol\":686:878  function setStorageProviderEscrowFactory(address storageProviderEscrowFactoryAddress) external onlyOwner {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":499:546  address public storageProviderEscrowFactoryAddr */\n    tag_8:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1644:1891  function grantDatacapMock(address clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1392:1638  function grantDatacap(bytes calldata clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {... */\n    tag_11:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":464:492  address public mockAllocator */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1288:1386  function hasAccess() external view onlyEscrowContracts returns (bool) {... */\n    tag_20:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1352:1356  bool */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":973:974  0 */\n      dup1\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:975  storageProviderEscrowFactoryAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:961  storageProviderEscrowFactoryAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:975  storageProviderEscrowFactoryAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/15_DatacapGatewayDirect.sol\":925:1044  if (storageProviderEscrowFactoryAddr == address(0)) {... */\n      tag_51\n      jumpi\n        /* \"contracts/15_DatacapGatewayDirect.sol\":998:1033  StorageProviderEscrowFactoryUnset() */\n      mload(0x40)\n      0xf37741d700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/15_DatacapGatewayDirect.sol\":925:1044  if (storageProviderEscrowFactoryAddr == address(0)) {... */\n    tag_51:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1054:1091  IStorageProviderEscrowFactory factory */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1124:1156  storageProviderEscrowFactoryAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1054:1157  IStorageProviderEscrowFactory factory = IStorageProviderEscrowFactory(storageProviderEscrowFactoryAddr) */\n      swap1\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1179  factory */\n      dup1\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1188  factory.isEscrow */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb166a09f\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1189:1199  msg.sender */\n      caller\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1200  factory.isEscrow(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_52:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1167:1265  if (!factory.isEscrow(msg.sender)) {... */\n      tag_57\n      jumpi\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1243:1253  msg.sender */\n      caller\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1223:1254  UnauthorizedAccount(msg.sender) */\n      mload(0x40)\n      0x32b2baa300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1167:1265  if (!factory.isEscrow(msg.sender)) {... */\n    tag_57:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1375:1379  true */\n      0x01\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1368:1379  return true */\n      swap2\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":915:1282  {... */\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1288:1386  function hasAccess() external view onlyEscrowContracts returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/15_DatacapGatewayDirect.sol\":686:878  function setStorageProviderEscrowFactory(address storageProviderEscrowFactoryAddress) external onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":836:871  storageProviderEscrowFactoryAddress */\n      dup1\n        /* \"contracts/15_DatacapGatewayDirect.sol\":801:833  storageProviderEscrowFactoryAddr */\n      0x02\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":801:871  storageProviderEscrowFactoryAddr = storageProviderEscrowFactoryAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":686:878  function setStorageProviderEscrowFactory(address storageProviderEscrowFactoryAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/15_DatacapGatewayDirect.sol\":499:546  address public storageProviderEscrowFactoryAddr */\n    tag_31:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1644:1891  function grantDatacapMock(address clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {... */\n    tag_36:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":973:974  0 */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:975  storageProviderEscrowFactoryAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:961  storageProviderEscrowFactoryAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:975  storageProviderEscrowFactoryAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/15_DatacapGatewayDirect.sol\":925:1044  if (storageProviderEscrowFactoryAddr == address(0)) {... */\n      tag_65\n      jumpi\n        /* \"contracts/15_DatacapGatewayDirect.sol\":998:1033  StorageProviderEscrowFactoryUnset() */\n      mload(0x40)\n      0xf37741d700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/15_DatacapGatewayDirect.sol\":925:1044  if (storageProviderEscrowFactoryAddr == address(0)) {... */\n    tag_65:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1054:1091  IStorageProviderEscrowFactory factory */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1124:1156  storageProviderEscrowFactoryAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1054:1157  IStorageProviderEscrowFactory factory = IStorageProviderEscrowFactory(storageProviderEscrowFactoryAddr) */\n      swap1\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1179  factory */\n      dup1\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1188  factory.isEscrow */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb166a09f\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1189:1199  msg.sender */\n      caller\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1200  factory.isEscrow(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_69:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1167:1265  if (!factory.isEscrow(msg.sender)) {... */\n      tag_70\n      jumpi\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1243:1253  msg.sender */\n      caller\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1223:1254  UnauthorizedAccount(msg.sender) */\n      mload(0x40)\n      0x32b2baa300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1167:1265  if (!factory.isEscrow(msg.sender)) {... */\n    tag_70:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1756:1780  IMockAllocator allocator */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1798:1811  mockAllocator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1756:1812  IMockAllocator allocator = IMockAllocator(mockAllocator) */\n      swap1\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1822:1831  allocator */\n      dup1\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1822:1853  allocator.addVerifiedClientMock */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x63d67dff\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1854:1875  clientFilecoinAddress */\n      dup6\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1877:1883  amount */\n      dup6\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1822:1884  allocator.addVerifiedClientMock(clientFilecoinAddress, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1746:1891  {... */\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":915:1282  {... */\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1644:1891  function grantDatacapMock(address clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_81\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1392:1638  function grantDatacap(bytes calldata clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {... */\n    tag_43:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":973:974  0 */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:975  storageProviderEscrowFactoryAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:961  storageProviderEscrowFactoryAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":929:975  storageProviderEscrowFactoryAddr == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/15_DatacapGatewayDirect.sol\":925:1044  if (storageProviderEscrowFactoryAddr == address(0)) {... */\n      tag_85\n      jumpi\n        /* \"contracts/15_DatacapGatewayDirect.sol\":998:1033  StorageProviderEscrowFactoryUnset() */\n      mload(0x40)\n      0xf37741d700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/15_DatacapGatewayDirect.sol\":925:1044  if (storageProviderEscrowFactoryAddr == address(0)) {... */\n    tag_85:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1054:1091  IStorageProviderEscrowFactory factory */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1124:1156  storageProviderEscrowFactoryAddr */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1054:1157  IStorageProviderEscrowFactory factory = IStorageProviderEscrowFactory(storageProviderEscrowFactoryAddr) */\n      swap1\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1179  factory */\n      dup1\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1188  factory.isEscrow */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb166a09f\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1189:1199  msg.sender */\n      caller\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1172:1200  factory.isEscrow(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1167:1265  if (!factory.isEscrow(msg.sender)) {... */\n      tag_90\n      jumpi\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1243:1253  msg.sender */\n      caller\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1223:1254  UnauthorizedAccount(msg.sender) */\n      mload(0x40)\n      0x32b2baa300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1167:1265  if (!factory.isEscrow(msg.sender)) {... */\n    tag_90:\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1507:1531  IMockAllocator allocator */\n      0x00\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1549:1562  mockAllocator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1507:1563  IMockAllocator allocator = IMockAllocator(mockAllocator) */\n      swap1\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1573:1582  allocator */\n      dup1\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1573:1600  allocator.addVerifiedClient */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x930fc006\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1601:1622  clientFilecoinAddress */\n      dup7\n      dup7\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1624:1630  amount */\n      dup7\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1573:1631  allocator.addVerifiedClient(clientFilecoinAddress, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1497:1638  {... */\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":915:1282  {... */\n      pop\n        /* \"contracts/15_DatacapGatewayDirect.sol\":1392:1638  function grantDatacap(bytes calldata clientFilecoinAddress, uint256 amount) external onlyEscrowContracts {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_107:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_108:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_134\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_107\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_109:\n        /* \"#utility.yul\":328:352   */\n      tag_136\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_108\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_138\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_109\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_110:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_111:\n        /* \"#utility.yul\":770:791   */\n      tag_141\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_110\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_22:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_143\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_111\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_113:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      dup1\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1224:1341   */\n    tag_114:\n        /* \"#utility.yul\":1333:1334   */\n      0x00\n        /* \"#utility.yul\":1330:1331   */\n      dup1\n        /* \"#utility.yul\":1323:1335   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_115:\n        /* \"#utility.yul\":1420:1444   */\n      tag_148\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_108\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      dup1\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_149:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_116:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_151\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_115\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1949   */\n    tag_28:\n        /* \"#utility.yul\":1679:1685   */\n      0x00\n        /* \"#utility.yul\":1728:1730   */\n      0x20\n        /* \"#utility.yul\":1716:1725   */\n      dup3\n        /* \"#utility.yul\":1707:1714   */\n      dup5\n        /* \"#utility.yul\":1703:1726   */\n      sub\n        /* \"#utility.yul\":1699:1731   */\n      slt\n        /* \"#utility.yul\":1696:1815   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1734:1813   */\n      tag_154\n      tag_113\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1696:1815   */\n    tag_153:\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1879:1932   */\n      tag_155\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1915:1921   */\n      dup3\n        /* \"#utility.yul\":1904:1913   */\n      dup6\n        /* \"#utility.yul\":1900:1922   */\n      add\n        /* \"#utility.yul\":1879:1932   */\n      tag_116\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1869:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1942   */\n      pop\n        /* \"#utility.yul\":1620:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2032   */\n    tag_117:\n        /* \"#utility.yul\":1992:1999   */\n      0x00\n        /* \"#utility.yul\":2021:2026   */\n      dup2\n        /* \"#utility.yul\":2010:2026   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2160   */\n    tag_118:\n        /* \"#utility.yul\":2111:2135   */\n      tag_158\n        /* \"#utility.yul\":2129:2134   */\n      dup2\n        /* \"#utility.yul\":2111:2135   */\n      tag_117\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2104:2109   */\n      dup2\n        /* \"#utility.yul\":2101:2136   */\n      eq\n        /* \"#utility.yul\":2091:2154   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2150:2151   */\n      0x00\n        /* \"#utility.yul\":2147:2148   */\n      dup1\n        /* \"#utility.yul\":2140:2152   */\n      revert\n        /* \"#utility.yul\":2091:2154   */\n    tag_159:\n        /* \"#utility.yul\":2038:2160   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2305   */\n    tag_119:\n        /* \"#utility.yul\":2212:2217   */\n      0x00\n        /* \"#utility.yul\":2250:2256   */\n      dup2\n        /* \"#utility.yul\":2237:2257   */\n      calldataload\n        /* \"#utility.yul\":2228:2257   */\n      swap1\n      pop\n        /* \"#utility.yul\":2266:2299   */\n      tag_161\n        /* \"#utility.yul\":2293:2298   */\n      dup2\n        /* \"#utility.yul\":2266:2299   */\n      tag_118\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2166:2305   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2311:2785   */\n    tag_35:\n        /* \"#utility.yul\":2379:2385   */\n      0x00\n        /* \"#utility.yul\":2387:2393   */\n      dup1\n        /* \"#utility.yul\":2436:2438   */\n      0x40\n        /* \"#utility.yul\":2424:2433   */\n      dup4\n        /* \"#utility.yul\":2415:2422   */\n      dup6\n        /* \"#utility.yul\":2411:2434   */\n      sub\n        /* \"#utility.yul\":2407:2439   */\n      slt\n        /* \"#utility.yul\":2404:2523   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2442:2521   */\n      tag_164\n      tag_113\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2404:2523   */\n    tag_163:\n        /* \"#utility.yul\":2562:2563   */\n      0x00\n        /* \"#utility.yul\":2587:2640   */\n      tag_165\n        /* \"#utility.yul\":2632:2639   */\n      dup6\n        /* \"#utility.yul\":2623:2629   */\n      dup3\n        /* \"#utility.yul\":2612:2621   */\n      dup7\n        /* \"#utility.yul\":2608:2630   */\n      add\n        /* \"#utility.yul\":2587:2640   */\n      tag_116\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2577:2640   */\n      swap3\n      pop\n        /* \"#utility.yul\":2533:2650   */\n      pop\n        /* \"#utility.yul\":2689:2691   */\n      0x20\n        /* \"#utility.yul\":2715:2768   */\n      tag_166\n        /* \"#utility.yul\":2760:2767   */\n      dup6\n        /* \"#utility.yul\":2751:2757   */\n      dup3\n        /* \"#utility.yul\":2740:2749   */\n      dup7\n        /* \"#utility.yul\":2736:2758   */\n      add\n        /* \"#utility.yul\":2715:2768   */\n      tag_119\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2705:2768   */\n      swap2\n      pop\n        /* \"#utility.yul\":2660:2778   */\n      pop\n        /* \"#utility.yul\":2311:2785   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2908   */\n    tag_120:\n        /* \"#utility.yul\":2900:2901   */\n      0x00\n        /* \"#utility.yul\":2897:2898   */\n      dup1\n        /* \"#utility.yul\":2890:2902   */\n      revert\n        /* \"#utility.yul\":2914:3031   */\n    tag_121:\n        /* \"#utility.yul\":3023:3024   */\n      0x00\n        /* \"#utility.yul\":3020:3021   */\n      dup1\n        /* \"#utility.yul\":3013:3025   */\n      revert\n        /* \"#utility.yul\":3037:3154   */\n    tag_122:\n        /* \"#utility.yul\":3146:3147   */\n      0x00\n        /* \"#utility.yul\":3143:3144   */\n      dup1\n        /* \"#utility.yul\":3136:3148   */\n      revert\n        /* \"#utility.yul\":3173:3725   */\n    tag_123:\n        /* \"#utility.yul\":3230:3238   */\n      0x00\n        /* \"#utility.yul\":3240:3246   */\n      dup1\n        /* \"#utility.yul\":3290:3293   */\n      dup4\n        /* \"#utility.yul\":3283:3287   */\n      0x1f\n        /* \"#utility.yul\":3275:3281   */\n      dup5\n        /* \"#utility.yul\":3271:3288   */\n      add\n        /* \"#utility.yul\":3267:3294   */\n      slt\n        /* \"#utility.yul\":3257:3379   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":3298:3377   */\n      tag_172\n      tag_120\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3257:3379   */\n    tag_171:\n        /* \"#utility.yul\":3411:3417   */\n      dup3\n        /* \"#utility.yul\":3398:3418   */\n      calldataload\n        /* \"#utility.yul\":3388:3418   */\n      swap1\n      pop\n        /* \"#utility.yul\":3441:3459   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3433:3439   */\n      dup2\n        /* \"#utility.yul\":3430:3460   */\n      gt\n        /* \"#utility.yul\":3427:3544   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":3463:3542   */\n      tag_174\n      tag_121\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3427:3544   */\n    tag_173:\n        /* \"#utility.yul\":3577:3581   */\n      0x20\n        /* \"#utility.yul\":3569:3575   */\n      dup4\n        /* \"#utility.yul\":3565:3582   */\n      add\n        /* \"#utility.yul\":3553:3582   */\n      swap2\n      pop\n        /* \"#utility.yul\":3631:3634   */\n      dup4\n        /* \"#utility.yul\":3623:3627   */\n      0x01\n        /* \"#utility.yul\":3615:3621   */\n      dup3\n        /* \"#utility.yul\":3611:3628   */\n      mul\n        /* \"#utility.yul\":3601:3609   */\n      dup4\n        /* \"#utility.yul\":3597:3629   */\n      add\n        /* \"#utility.yul\":3594:3635   */\n      gt\n        /* \"#utility.yul\":3591:3719   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":3638:3717   */\n      tag_176\n      tag_122\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3591:3719   */\n    tag_175:\n        /* \"#utility.yul\":3173:3725   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:4403   */\n    tag_42:\n        /* \"#utility.yul\":3810:3816   */\n      0x00\n        /* \"#utility.yul\":3818:3824   */\n      dup1\n        /* \"#utility.yul\":3826:3832   */\n      0x00\n        /* \"#utility.yul\":3875:3877   */\n      0x40\n        /* \"#utility.yul\":3863:3872   */\n      dup5\n        /* \"#utility.yul\":3854:3861   */\n      dup7\n        /* \"#utility.yul\":3850:3873   */\n      sub\n        /* \"#utility.yul\":3846:3878   */\n      slt\n        /* \"#utility.yul\":3843:3962   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":3881:3960   */\n      tag_179\n      tag_113\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3843:3962   */\n    tag_178:\n        /* \"#utility.yul\":4029:4030   */\n      0x00\n        /* \"#utility.yul\":4018:4027   */\n      dup5\n        /* \"#utility.yul\":4014:4031   */\n      add\n        /* \"#utility.yul\":4001:4032   */\n      calldataload\n        /* \"#utility.yul\":4059:4077   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4051:4057   */\n      dup2\n        /* \"#utility.yul\":4048:4078   */\n      gt\n        /* \"#utility.yul\":4045:4162   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":4081:4160   */\n      tag_181\n      tag_114\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":4045:4162   */\n    tag_180:\n        /* \"#utility.yul\":4194:4258   */\n      tag_182\n        /* \"#utility.yul\":4250:4257   */\n      dup7\n        /* \"#utility.yul\":4241:4247   */\n      dup3\n        /* \"#utility.yul\":4230:4239   */\n      dup8\n        /* \"#utility.yul\":4226:4248   */\n      add\n        /* \"#utility.yul\":4194:4258   */\n      tag_123\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":4176:4258   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":3972:4268   */\n      pop\n        /* \"#utility.yul\":4307:4309   */\n      0x20\n        /* \"#utility.yul\":4333:4386   */\n      tag_183\n        /* \"#utility.yul\":4378:4385   */\n      dup7\n        /* \"#utility.yul\":4369:4375   */\n      dup3\n        /* \"#utility.yul\":4358:4367   */\n      dup8\n        /* \"#utility.yul\":4354:4376   */\n      add\n        /* \"#utility.yul\":4333:4386   */\n      tag_119\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4323:4386   */\n      swap2\n      pop\n        /* \"#utility.yul\":4278:4396   */\n      pop\n        /* \"#utility.yul\":3731:4403   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4409:4525   */\n    tag_124:\n        /* \"#utility.yul\":4479:4500   */\n      tag_185\n        /* \"#utility.yul\":4494:4499   */\n      dup2\n        /* \"#utility.yul\":4479:4500   */\n      tag_110\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4472:4477   */\n      dup2\n        /* \"#utility.yul\":4469:4501   */\n      eq\n        /* \"#utility.yul\":4459:4519   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":4515:4516   */\n      0x00\n        /* \"#utility.yul\":4512:4513   */\n      dup1\n        /* \"#utility.yul\":4505:4517   */\n      revert\n        /* \"#utility.yul\":4459:4519   */\n    tag_186:\n        /* \"#utility.yul\":4409:4525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4531:4668   */\n    tag_125:\n        /* \"#utility.yul\":4585:4590   */\n      0x00\n        /* \"#utility.yul\":4616:4622   */\n      dup2\n        /* \"#utility.yul\":4610:4623   */\n      mload\n        /* \"#utility.yul\":4601:4623   */\n      swap1\n      pop\n        /* \"#utility.yul\":4632:4662   */\n      tag_188\n        /* \"#utility.yul\":4656:4661   */\n      dup2\n        /* \"#utility.yul\":4632:4662   */\n      tag_124\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4531:4668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4674:5019   */\n    tag_56:\n        /* \"#utility.yul\":4741:4747   */\n      0x00\n        /* \"#utility.yul\":4790:4792   */\n      0x20\n        /* \"#utility.yul\":4778:4787   */\n      dup3\n        /* \"#utility.yul\":4769:4776   */\n      dup5\n        /* \"#utility.yul\":4765:4788   */\n      sub\n        /* \"#utility.yul\":4761:4793   */\n      slt\n        /* \"#utility.yul\":4758:4877   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":4796:4875   */\n      tag_191\n      tag_113\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4758:4877   */\n    tag_190:\n        /* \"#utility.yul\":4916:4917   */\n      0x00\n        /* \"#utility.yul\":4941:5002   */\n      tag_192\n        /* \"#utility.yul\":4994:5001   */\n      dup5\n        /* \"#utility.yul\":4985:4991   */\n      dup3\n        /* \"#utility.yul\":4974:4983   */\n      dup6\n        /* \"#utility.yul\":4970:4992   */\n      add\n        /* \"#utility.yul\":4941:5002   */\n      tag_125\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4931:5002   */\n      swap2\n      pop\n        /* \"#utility.yul\":4887:5012   */\n      pop\n        /* \"#utility.yul\":4674:5019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5025:5143   */\n    tag_126:\n        /* \"#utility.yul\":5112:5136   */\n      tag_194\n        /* \"#utility.yul\":5130:5135   */\n      dup2\n        /* \"#utility.yul\":5112:5136   */\n      tag_117\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5107:5110   */\n      dup3\n        /* \"#utility.yul\":5100:5137   */\n      mstore\n        /* \"#utility.yul\":5025:5143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5149:5481   */\n    tag_74:\n        /* \"#utility.yul\":5270:5274   */\n      0x00\n        /* \"#utility.yul\":5308:5310   */\n      0x40\n        /* \"#utility.yul\":5297:5306   */\n      dup3\n        /* \"#utility.yul\":5293:5311   */\n      add\n        /* \"#utility.yul\":5285:5311   */\n      swap1\n      pop\n        /* \"#utility.yul\":5321:5392   */\n      tag_196\n        /* \"#utility.yul\":5389:5390   */\n      0x00\n        /* \"#utility.yul\":5378:5387   */\n      dup4\n        /* \"#utility.yul\":5374:5391   */\n      add\n        /* \"#utility.yul\":5365:5371   */\n      dup6\n        /* \"#utility.yul\":5321:5392   */\n      tag_109\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5402:5474   */\n      tag_197\n        /* \"#utility.yul\":5470:5472   */\n      0x20\n        /* \"#utility.yul\":5459:5468   */\n      dup4\n        /* \"#utility.yul\":5455:5473   */\n      add\n        /* \"#utility.yul\":5446:5452   */\n      dup5\n        /* \"#utility.yul\":5402:5474   */\n      tag_126\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5149:5481   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5487:5655   */\n    tag_127:\n        /* \"#utility.yul\":5570:5581   */\n      0x00\n        /* \"#utility.yul\":5604:5610   */\n      dup3\n        /* \"#utility.yul\":5599:5602   */\n      dup3\n        /* \"#utility.yul\":5592:5611   */\n      mstore\n        /* \"#utility.yul\":5644:5648   */\n      0x20\n        /* \"#utility.yul\":5639:5642   */\n      dup3\n        /* \"#utility.yul\":5635:5649   */\n      add\n        /* \"#utility.yul\":5620:5649   */\n      swap1\n      pop\n        /* \"#utility.yul\":5487:5655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5661:5809   */\n    tag_128:\n        /* \"#utility.yul\":5759:5765   */\n      dup3\n        /* \"#utility.yul\":5754:5757   */\n      dup2\n        /* \"#utility.yul\":5749:5752   */\n      dup4\n        /* \"#utility.yul\":5736:5766   */\n      calldatacopy\n        /* \"#utility.yul\":5800:5801   */\n      0x00\n        /* \"#utility.yul\":5791:5797   */\n      dup4\n        /* \"#utility.yul\":5786:5789   */\n      dup4\n        /* \"#utility.yul\":5782:5798   */\n      add\n        /* \"#utility.yul\":5775:5802   */\n      mstore\n        /* \"#utility.yul\":5661:5809   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5815:5917   */\n    tag_129:\n        /* \"#utility.yul\":5856:5862   */\n      0x00\n        /* \"#utility.yul\":5907:5909   */\n      0x1f\n        /* \"#utility.yul\":5903:5910   */\n      not\n        /* \"#utility.yul\":5898:5900   */\n      0x1f\n        /* \"#utility.yul\":5891:5896   */\n      dup4\n        /* \"#utility.yul\":5887:5901   */\n      add\n        /* \"#utility.yul\":5883:5911   */\n      and\n        /* \"#utility.yul\":5873:5911   */\n      swap1\n      pop\n        /* \"#utility.yul\":5815:5917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5945:6259   */\n    tag_130:\n        /* \"#utility.yul\":6041:6044   */\n      0x00\n        /* \"#utility.yul\":6062:6132   */\n      tag_202\n        /* \"#utility.yul\":6125:6131   */\n      dup4\n        /* \"#utility.yul\":6120:6123   */\n      dup6\n        /* \"#utility.yul\":6062:6132   */\n      tag_127\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6055:6132   */\n      swap4\n      pop\n        /* \"#utility.yul\":6142:6198   */\n      tag_203\n        /* \"#utility.yul\":6191:6197   */\n      dup4\n        /* \"#utility.yul\":6186:6189   */\n      dup6\n        /* \"#utility.yul\":6179:6184   */\n      dup5\n        /* \"#utility.yul\":6142:6198   */\n      tag_128\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6223:6252   */\n      tag_204\n        /* \"#utility.yul\":6245:6251   */\n      dup4\n        /* \"#utility.yul\":6223:6252   */\n      tag_129\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":6218:6221   */\n      dup5\n        /* \"#utility.yul\":6214:6253   */\n      add\n        /* \"#utility.yul\":6207:6253   */\n      swap1\n      pop\n        /* \"#utility.yul\":5945:6259   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6265:6704   */\n    tag_94:\n        /* \"#utility.yul\":6414:6418   */\n      0x00\n        /* \"#utility.yul\":6452:6454   */\n      0x40\n        /* \"#utility.yul\":6441:6450   */\n      dup3\n        /* \"#utility.yul\":6437:6455   */\n      add\n        /* \"#utility.yul\":6429:6455   */\n      swap1\n      pop\n        /* \"#utility.yul\":6501:6510   */\n      dup2\n        /* \"#utility.yul\":6495:6499   */\n      dup2\n        /* \"#utility.yul\":6491:6511   */\n      sub\n        /* \"#utility.yul\":6487:6488   */\n      0x00\n        /* \"#utility.yul\":6476:6485   */\n      dup4\n        /* \"#utility.yul\":6472:6489   */\n      add\n        /* \"#utility.yul\":6465:6512   */\n      mstore\n        /* \"#utility.yul\":6529:6615   */\n      tag_206\n        /* \"#utility.yul\":6610:6614   */\n      dup2\n        /* \"#utility.yul\":6601:6607   */\n      dup6\n        /* \"#utility.yul\":6593:6599   */\n      dup8\n        /* \"#utility.yul\":6529:6615   */\n      tag_130\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6521:6615   */\n      swap1\n      pop\n        /* \"#utility.yul\":6625:6697   */\n      tag_207\n        /* \"#utility.yul\":6693:6695   */\n      0x20\n        /* \"#utility.yul\":6682:6691   */\n      dup4\n        /* \"#utility.yul\":6678:6696   */\n      add\n        /* \"#utility.yul\":6669:6675   */\n      dup5\n        /* \"#utility.yul\":6625:6697   */\n      tag_126\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":6265:6704   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f1d36cd6e095c558ceeb2b4d0c1fb8c291f9efab336c94aeddbcf983e12a4e0164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 249,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:6",
										"nodeType": "YulBlock",
										"src": "0:1707:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "939:413:6",
													"nodeType": "YulBlock",
													"src": "939:413:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:6",
																"nodeType": "YulBlock",
																"src": "985:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:6"
																			},
																			"nativeSrc": "987:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:6"
																		},
																		"nativeSrc": "987:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:6"
																		},
																		"nativeSrc": "956:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:6",
																		"nodeType": "YulLiteral",
																		"src": "981:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:6"
																},
																"nativeSrc": "952:32:6",
																"nodeType": "YulFunctionCall",
																"src": "952:32:6"
															},
															"nativeSrc": "949:119:6",
															"nodeType": "YulIf",
															"src": "949:119:6"
														},
														{
															"nativeSrc": "1078:128:6",
															"nodeType": "YulBlock",
															"src": "1078:128:6",
															"statements": [
																{
																	"nativeSrc": "1093:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:6"
																				},
																				"nativeSrc": "1164:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:6"
																		},
																		"nativeSrc": "1132:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:6",
															"nodeType": "YulBlock",
															"src": "1216:129:6",
															"statements": [
																{
																	"nativeSrc": "1231:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:6"
																				},
																				"nativeSrc": "1303:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:6"
																		},
																		"nativeSrc": "1271:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:6",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:6",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:6",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:6",
														"nodeType": "YulTypedName",
														"src": "932:6:6",
														"type": ""
													}
												],
												"src": "845:507:6"
											},
											{
												"body": {
													"nativeSrc": "1423:53:6",
													"nodeType": "YulBlock",
													"src": "1423:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:6"
																		},
																		"nativeSrc": "1445:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:6"
																},
																"nativeSrc": "1433:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:6"
															},
															"nativeSrc": "1433:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:6",
														"nodeType": "YulTypedName",
														"src": "1411:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:6",
														"nodeType": "YulTypedName",
														"src": "1418:3:6",
														"type": ""
													}
												],
												"src": "1358:118:6"
											},
											{
												"body": {
													"nativeSrc": "1580:124:6",
													"nodeType": "YulBlock",
													"src": "1580:124:6",
													"statements": [
														{
															"nativeSrc": "1590:26:6",
															"nodeType": "YulAssignment",
															"src": "1590:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:6"
																},
																"nativeSrc": "1598:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:6"
																		},
																		"nativeSrc": "1679:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:6"
																},
																"nativeSrc": "1626:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:6"
															},
															"nativeSrc": "1626:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:6",
														"nodeType": "YulTypedName",
														"src": "1552:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:6",
														"nodeType": "YulTypedName",
														"src": "1564:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:6",
														"nodeType": "YulTypedName",
														"src": "1575:4:6",
														"type": ""
													}
												],
												"src": "1482:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610f74380380610f7483398181016040528101906100319190610218565b815f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610265565b60405180910390fd5b6100b1816100f960201b60201c565b508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061027e565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e7826101be565b9050919050565b6101f7816101dd565b8114610201575f80fd5b50565b5f81519050610212816101ee565b92915050565b5f806040838503121561022e5761022d6101ba565b5b5f61023b85828601610204565b925050602061024c85828601610204565b9150509250929050565b61025f816101dd565b82525050565b5f6020820190506102785f830184610256565b92915050565b610ce98061028b5f395ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c80639b85622c116100645780639b85622c146100f9578063bcaf0d9a14610115578063ca09c88514610133578063f2fde38b1461014f578063f4bd456d1461016b57610091565b80630f2a7dd314610095578063715018a6146100b357806385a2dd15146100bd5780638da5cb5b146100db575b5f80fd5b61009d610187565b6040516100aa91906109c6565b60405180910390f35b6100bb6101ac565b005b6100c56101bf565b6040516100d291906109f9565b60405180910390f35b6100e361032c565b6040516100f091906109c6565b60405180910390f35b610113600480360381019061010e9190610a44565b610353565b005b61011d61039e565b60405161012a91906109c6565b60405180910390f35b61014d60048036038101906101489190610aa2565b6103c3565b005b61016960048036038101906101649190610a44565b6105ba565b005b61018560048036038101906101809190610b41565b61063e565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101b4610838565b6101bd5f6108bf565b565b5f8073ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610246576040517ff37741d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b166a09f336040518263ffffffff1660e01b81526004016102a491906109c6565b602060405180830381865afa1580156102bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102e39190610bc8565b61032457336040517f32b2baa300000000000000000000000000000000000000000000000000000000815260040161031b91906109c6565b60405180910390fd5b600191505090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61035b610838565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610449576040517ff37741d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b166a09f336040518263ffffffff1660e01b81526004016104a791906109c6565b602060405180830381865afa1580156104c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e69190610bc8565b61052757336040517f32b2baa300000000000000000000000000000000000000000000000000000000815260040161051e91906109c6565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166363d67dff85856040518363ffffffff1660e01b8152600401610587929190610c02565b5f604051808303815f87803b15801561059e575f80fd5b505af11580156105b0573d5f803e3d5ffd5b5050505050505050565b6105c2610838565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610632575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161062991906109c6565b60405180910390fd5b61063b816108bf565b50565b5f73ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106c4576040517ff37741d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b166a09f336040518263ffffffff1660e01b815260040161072291906109c6565b602060405180830381865afa15801561073d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107619190610bc8565b6107a257336040517f32b2baa300000000000000000000000000000000000000000000000000000000815260040161079991906109c6565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663930fc0068686866040518463ffffffff1660e01b815260040161080493929190610c83565b5f604051808303815f87803b15801561081b575f80fd5b505af115801561082d573d5f803e3d5ffd5b505050505050505050565b610840610980565b73ffffffffffffffffffffffffffffffffffffffff1661085e61032c565b73ffffffffffffffffffffffffffffffffffffffff16146108bd57610881610980565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108b491906109c6565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109b082610987565b9050919050565b6109c0816109a6565b82525050565b5f6020820190506109d95f8301846109b7565b92915050565b5f8115159050919050565b6109f3816109df565b82525050565b5f602082019050610a0c5f8301846109ea565b92915050565b5f80fd5b5f80fd5b610a23816109a6565b8114610a2d575f80fd5b50565b5f81359050610a3e81610a1a565b92915050565b5f60208284031215610a5957610a58610a12565b5b5f610a6684828501610a30565b91505092915050565b5f819050919050565b610a8181610a6f565b8114610a8b575f80fd5b50565b5f81359050610a9c81610a78565b92915050565b5f8060408385031215610ab857610ab7610a12565b5b5f610ac585828601610a30565b9250506020610ad685828601610a8e565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610b0157610b00610ae0565b5b8235905067ffffffffffffffff811115610b1e57610b1d610ae4565b5b602083019150836001820283011115610b3a57610b39610ae8565b5b9250929050565b5f805f60408486031215610b5857610b57610a12565b5b5f84013567ffffffffffffffff811115610b7557610b74610a16565b5b610b8186828701610aec565b93509350506020610b9486828701610a8e565b9150509250925092565b610ba7816109df565b8114610bb1575f80fd5b50565b5f81519050610bc281610b9e565b92915050565b5f60208284031215610bdd57610bdc610a12565b5b5f610bea84828501610bb4565b91505092915050565b610bfc81610a6f565b82525050565b5f604082019050610c155f8301856109b7565b610c226020830184610bf3565b9392505050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f610c628385610c29565b9350610c6f838584610c39565b610c7883610c47565b840190509392505050565b5f6040820190508181035f830152610c9c818587610c57565b9050610cab6020830184610bf3565b94935050505056fea2646970667358221220f1d36cd6e095c558ceeb2b4d0c1fb8c291f9efab336c94aeddbcf983e12a4e0164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF74 CODESIZE SUB DUP1 PUSH2 0xF74 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x218 JUMP JUMPDEST DUP2 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x27E JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP2 EQ PUSH2 0x201 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x212 DUP2 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1BA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B DUP6 DUP3 DUP7 ADD PUSH2 0x204 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24C DUP6 DUP3 DUP7 ADD PUSH2 0x204 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x278 PUSH0 DUP4 ADD DUP5 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCE9 DUP1 PUSH2 0x28B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B85622C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9B85622C EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBCAF0D9A EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xCA09C885 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xF4BD456D EQ PUSH2 0x16B JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xF2A7DD3 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x85A2DD15 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x1BD PUSH0 PUSH2 0x8BF JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF37741D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB166A09F CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x324 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x35B PUSH2 0x838 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF37741D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB166A09F CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x527 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x63D67DFF DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP3 SWAP2 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C2 PUSH2 0x838 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x632 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63B DUP2 PUSH2 0x8BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF37741D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB166A09F CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x7A2 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x930FC006 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x804 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x840 PUSH2 0x980 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x85E PUSH2 0x32C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BD JUMPI PUSH2 0x881 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B0 DUP3 PUSH2 0x987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C0 DUP2 PUSH2 0x9A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0x9DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0C PUSH0 DUP4 ADD DUP5 PUSH2 0x9EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA23 DUP2 PUSH2 0x9A6 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA3E DUP2 PUSH2 0xA1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA58 PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA81 DUP2 PUSH2 0xA6F JUMP JUMPDEST DUP2 EQ PUSH2 0xA8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9C DUP2 PUSH2 0xA78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB8 JUMPI PUSH2 0xAB7 PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAD6 DUP6 DUP3 DUP7 ADD PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB01 JUMPI PUSH2 0xB00 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1E JUMPI PUSH2 0xB1D PUSH2 0xAE4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB3A JUMPI PUSH2 0xB39 PUSH2 0xAE8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB58 JUMPI PUSH2 0xB57 PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB74 PUSH2 0xA16 JUMP JUMPDEST JUMPDEST PUSH2 0xB81 DUP7 DUP3 DUP8 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0xB94 DUP7 DUP3 DUP8 ADD PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0x9DF JUMP JUMPDEST DUP2 EQ PUSH2 0xBB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC2 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDD JUMPI PUSH2 0xBDC PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBEA DUP5 DUP3 DUP6 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBFC DUP2 PUSH2 0xA6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH0 DUP4 ADD DUP6 PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0xC22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC62 DUP4 DUP6 PUSH2 0xC29 JUMP JUMPDEST SWAP4 POP PUSH2 0xC6F DUP4 DUP6 DUP5 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xC78 DUP4 PUSH2 0xC47 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC9C DUP2 DUP6 DUP8 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH2 0xCAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD3 PUSH13 0xD6E095C558CEEB2B4D0C1FB8C2 SWAP2 0xF9 0xEF 0xAB CALLER PUSH13 0x94AEDDBCF983E12A4E0164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "400:1493:2:-:0;;;553:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;619:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;659:14:2::1;643:13;;:30;;;;;;;;;;;;;;;;;;553:127:::0;;400:1493;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;400:1493:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 2104,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2432,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2239,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantDatacapMock_315": {
									"entryPoint": 963,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@grantDatacap_291": {
									"entryPoint": 1598,
									"id": 291,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@hasAccess_267": {
									"entryPoint": 447,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mockAllocator_193": {
									"entryPoint": 391,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 812,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 428,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setStorageProviderEscrowFactory_222": {
									"entryPoint": 851,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@storageProviderEscrowFactoryAddr_195": {
									"entryPoint": 926,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1466,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_uint256": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3159,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6707:6",
										"nodeType": "YulBlock",
										"src": "0:6707:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "463:124:6",
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nativeSrc": "473:26:6",
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:6",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:18:6",
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:6",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nativeSrc": "562:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nativeSrc": "509:71:6",
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nativeSrc": "509:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:6",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:6",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:6",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nativeSrc": "635:48:6",
													"nodeType": "YulBlock",
													"src": "635:48:6",
													"statements": [
														{
															"nativeSrc": "645:32:6",
															"nodeType": "YulAssignment",
															"src": "645:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:6"
																		},
																		"nativeSrc": "663:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:6"
																},
																"nativeSrc": "656:21:6",
																"nodeType": "YulFunctionCall",
																"src": "656:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:6",
														"nodeType": "YulTypedName",
														"src": "617:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:6",
														"nodeType": "YulTypedName",
														"src": "627:7:6",
														"type": ""
													}
												],
												"src": "593:90:6"
											},
											{
												"body": {
													"nativeSrc": "748:50:6",
													"nodeType": "YulBlock",
													"src": "748:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:6"
																		},
																		"nativeSrc": "770:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:6"
																},
																"nativeSrc": "758:34:6",
																"nodeType": "YulFunctionCall",
																"src": "758:34:6"
															},
															"nativeSrc": "758:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:6",
														"nodeType": "YulTypedName",
														"src": "736:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:6",
														"nodeType": "YulTypedName",
														"src": "743:3:6",
														"type": ""
													}
												],
												"src": "689:109:6"
											},
											{
												"body": {
													"nativeSrc": "896:118:6",
													"nodeType": "YulBlock",
													"src": "896:118:6",
													"statements": [
														{
															"nativeSrc": "906:26:6",
															"nodeType": "YulAssignment",
															"src": "906:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:6",
																		"nodeType": "YulLiteral",
																		"src": "929:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:6"
																},
																"nativeSrc": "914:18:6",
																"nodeType": "YulFunctionCall",
																"src": "914:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:6"
																		},
																		"nativeSrc": "989:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:6"
																},
																"nativeSrc": "942:65:6",
																"nodeType": "YulFunctionCall",
																"src": "942:65:6"
															},
															"nativeSrc": "942:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:6",
														"nodeType": "YulTypedName",
														"src": "868:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:6",
														"nodeType": "YulTypedName",
														"src": "880:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:6",
														"nodeType": "YulTypedName",
														"src": "891:4:6",
														"type": ""
													}
												],
												"src": "804:210:6"
											},
											{
												"body": {
													"nativeSrc": "1060:35:6",
													"nodeType": "YulBlock",
													"src": "1060:35:6",
													"statements": [
														{
															"nativeSrc": "1070:19:6",
															"nodeType": "YulAssignment",
															"src": "1070:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:6"
																},
																"nativeSrc": "1080:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:6",
														"nodeType": "YulTypedName",
														"src": "1053:6:6",
														"type": ""
													}
												],
												"src": "1020:75:6"
											},
											{
												"body": {
													"nativeSrc": "1190:28:6",
													"nodeType": "YulBlock",
													"src": "1190:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:6"
																},
																"nativeSrc": "1200:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:6"
															},
															"nativeSrc": "1200:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:6"
											},
											{
												"body": {
													"nativeSrc": "1313:28:6",
													"nodeType": "YulBlock",
													"src": "1313:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:6"
																},
																"nativeSrc": "1323:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:6"
															},
															"nativeSrc": "1323:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:6"
											},
											{
												"body": {
													"nativeSrc": "1390:79:6",
													"nodeType": "YulBlock",
													"src": "1390:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:6",
																"nodeType": "YulBlock",
																"src": "1447:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:6"
																			},
																			"nativeSrc": "1449:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:6"
																		},
																		"nativeSrc": "1449:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:6"
																				},
																				"nativeSrc": "1420:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:6"
																		},
																		"nativeSrc": "1410:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:6"
																},
																"nativeSrc": "1403:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:6"
															},
															"nativeSrc": "1400:63:6",
															"nodeType": "YulIf",
															"src": "1400:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:6",
														"nodeType": "YulTypedName",
														"src": "1383:5:6",
														"type": ""
													}
												],
												"src": "1347:122:6"
											},
											{
												"body": {
													"nativeSrc": "1527:87:6",
													"nodeType": "YulBlock",
													"src": "1527:87:6",
													"statements": [
														{
															"nativeSrc": "1537:29:6",
															"nodeType": "YulAssignment",
															"src": "1537:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:6"
																},
																"nativeSrc": "1546:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:6"
																},
																"nativeSrc": "1575:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:6"
															},
															"nativeSrc": "1575:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:6",
														"nodeType": "YulTypedName",
														"src": "1505:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:6",
														"nodeType": "YulTypedName",
														"src": "1513:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:6",
														"nodeType": "YulTypedName",
														"src": "1521:5:6",
														"type": ""
													}
												],
												"src": "1475:139:6"
											},
											{
												"body": {
													"nativeSrc": "1686:263:6",
													"nodeType": "YulBlock",
													"src": "1686:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1732:83:6",
																"nodeType": "YulBlock",
																"src": "1732:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1734:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1734:77:6"
																			},
																			"nativeSrc": "1734:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1734:79:6"
																		},
																		"nativeSrc": "1734:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1707:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1707:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1716:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1703:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:6"
																		},
																		"nativeSrc": "1703:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1703:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1699:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1699:3:6"
																},
																"nativeSrc": "1699:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1699:32:6"
															},
															"nativeSrc": "1696:119:6",
															"nodeType": "YulIf",
															"src": "1696:119:6"
														},
														{
															"nativeSrc": "1825:117:6",
															"nodeType": "YulBlock",
															"src": "1825:117:6",
															"statements": [
																{
																	"nativeSrc": "1840:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1840:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1854:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1854:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1844:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1844:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1869:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1869:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1904:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1904:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1915:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1915:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1900:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:6"
																				},
																				"nativeSrc": "1900:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1900:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1924:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1879:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1879:20:6"
																		},
																		"nativeSrc": "1879:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1879:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1869:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1869:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1620:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1656:9:6",
														"nodeType": "YulTypedName",
														"src": "1656:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1667:7:6",
														"nodeType": "YulTypedName",
														"src": "1667:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1679:6:6",
														"nodeType": "YulTypedName",
														"src": "1679:6:6",
														"type": ""
													}
												],
												"src": "1620:329:6"
											},
											{
												"body": {
													"nativeSrc": "2000:32:6",
													"nodeType": "YulBlock",
													"src": "2000:32:6",
													"statements": [
														{
															"nativeSrc": "2010:16:6",
															"nodeType": "YulAssignment",
															"src": "2010:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2021:5:6",
																"nodeType": "YulIdentifier",
																"src": "2021:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2010:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2010:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1955:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1982:5:6",
														"nodeType": "YulTypedName",
														"src": "1982:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1992:7:6",
														"nodeType": "YulTypedName",
														"src": "1992:7:6",
														"type": ""
													}
												],
												"src": "1955:77:6"
											},
											{
												"body": {
													"nativeSrc": "2081:79:6",
													"nodeType": "YulBlock",
													"src": "2081:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2138:16:6",
																"nodeType": "YulBlock",
																"src": "2138:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2147:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2147:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2150:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2150:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2140:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2140:6:6"
																			},
																			"nativeSrc": "2140:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2140:12:6"
																		},
																		"nativeSrc": "2140:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2140:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2104:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2129:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2129:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2111:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2111:17:6"
																				},
																				"nativeSrc": "2111:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2111:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2101:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2101:2:6"
																		},
																		"nativeSrc": "2101:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2094:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:6"
																},
																"nativeSrc": "2094:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2094:43:6"
															},
															"nativeSrc": "2091:63:6",
															"nodeType": "YulIf",
															"src": "2091:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2038:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2074:5:6",
														"nodeType": "YulTypedName",
														"src": "2074:5:6",
														"type": ""
													}
												],
												"src": "2038:122:6"
											},
											{
												"body": {
													"nativeSrc": "2218:87:6",
													"nodeType": "YulBlock",
													"src": "2218:87:6",
													"statements": [
														{
															"nativeSrc": "2228:29:6",
															"nodeType": "YulAssignment",
															"src": "2228:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2250:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2250:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2237:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2237:12:6"
																},
																"nativeSrc": "2237:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2237:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2228:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2228:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2293:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2293:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2266:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2266:26:6"
																},
																"nativeSrc": "2266:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2266:33:6"
															},
															"nativeSrc": "2266:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2266:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2166:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2196:6:6",
														"nodeType": "YulTypedName",
														"src": "2196:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2204:3:6",
														"nodeType": "YulTypedName",
														"src": "2204:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2212:5:6",
														"nodeType": "YulTypedName",
														"src": "2212:5:6",
														"type": ""
													}
												],
												"src": "2166:139:6"
											},
											{
												"body": {
													"nativeSrc": "2394:391:6",
													"nodeType": "YulBlock",
													"src": "2394:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2440:83:6",
																"nodeType": "YulBlock",
																"src": "2440:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2442:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2442:77:6"
																			},
																			"nativeSrc": "2442:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2442:79:6"
																		},
																		"nativeSrc": "2442:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2442:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2415:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2415:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2424:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2424:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:6"
																		},
																		"nativeSrc": "2411:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2411:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2436:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2407:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2407:3:6"
																},
																"nativeSrc": "2407:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2407:32:6"
															},
															"nativeSrc": "2404:119:6",
															"nodeType": "YulIf",
															"src": "2404:119:6"
														},
														{
															"nativeSrc": "2533:117:6",
															"nodeType": "YulBlock",
															"src": "2533:117:6",
															"statements": [
																{
																	"nativeSrc": "2548:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2548:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2562:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2562:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2552:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2552:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2577:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2577:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2612:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2612:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2623:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2623:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2608:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2608:3:6"
																				},
																				"nativeSrc": "2608:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2608:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2632:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2632:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2587:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2587:20:6"
																		},
																		"nativeSrc": "2587:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2587:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2577:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2577:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2660:118:6",
															"nodeType": "YulBlock",
															"src": "2660:118:6",
															"statements": [
																{
																	"nativeSrc": "2675:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2675:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2689:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2689:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2679:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2679:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2705:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2705:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2740:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2740:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2751:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2751:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2736:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2736:3:6"
																				},
																				"nativeSrc": "2736:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2736:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2760:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2760:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2715:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2715:20:6"
																		},
																		"nativeSrc": "2715:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2715:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2705:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2705:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2311:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2356:9:6",
														"nodeType": "YulTypedName",
														"src": "2356:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2367:7:6",
														"nodeType": "YulTypedName",
														"src": "2367:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2379:6:6",
														"nodeType": "YulTypedName",
														"src": "2379:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2387:6:6",
														"nodeType": "YulTypedName",
														"src": "2387:6:6",
														"type": ""
													}
												],
												"src": "2311:474:6"
											},
											{
												"body": {
													"nativeSrc": "2880:28:6",
													"nodeType": "YulBlock",
													"src": "2880:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2897:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2900:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2900:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2890:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2890:6:6"
																},
																"nativeSrc": "2890:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2890:12:6"
															},
															"nativeSrc": "2890:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "2890:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2791:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2791:117:6"
											},
											{
												"body": {
													"nativeSrc": "3003:28:6",
													"nodeType": "YulBlock",
													"src": "3003:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3020:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3020:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3023:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3023:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3013:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3013:6:6"
																},
																"nativeSrc": "3013:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3013:12:6"
															},
															"nativeSrc": "3013:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "3013:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2914:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2914:117:6"
											},
											{
												"body": {
													"nativeSrc": "3126:28:6",
													"nodeType": "YulBlock",
													"src": "3126:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3143:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3143:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3146:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3146:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3136:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3136:6:6"
																},
																"nativeSrc": "3136:12:6",
																"nodeType": "YulFunctionCall",
																"src": "3136:12:6"
															},
															"nativeSrc": "3136:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "3136:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3037:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "3037:117:6"
											},
											{
												"body": {
													"nativeSrc": "3247:478:6",
													"nodeType": "YulBlock",
													"src": "3247:478:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3296:83:6",
																"nodeType": "YulBlock",
																"src": "3296:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3298:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3298:77:6"
																			},
																			"nativeSrc": "3298:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3298:79:6"
																		},
																		"nativeSrc": "3298:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3298:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3275:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3275:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3283:4:6",
																						"nodeType": "YulLiteral",
																						"src": "3283:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3271:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3271:3:6"
																				},
																				"nativeSrc": "3271:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3271:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3290:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3290:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3267:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3267:3:6"
																		},
																		"nativeSrc": "3267:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3267:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3260:6:6"
																},
																"nativeSrc": "3260:35:6",
																"nodeType": "YulFunctionCall",
																"src": "3260:35:6"
															},
															"nativeSrc": "3257:122:6",
															"nodeType": "YulIf",
															"src": "3257:122:6"
														},
														{
															"nativeSrc": "3388:30:6",
															"nodeType": "YulAssignment",
															"src": "3388:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3411:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3411:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3398:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3398:12:6"
																},
																"nativeSrc": "3398:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3398:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3388:6:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3461:83:6",
																"nodeType": "YulBlock",
																"src": "3461:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "3463:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3463:77:6"
																			},
																			"nativeSrc": "3463:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3463:79:6"
																		},
																		"nativeSrc": "3463:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3463:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3433:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3433:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3441:18:6",
																		"nodeType": "YulLiteral",
																		"src": "3441:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3430:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3430:2:6"
																},
																"nativeSrc": "3430:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3430:30:6"
															},
															"nativeSrc": "3427:117:6",
															"nodeType": "YulIf",
															"src": "3427:117:6"
														},
														{
															"nativeSrc": "3553:29:6",
															"nodeType": "YulAssignment",
															"src": "3553:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3569:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3569:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3577:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3565:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:6"
																},
																"nativeSrc": "3565:17:6",
																"nodeType": "YulFunctionCall",
																"src": "3565:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3553:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3553:8:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3636:83:6",
																"nodeType": "YulBlock",
																"src": "3636:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3638:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3638:77:6"
																			},
																			"nativeSrc": "3638:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3638:79:6"
																		},
																		"nativeSrc": "3638:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3601:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3601:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3615:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3615:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3623:4:6",
																						"nodeType": "YulLiteral",
																						"src": "3623:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3611:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3611:3:6"
																				},
																				"nativeSrc": "3611:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3611:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3597:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3597:3:6"
																		},
																		"nativeSrc": "3597:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3597:32:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3631:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3631:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3594:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3594:2:6"
																},
																"nativeSrc": "3594:41:6",
																"nodeType": "YulFunctionCall",
																"src": "3594:41:6"
															},
															"nativeSrc": "3591:128:6",
															"nodeType": "YulIf",
															"src": "3591:128:6"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "3173:552:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3214:6:6",
														"nodeType": "YulTypedName",
														"src": "3214:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3222:3:6",
														"nodeType": "YulTypedName",
														"src": "3222:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3230:8:6",
														"nodeType": "YulTypedName",
														"src": "3230:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3240:6:6",
														"nodeType": "YulTypedName",
														"src": "3240:6:6",
														"type": ""
													}
												],
												"src": "3173:552:6"
											},
											{
												"body": {
													"nativeSrc": "3833:570:6",
													"nodeType": "YulBlock",
													"src": "3833:570:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3879:83:6",
																"nodeType": "YulBlock",
																"src": "3879:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3881:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3881:77:6"
																			},
																			"nativeSrc": "3881:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3881:79:6"
																		},
																		"nativeSrc": "3881:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3881:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3854:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3854:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3863:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3863:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3850:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3850:3:6"
																		},
																		"nativeSrc": "3850:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3850:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3875:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3875:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3846:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3846:3:6"
																},
																"nativeSrc": "3846:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3846:32:6"
															},
															"nativeSrc": "3843:119:6",
															"nodeType": "YulIf",
															"src": "3843:119:6"
														},
														{
															"nativeSrc": "3972:296:6",
															"nodeType": "YulBlock",
															"src": "3972:296:6",
															"statements": [
																{
																	"nativeSrc": "3987:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3987:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4018:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4018:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4029:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4029:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4014:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4014:3:6"
																				},
																				"nativeSrc": "4014:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4014:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4001:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "4001:12:6"
																		},
																		"nativeSrc": "4001:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3991:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3991:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4079:83:6",
																		"nodeType": "YulBlock",
																		"src": "4079:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4081:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "4081:77:6"
																					},
																					"nativeSrc": "4081:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4081:79:6"
																				},
																				"nativeSrc": "4081:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4081:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4051:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4051:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4059:18:6",
																				"nodeType": "YulLiteral",
																				"src": "4059:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4048:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4048:2:6"
																		},
																		"nativeSrc": "4048:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:30:6"
																	},
																	"nativeSrc": "4045:117:6",
																	"nodeType": "YulIf",
																	"src": "4045:117:6"
																},
																{
																	"nativeSrc": "4176:82:6",
																	"nodeType": "YulAssignment",
																	"src": "4176:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4230:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4230:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4241:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4241:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4226:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4226:3:6"
																				},
																				"nativeSrc": "4226:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4226:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4250:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4250:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "4194:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "4194:31:6"
																		},
																		"nativeSrc": "4194:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4194:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4176:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4176:6:6"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "4184:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4184:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4278:118:6",
															"nodeType": "YulBlock",
															"src": "4278:118:6",
															"statements": [
																{
																	"nativeSrc": "4293:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4293:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4307:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4307:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4297:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4297:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4323:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4323:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4358:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4358:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4369:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4369:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4354:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4354:3:6"
																				},
																				"nativeSrc": "4354:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4354:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4378:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4378:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4333:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4333:20:6"
																		},
																		"nativeSrc": "4333:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4333:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4323:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4323:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_uint256",
												"nativeSrc": "3731:672:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3787:9:6",
														"nodeType": "YulTypedName",
														"src": "3787:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3798:7:6",
														"nodeType": "YulTypedName",
														"src": "3798:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3810:6:6",
														"nodeType": "YulTypedName",
														"src": "3810:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3818:6:6",
														"nodeType": "YulTypedName",
														"src": "3818:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3826:6:6",
														"nodeType": "YulTypedName",
														"src": "3826:6:6",
														"type": ""
													}
												],
												"src": "3731:672:6"
											},
											{
												"body": {
													"nativeSrc": "4449:76:6",
													"nodeType": "YulBlock",
													"src": "4449:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4503:16:6",
																"nodeType": "YulBlock",
																"src": "4503:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4512:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4512:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4515:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4515:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4505:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4505:6:6"
																			},
																			"nativeSrc": "4505:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4505:12:6"
																		},
																		"nativeSrc": "4505:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4505:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4472:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4472:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4494:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4494:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4479:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "4479:14:6"
																				},
																				"nativeSrc": "4479:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4479:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4469:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4469:2:6"
																		},
																		"nativeSrc": "4469:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4469:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4462:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4462:6:6"
																},
																"nativeSrc": "4462:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4462:40:6"
															},
															"nativeSrc": "4459:60:6",
															"nodeType": "YulIf",
															"src": "4459:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4409:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:6",
														"nodeType": "YulTypedName",
														"src": "4442:5:6",
														"type": ""
													}
												],
												"src": "4409:116:6"
											},
											{
												"body": {
													"nativeSrc": "4591:77:6",
													"nodeType": "YulBlock",
													"src": "4591:77:6",
													"statements": [
														{
															"nativeSrc": "4601:22:6",
															"nodeType": "YulAssignment",
															"src": "4601:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4616:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4616:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4610:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4610:5:6"
																},
																"nativeSrc": "4610:13:6",
																"nodeType": "YulFunctionCall",
																"src": "4610:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4601:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4601:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4656:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4656:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4632:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "4632:23:6"
																},
																"nativeSrc": "4632:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4632:30:6"
															},
															"nativeSrc": "4632:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4632:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4531:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4569:6:6",
														"nodeType": "YulTypedName",
														"src": "4569:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4577:3:6",
														"nodeType": "YulTypedName",
														"src": "4577:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4585:5:6",
														"nodeType": "YulTypedName",
														"src": "4585:5:6",
														"type": ""
													}
												],
												"src": "4531:137:6"
											},
											{
												"body": {
													"nativeSrc": "4748:271:6",
													"nodeType": "YulBlock",
													"src": "4748:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4794:83:6",
																"nodeType": "YulBlock",
																"src": "4794:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4796:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4796:77:6"
																			},
																			"nativeSrc": "4796:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4796:79:6"
																		},
																		"nativeSrc": "4796:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4796:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4769:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4769:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4778:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4778:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4765:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:6"
																		},
																		"nativeSrc": "4765:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4765:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4790:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4790:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4761:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4761:3:6"
																},
																"nativeSrc": "4761:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4761:32:6"
															},
															"nativeSrc": "4758:119:6",
															"nodeType": "YulIf",
															"src": "4758:119:6"
														},
														{
															"nativeSrc": "4887:125:6",
															"nodeType": "YulBlock",
															"src": "4887:125:6",
															"statements": [
																{
																	"nativeSrc": "4902:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4902:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4916:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4906:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4906:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4931:71:6",
																	"nodeType": "YulAssignment",
																	"src": "4931:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4974:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4974:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4985:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4970:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:6"
																				},
																				"nativeSrc": "4970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4994:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4941:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "4941:28:6"
																		},
																		"nativeSrc": "4941:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4941:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4931:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4931:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4674:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4718:9:6",
														"nodeType": "YulTypedName",
														"src": "4718:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4729:7:6",
														"nodeType": "YulTypedName",
														"src": "4729:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4741:6:6",
														"nodeType": "YulTypedName",
														"src": "4741:6:6",
														"type": ""
													}
												],
												"src": "4674:345:6"
											},
											{
												"body": {
													"nativeSrc": "5090:53:6",
													"nodeType": "YulBlock",
													"src": "5090:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5107:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5107:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5130:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5130:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5112:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5112:17:6"
																		},
																		"nativeSrc": "5112:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5100:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5100:6:6"
																},
																"nativeSrc": "5100:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5100:37:6"
															},
															"nativeSrc": "5100:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5100:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5025:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5078:5:6",
														"nodeType": "YulTypedName",
														"src": "5078:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5085:3:6",
														"nodeType": "YulTypedName",
														"src": "5085:3:6",
														"type": ""
													}
												],
												"src": "5025:118:6"
											},
											{
												"body": {
													"nativeSrc": "5275:206:6",
													"nodeType": "YulBlock",
													"src": "5275:206:6",
													"statements": [
														{
															"nativeSrc": "5285:26:6",
															"nodeType": "YulAssignment",
															"src": "5285:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5297:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5297:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5293:3:6"
																},
																"nativeSrc": "5293:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5293:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5285:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5285:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5365:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5365:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5378:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5378:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5389:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5389:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5374:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:6"
																		},
																		"nativeSrc": "5374:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5374:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5321:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5321:43:6"
																},
																"nativeSrc": "5321:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5321:71:6"
															},
															"nativeSrc": "5321:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5321:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5446:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5446:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5459:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5459:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5470:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5470:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5455:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5455:3:6"
																		},
																		"nativeSrc": "5455:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5455:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5402:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5402:43:6"
																},
																"nativeSrc": "5402:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5402:72:6"
															},
															"nativeSrc": "5402:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5402:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5149:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5239:9:6",
														"nodeType": "YulTypedName",
														"src": "5239:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5251:6:6",
														"nodeType": "YulTypedName",
														"src": "5251:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5259:6:6",
														"nodeType": "YulTypedName",
														"src": "5259:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5270:4:6",
														"nodeType": "YulTypedName",
														"src": "5270:4:6",
														"type": ""
													}
												],
												"src": "5149:332:6"
											},
											{
												"body": {
													"nativeSrc": "5582:73:6",
													"nodeType": "YulBlock",
													"src": "5582:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5599:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5599:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5604:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5592:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:6"
																},
																"nativeSrc": "5592:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5592:19:6"
															},
															"nativeSrc": "5592:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "5592:19:6"
														},
														{
															"nativeSrc": "5620:29:6",
															"nodeType": "YulAssignment",
															"src": "5620:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5639:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5639:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5644:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5635:3:6"
																},
																"nativeSrc": "5635:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5635:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5620:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "5620:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "5487:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5554:3:6",
														"nodeType": "YulTypedName",
														"src": "5554:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5559:6:6",
														"nodeType": "YulTypedName",
														"src": "5559:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5570:11:6",
														"nodeType": "YulTypedName",
														"src": "5570:11:6",
														"type": ""
													}
												],
												"src": "5487:168:6"
											},
											{
												"body": {
													"nativeSrc": "5725:84:6",
													"nodeType": "YulBlock",
													"src": "5725:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5749:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5749:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5754:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5754:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5759:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5759:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5736:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5736:12:6"
																},
																"nativeSrc": "5736:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5736:30:6"
															},
															"nativeSrc": "5736:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5736:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5786:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5786:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5791:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5791:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5782:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5782:3:6"
																		},
																		"nativeSrc": "5782:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5782:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5800:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5800:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5775:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:6"
																},
																"nativeSrc": "5775:27:6",
																"nodeType": "YulFunctionCall",
																"src": "5775:27:6"
															},
															"nativeSrc": "5775:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "5775:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5661:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5707:3:6",
														"nodeType": "YulTypedName",
														"src": "5707:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5712:3:6",
														"nodeType": "YulTypedName",
														"src": "5712:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5717:6:6",
														"nodeType": "YulTypedName",
														"src": "5717:6:6",
														"type": ""
													}
												],
												"src": "5661:148:6"
											},
											{
												"body": {
													"nativeSrc": "5863:54:6",
													"nodeType": "YulBlock",
													"src": "5863:54:6",
													"statements": [
														{
															"nativeSrc": "5873:38:6",
															"nodeType": "YulAssignment",
															"src": "5873:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5891:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5891:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5898:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5898:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5887:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:6"
																		},
																		"nativeSrc": "5887:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5887:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5907:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5907:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5903:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5903:3:6"
																		},
																		"nativeSrc": "5903:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5903:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5883:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5883:3:6"
																},
																"nativeSrc": "5883:28:6",
																"nodeType": "YulFunctionCall",
																"src": "5883:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5873:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5873:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5815:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5846:5:6",
														"nodeType": "YulTypedName",
														"src": "5846:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5856:6:6",
														"nodeType": "YulTypedName",
														"src": "5856:6:6",
														"type": ""
													}
												],
												"src": "5815:102:6"
											},
											{
												"body": {
													"nativeSrc": "6045:214:6",
													"nodeType": "YulBlock",
													"src": "6045:214:6",
													"statements": [
														{
															"nativeSrc": "6055:77:6",
															"nodeType": "YulAssignment",
															"src": "6055:77:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6120:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6120:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6125:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6125:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6062:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "6062:57:6"
																},
																"nativeSrc": "6062:70:6",
																"nodeType": "YulFunctionCall",
																"src": "6062:70:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6055:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6055:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6179:5:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6186:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6191:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6191:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6142:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "6142:36:6"
																},
																"nativeSrc": "6142:56:6",
																"nodeType": "YulFunctionCall",
																"src": "6142:56:6"
															},
															"nativeSrc": "6142:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "6142:56:6"
														},
														{
															"nativeSrc": "6207:46:6",
															"nodeType": "YulAssignment",
															"src": "6207:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6218:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6218:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6245:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6245:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6223:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "6223:21:6"
																		},
																		"nativeSrc": "6223:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6223:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6214:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6214:3:6"
																},
																"nativeSrc": "6214:39:6",
																"nodeType": "YulFunctionCall",
																"src": "6214:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6207:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6207:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "5945:314:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6018:5:6",
														"nodeType": "YulTypedName",
														"src": "6018:5:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6025:6:6",
														"nodeType": "YulTypedName",
														"src": "6025:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6033:3:6",
														"nodeType": "YulTypedName",
														"src": "6033:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6041:3:6",
														"nodeType": "YulTypedName",
														"src": "6041:3:6",
														"type": ""
													}
												],
												"src": "5945:314:6"
											},
											{
												"body": {
													"nativeSrc": "6419:285:6",
													"nodeType": "YulBlock",
													"src": "6419:285:6",
													"statements": [
														{
															"nativeSrc": "6429:26:6",
															"nodeType": "YulAssignment",
															"src": "6429:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6441:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6441:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6452:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6452:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6437:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6437:3:6"
																},
																"nativeSrc": "6437:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6437:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6429:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6429:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6476:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6476:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6487:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6487:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6472:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:6"
																		},
																		"nativeSrc": "6472:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6472:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6495:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6495:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6501:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6501:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6491:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6491:3:6"
																		},
																		"nativeSrc": "6491:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6491:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6465:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6465:6:6"
																},
																"nativeSrc": "6465:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6465:47:6"
															},
															"nativeSrc": "6465:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6465:47:6"
														},
														{
															"nativeSrc": "6521:94:6",
															"nodeType": "YulAssignment",
															"src": "6521:94:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6593:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6593:6:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6601:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6601:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6610:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6610:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "6529:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "6529:63:6"
																},
																"nativeSrc": "6529:86:6",
																"nodeType": "YulFunctionCall",
																"src": "6529:86:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6521:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6521:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6669:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6669:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6682:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6693:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6693:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6678:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:6"
																		},
																		"nativeSrc": "6678:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6625:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6625:43:6"
																},
																"nativeSrc": "6625:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6625:72:6"
															},
															"nativeSrc": "6625:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6625:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "6265:439:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6375:9:6",
														"nodeType": "YulTypedName",
														"src": "6375:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6387:6:6",
														"nodeType": "YulTypedName",
														"src": "6387:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6395:6:6",
														"nodeType": "YulTypedName",
														"src": "6395:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6403:6:6",
														"nodeType": "YulTypedName",
														"src": "6403:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6414:4:6",
														"nodeType": "YulTypedName",
														"src": "6414:4:6",
														"type": ""
													}
												],
												"src": "6265:439:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c80639b85622c116100645780639b85622c146100f9578063bcaf0d9a14610115578063ca09c88514610133578063f2fde38b1461014f578063f4bd456d1461016b57610091565b80630f2a7dd314610095578063715018a6146100b357806385a2dd15146100bd5780638da5cb5b146100db575b5f80fd5b61009d610187565b6040516100aa91906109c6565b60405180910390f35b6100bb6101ac565b005b6100c56101bf565b6040516100d291906109f9565b60405180910390f35b6100e361032c565b6040516100f091906109c6565b60405180910390f35b610113600480360381019061010e9190610a44565b610353565b005b61011d61039e565b60405161012a91906109c6565b60405180910390f35b61014d60048036038101906101489190610aa2565b6103c3565b005b61016960048036038101906101649190610a44565b6105ba565b005b61018560048036038101906101809190610b41565b61063e565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101b4610838565b6101bd5f6108bf565b565b5f8073ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610246576040517ff37741d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b166a09f336040518263ffffffff1660e01b81526004016102a491906109c6565b602060405180830381865afa1580156102bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102e39190610bc8565b61032457336040517f32b2baa300000000000000000000000000000000000000000000000000000000815260040161031b91906109c6565b60405180910390fd5b600191505090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61035b610838565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610449576040517ff37741d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b166a09f336040518263ffffffff1660e01b81526004016104a791906109c6565b602060405180830381865afa1580156104c2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e69190610bc8565b61052757336040517f32b2baa300000000000000000000000000000000000000000000000000000000815260040161051e91906109c6565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166363d67dff85856040518363ffffffff1660e01b8152600401610587929190610c02565b5f604051808303815f87803b15801561059e575f80fd5b505af11580156105b0573d5f803e3d5ffd5b5050505050505050565b6105c2610838565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610632575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161062991906109c6565b60405180910390fd5b61063b816108bf565b50565b5f73ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036106c4576040517ff37741d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b166a09f336040518263ffffffff1660e01b815260040161072291906109c6565b602060405180830381865afa15801561073d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107619190610bc8565b6107a257336040517f32b2baa300000000000000000000000000000000000000000000000000000000815260040161079991906109c6565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663930fc0068686866040518463ffffffff1660e01b815260040161080493929190610c83565b5f604051808303815f87803b15801561081b575f80fd5b505af115801561082d573d5f803e3d5ffd5b505050505050505050565b610840610980565b73ffffffffffffffffffffffffffffffffffffffff1661085e61032c565b73ffffffffffffffffffffffffffffffffffffffff16146108bd57610881610980565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108b491906109c6565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109b082610987565b9050919050565b6109c0816109a6565b82525050565b5f6020820190506109d95f8301846109b7565b92915050565b5f8115159050919050565b6109f3816109df565b82525050565b5f602082019050610a0c5f8301846109ea565b92915050565b5f80fd5b5f80fd5b610a23816109a6565b8114610a2d575f80fd5b50565b5f81359050610a3e81610a1a565b92915050565b5f60208284031215610a5957610a58610a12565b5b5f610a6684828501610a30565b91505092915050565b5f819050919050565b610a8181610a6f565b8114610a8b575f80fd5b50565b5f81359050610a9c81610a78565b92915050565b5f8060408385031215610ab857610ab7610a12565b5b5f610ac585828601610a30565b9250506020610ad685828601610a8e565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610b0157610b00610ae0565b5b8235905067ffffffffffffffff811115610b1e57610b1d610ae4565b5b602083019150836001820283011115610b3a57610b39610ae8565b5b9250929050565b5f805f60408486031215610b5857610b57610a12565b5b5f84013567ffffffffffffffff811115610b7557610b74610a16565b5b610b8186828701610aec565b93509350506020610b9486828701610a8e565b9150509250925092565b610ba7816109df565b8114610bb1575f80fd5b50565b5f81519050610bc281610b9e565b92915050565b5f60208284031215610bdd57610bdc610a12565b5b5f610bea84828501610bb4565b91505092915050565b610bfc81610a6f565b82525050565b5f604082019050610c155f8301856109b7565b610c226020830184610bf3565b9392505050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f610c628385610c29565b9350610c6f838584610c39565b610c7883610c47565b840190509392505050565b5f6040820190508181035f830152610c9c818587610c57565b9050610cab6020830184610bf3565b94935050505056fea2646970667358221220f1d36cd6e095c558ceeb2b4d0c1fb8c291f9efab336c94aeddbcf983e12a4e0164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B85622C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9B85622C EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBCAF0D9A EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0xCA09C885 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xF4BD456D EQ PUSH2 0x16B JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xF2A7DD3 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x85A2DD15 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xDB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x1AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC5 PUSH2 0x1BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST PUSH2 0x5BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x838 JUMP JUMPDEST PUSH2 0x1BD PUSH0 PUSH2 0x8BF JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF37741D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB166A09F CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x324 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x35B PUSH2 0x838 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x449 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF37741D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB166A09F CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x527 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x63D67DFF DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x587 SWAP3 SWAP2 SWAP1 PUSH2 0xC02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5C2 PUSH2 0x838 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x632 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63B DUP2 PUSH2 0x8BF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF37741D700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB166A09F CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x761 SWAP2 SWAP1 PUSH2 0xBC8 JUMP JUMPDEST PUSH2 0x7A2 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x32B2BAA300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x930FC006 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x804 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x840 PUSH2 0x980 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x85E PUSH2 0x32C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BD JUMPI PUSH2 0x881 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B4 SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9B0 DUP3 PUSH2 0x987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C0 DUP2 PUSH2 0x9A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x9B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F3 DUP2 PUSH2 0x9DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA0C PUSH0 DUP4 ADD DUP5 PUSH2 0x9EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA23 DUP2 PUSH2 0x9A6 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA3E DUP2 PUSH2 0xA1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA58 PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA81 DUP2 PUSH2 0xA6F JUMP JUMPDEST DUP2 EQ PUSH2 0xA8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9C DUP2 PUSH2 0xA78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB8 JUMPI PUSH2 0xAB7 PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAC5 DUP6 DUP3 DUP7 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAD6 DUP6 DUP3 DUP7 ADD PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xB01 JUMPI PUSH2 0xB00 PUSH2 0xAE0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB1E JUMPI PUSH2 0xB1D PUSH2 0xAE4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xB3A JUMPI PUSH2 0xB39 PUSH2 0xAE8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB58 JUMPI PUSH2 0xB57 PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB74 PUSH2 0xA16 JUMP JUMPDEST JUMPDEST PUSH2 0xB81 DUP7 DUP3 DUP8 ADD PUSH2 0xAEC JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0xB94 DUP7 DUP3 DUP8 ADD PUSH2 0xA8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xBA7 DUP2 PUSH2 0x9DF JUMP JUMPDEST DUP2 EQ PUSH2 0xBB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBC2 DUP2 PUSH2 0xB9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDD JUMPI PUSH2 0xBDC PUSH2 0xA12 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBEA DUP5 DUP3 DUP6 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBFC DUP2 PUSH2 0xA6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC15 PUSH0 DUP4 ADD DUP6 PUSH2 0x9B7 JUMP JUMPDEST PUSH2 0xC22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC62 DUP4 DUP6 PUSH2 0xC29 JUMP JUMPDEST SWAP4 POP PUSH2 0xC6F DUP4 DUP6 DUP5 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xC78 DUP4 PUSH2 0xC47 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC9C DUP2 DUP6 DUP8 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH2 0xCAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBF3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xD3 PUSH13 0xD6E095C558CEEB2B4D0C1FB8C2 SWAP2 0xF9 0xEF 0xAB CALLER PUSH13 0x94AEDDBCF983E12A4E0164736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "400:1493:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;464:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1288:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;686:192:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;499:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1644:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1392:246:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;464:28;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1288:98:2:-;1352:4;973:1;929:46;;:32;;;;;;;;;;;:46;;;925:119;;998:35;;;;;;;;;;;;;;925:119;1054:37;1124:32;;;;;;;;;;;1054:103;;1172:7;:16;;;1189:10;1172:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1167:98;;1243:10;1223:31;;;;;;;;;;;:::i;:::-;;;;;;;;1167:98;1375:4:::1;1368:11;;915:367:::0;1288:98;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;686:192:2:-;1531:13:0;:11;:13::i;:::-;836:35:2::1;801:32;;:70;;;;;;;;;;;;;;;;;;686:192:::0;:::o;499:47::-;;;;;;;;;;;;;:::o;1644:247::-;973:1;929:46;;:32;;;;;;;;;;;:46;;;925:119;;998:35;;;;;;;;;;;;;;925:119;1054:37;1124:32;;;;;;;;;;;1054:103;;1172:7;:16;;;1189:10;1172:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1167:98;;1243:10;1223:31;;;;;;;;;;;:::i;:::-;;;;;;;;1167:98;1756:24:::1;1798:13;;;;;;;;;;;1756:56;;1822:9;:31;;;1854:21;1877:6;1822:62;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1746:145;915:367:::0;1644:247;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1392:246:2:-;973:1;929:46;;:32;;;;;;;;;;;:46;;;925:119;;998:35;;;;;;;;;;;;;;925:119;1054:37;1124:32;;;;;;;;;;;1054:103;;1172:7;:16;;;1189:10;1172:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1167:98;;1243:10;1223:31;;;;;;;;;;;:::i;:::-;;;;;;;;1167:98;1507:24:::1;1549:13;;;;;;;;;;;1507:56;;1573:9;:27;;;1601:21;;1624:6;1573:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1497:141;915:367:::0;1392:246;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o;1101:117::-;1210:1;1207;1200:12;1224:117;1333:1;1330;1323:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:329::-;1679:6;1728:2;1716:9;1707:7;1703:23;1699:32;1696:119;;;1734:79;;:::i;:::-;1696:119;1854:1;1879:53;1924:7;1915:6;1904:9;1900:22;1879:53;:::i;:::-;1869:63;;1825:117;1620:329;;;;:::o;1955:77::-;1992:7;2021:5;2010:16;;1955:77;;;:::o;2038:122::-;2111:24;2129:5;2111:24;:::i;:::-;2104:5;2101:35;2091:63;;2150:1;2147;2140:12;2091:63;2038:122;:::o;2166:139::-;2212:5;2250:6;2237:20;2228:29;;2266:33;2293:5;2266:33;:::i;:::-;2166:139;;;;:::o;2311:474::-;2379:6;2387;2436:2;2424:9;2415:7;2411:23;2407:32;2404:119;;;2442:79;;:::i;:::-;2404:119;2562:1;2587:53;2632:7;2623:6;2612:9;2608:22;2587:53;:::i;:::-;2577:63;;2533:117;2689:2;2715:53;2760:7;2751:6;2740:9;2736:22;2715:53;:::i;:::-;2705:63;;2660:118;2311:474;;;;;:::o;2791:117::-;2900:1;2897;2890:12;2914:117;3023:1;3020;3013:12;3037:117;3146:1;3143;3136:12;3173:552;3230:8;3240:6;3290:3;3283:4;3275:6;3271:17;3267:27;3257:122;;3298:79;;:::i;:::-;3257:122;3411:6;3398:20;3388:30;;3441:18;3433:6;3430:30;3427:117;;;3463:79;;:::i;:::-;3427:117;3577:4;3569:6;3565:17;3553:29;;3631:3;3623:4;3615:6;3611:17;3601:8;3597:32;3594:41;3591:128;;;3638:79;;:::i;:::-;3591:128;3173:552;;;;;:::o;3731:672::-;3810:6;3818;3826;3875:2;3863:9;3854:7;3850:23;3846:32;3843:119;;;3881:79;;:::i;:::-;3843:119;4029:1;4018:9;4014:17;4001:31;4059:18;4051:6;4048:30;4045:117;;;4081:79;;:::i;:::-;4045:117;4194:64;4250:7;4241:6;4230:9;4226:22;4194:64;:::i;:::-;4176:82;;;;3972:296;4307:2;4333:53;4378:7;4369:6;4358:9;4354:22;4333:53;:::i;:::-;4323:63;;4278:118;3731:672;;;;;:::o;4409:116::-;4479:21;4494:5;4479:21;:::i;:::-;4472:5;4469:32;4459:60;;4515:1;4512;4505:12;4459:60;4409:116;:::o;4531:137::-;4585:5;4616:6;4610:13;4601:22;;4632:30;4656:5;4632:30;:::i;:::-;4531:137;;;;:::o;4674:345::-;4741:6;4790:2;4778:9;4769:7;4765:23;4761:32;4758:119;;;4796:79;;:::i;:::-;4758:119;4916:1;4941:61;4994:7;4985:6;4974:9;4970:22;4941:61;:::i;:::-;4931:71;;4887:125;4674:345;;;;:::o;5025:118::-;5112:24;5130:5;5112:24;:::i;:::-;5107:3;5100:37;5025:118;;:::o;5149:332::-;5270:4;5308:2;5297:9;5293:18;5285:26;;5321:71;5389:1;5378:9;5374:17;5365:6;5321:71;:::i;:::-;5402:72;5470:2;5459:9;5455:18;5446:6;5402:72;:::i;:::-;5149:332;;;;;:::o;5487:168::-;5570:11;5604:6;5599:3;5592:19;5644:4;5639:3;5635:14;5620:29;;5487:168;;;;:::o;5661:148::-;5759:6;5754:3;5749;5736:30;5800:1;5791:6;5786:3;5782:16;5775:27;5661:148;;;:::o;5815:102::-;5856:6;5907:2;5903:7;5898:2;5891:5;5887:14;5883:28;5873:38;;5815:102;;;:::o;5945:314::-;6041:3;6062:70;6125:6;6120:3;6062:70;:::i;:::-;6055:77;;6142:56;6191:6;6186:3;6179:5;6142:56;:::i;:::-;6223:29;6245:6;6223:29;:::i;:::-;6218:3;6214:39;6207:46;;5945:314;;;;;:::o;6265:439::-;6414:4;6452:2;6441:9;6437:18;6429:26;;6501:9;6495:4;6491:20;6487:1;6476:9;6472:17;6465:47;6529:86;6610:4;6601:6;6593;6529:86;:::i;:::-;6521:94;;6625:72;6693:2;6682:9;6678:18;6669:6;6625:72;:::i;:::-;6265:439;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "661000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"grantDatacap(bytes,uint256)": "infinite",
								"grantDatacapMock(address,uint256)": "infinite",
								"hasAccess()": "infinite",
								"mockAllocator()": "2509",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"setStorageProviderEscrowFactory(address)": "infinite",
								"storageProviderEscrowFactoryAddr()": "2530",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 400,
									"end": 1893,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 680,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 680,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 553,
									"end": 680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 680,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 680,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 553,
									"end": 680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 553,
									"end": 680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 553,
									"end": 680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 619,
									"end": 631,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 659,
									"end": 673,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 643,
									"end": 656,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 643,
									"end": 656,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 643,
									"end": 673,
									"modifierDepth": 1,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 553,
									"end": 680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 1893,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1d36cd6e095c558ceeb2b4d0c1fb8c291f9efab336c94aeddbcf983e12a4e0164736f6c634300081a0033",
									".code": [
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "9B85622C"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "9B85622C"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "BCAF0D9A"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "CA09C885"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "F4BD456D"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "F2A7DD3"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "85A2DD15"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 400,
											"end": 1893,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1288,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 686,
											"end": 878,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 686,
											"end": 878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 686,
											"end": 878,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 686,
											"end": 878,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 686,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 686,
											"end": 878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 686,
											"end": 878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 686,
											"end": 878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 499,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1644,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1644,
											"end": 1891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1392,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1392,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 464,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1356,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 975,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "F37741D700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "B166A09F"
										},
										{
											"begin": 1189,
											"end": 1199,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1172,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1172,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "32B2BAA300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1223,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1375,
											"end": 1379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1379,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1368,
											"end": 1379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 915,
											"end": 1282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1288,
											"end": 1386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 878,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 686,
											"end": 878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 836,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 801,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 801,
											"end": 871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 686,
											"end": 878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 499,
											"end": 546,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 499,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 975,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "F37741D700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "B166A09F"
										},
										{
											"begin": 1189,
											"end": 1199,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1172,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1172,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "32B2BAA300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1223,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1798,
											"end": 1811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1831,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1853,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "63D67DFF"
										},
										{
											"begin": 1854,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1883,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1822,
											"end": 1884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 915,
											"end": 1282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 929,
											"end": 961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 929,
											"end": 975,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "F37741D700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1033,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 925,
											"end": 1044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1157,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1157,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1179,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "B166A09F"
										},
										{
											"begin": 1189,
											"end": 1199,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1172,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1172,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "32B2BAA300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1223,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1254,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1167,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1549,
											"end": 1562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1563,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1563,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1582,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "930FC006"
										},
										{
											"begin": 1601,
											"end": 1622,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1601,
											"end": 1622,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1624,
											"end": 1630,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1573,
											"end": 1631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1497,
											"end": 1638,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 915,
											"end": 1282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1341,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1224,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1335,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1714,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1734,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1734,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1696,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1879,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1879,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1992,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2129,
											"end": 2134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2111,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2111,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2101,
											"end": 2136,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2152,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2091,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2257,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2266,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2266,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2785,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2311,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2393,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2433,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2434,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2439,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2523,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2404,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2442,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2442,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2442,
											"end": 2521,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2442,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2404,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2632,
											"end": 2639,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2621,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2587,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2587,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2533,
											"end": 2650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2760,
											"end": 2767,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2715,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2908,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2791,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3031,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2914,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3025,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3037,
											"end": 3154,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3037,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3725,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3173,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3293,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3287,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3271,
											"end": 3288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3294,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3257,
											"end": 3379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3298,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3298,
											"end": 3377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3377,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3298,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3379,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3257,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3418,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3388,
											"end": 3418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3459,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3433,
											"end": 3439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3460,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3427,
											"end": 3544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 3463,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3463,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3544,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3427,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3581,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3628,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3609,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3597,
											"end": 3629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3594,
											"end": 3635,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3719,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3591,
											"end": 3719,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3638,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3638,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3719,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3591,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3725,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3725,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 4403,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3731,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3877,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3863,
											"end": 3872,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3854,
											"end": 3861,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3873,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3878,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3962,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3843,
											"end": 3962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3881,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3881,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3960,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3881,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3843,
											"end": 3962,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3843,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4032,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4077,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4051,
											"end": 4057,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4078,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4045,
											"end": 4162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4081,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 4081,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4162,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4045,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4194,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4194,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4258,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4258,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4176,
											"end": 4258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4307,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4378,
											"end": 4385,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4367,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4333,
											"end": 4386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4278,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 4403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 4403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 4403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 4403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 4403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 4403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4525,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4409,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4494,
											"end": 4499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4479,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4469,
											"end": 4501,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4459,
											"end": 4519,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4519,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4459,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4525,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4668,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4531,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4632,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4656,
											"end": 4661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4632,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4632,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4632,
											"end": 4662,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 4632,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 5019,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4674,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4778,
											"end": 4787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4788,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 4793,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4796,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4941,
											"end": 5002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5002,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4941,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 5002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 5002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4887,
											"end": 5012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 5019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 5019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 5019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 5019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4674,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5143,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5025,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 5130,
											"end": 5135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 5112,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5136,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 5112,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5107,
											"end": 5110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5100,
											"end": 5137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5481,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5149,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5308,
											"end": 5310,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5285,
											"end": 5311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5378,
											"end": 5387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5371,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5321,
											"end": 5392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5392,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5321,
											"end": 5392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5470,
											"end": 5472,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5402,
											"end": 5474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5474,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5402,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5481,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5481,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5655,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5487,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5610,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5602,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5592,
											"end": 5611,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5644,
											"end": 5648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 5642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5635,
											"end": 5649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5655,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5809,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5661,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5759,
											"end": 5765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5766,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5786,
											"end": 5789,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5782,
											"end": 5798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5775,
											"end": 5802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5917,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5815,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5909,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5903,
											"end": 5910,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5900,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5891,
											"end": 5896,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5901,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6259,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5945,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6125,
											"end": 6131,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6120,
											"end": 6123,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6062,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6062,
											"end": 6132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6062,
											"end": 6132,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6062,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6132,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6184,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6142,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6198,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 6142,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6245,
											"end": 6251,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6223,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6252,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6223,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6214,
											"end": 6253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6207,
											"end": 6253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6259,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6259,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6450,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6501,
											"end": 6510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6511,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6485,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6465,
											"end": 6512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6610,
											"end": 6614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6593,
											"end": 6599,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6529,
											"end": 6615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6615,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6529,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6615,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6693,
											"end": 6695,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6678,
											"end": 6696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6625,
											"end": 6697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 6697,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6625,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/15_DatacapGatewayDirect.sol",
								"contracts/interfaces/IDatacapGateway.sol",
								"contracts/interfaces/IMockAllocator.sol",
								"contracts/interfaces/IStorageProviderEscrowFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"grantDatacap(bytes,uint256)": "f4bd456d",
							"grantDatacapMock(address,uint256)": "ca09c885",
							"hasAccess()": "85a2dd15",
							"mockAllocator()": "0f2a7dd3",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setStorageProviderEscrowFactory(address)": "9b85622c",
							"storageProviderEscrowFactoryAddr()": "bcaf0d9a",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mockAllocator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StorageProviderEscrowFactoryUnset\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"clientFilecoinAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantDatacap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"clientFilecoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantDatacapMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockAllocator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storageProviderEscrowFactoryAddress\",\"type\":\"address\"}],\"name\":\"setStorageProviderEscrowFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageProviderEscrowFactoryAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/15_DatacapGatewayDirect.sol\":\"DatacapGatewayDirect\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/15_DatacapGatewayDirect.sol\":{\"keccak256\":\"0x38af59cdc866a94b8e42537dbda5555ff8ce10d1d7cbec224aee551ae7926482\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://227eb7b1a47340281ce5ba3717abbde3da9787b9420beb0a24c7de2c26e8fcf7\",\"dweb:/ipfs/QmUTqPHEWK8pT8GsEu7NvmyaaaGxnYCKdQQqHcZTGpVikL\"]},\"contracts/interfaces/IDatacapGateway.sol\":{\"keccak256\":\"0xa6e358f3e8bb00c39b46e0c01208f3e9812af17e24a8b0cb52da12641704209e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0fae3f128c533d7c25d1fad3a5449e16c1e3fabce188219c7a94ef9790e19be1\",\"dweb:/ipfs/QmU7nc5MdyRPVdBZcjoXf6iVm8Hvs9bMkdcF2fgPrS3ic8\"]},\"contracts/interfaces/IMockAllocator.sol\":{\"keccak256\":\"0xd800b2cdec7fe10a6f748f54244e2c808213848917985229c83f125bf525f5bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bf500e29b9e2d22869bba2c732901027873112f3796a33db35a940e2598cb8f2\",\"dweb:/ipfs/QmRNRnb3pfj1co4VWA2C8Ctop6G76XfqmhF4WFP2LaB6ko\"]},\"contracts/interfaces/IStorageProviderEscrowFactory.sol\":{\"keccak256\":\"0x8295b00cbe148a7ae6ca49252e2ef3181b5bbb79fda2831f15ce0d2dd5e1f30c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ca7dfeecdbe471778d97e5ceb477f41c967ec141f7bfa08d53f48881c3c8536d\",\"dweb:/ipfs/QmRpH94oQZBfNdgGJ7sUMMrHqyn8pq6yC3WvmdFia3drLy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/15_DatacapGatewayDirect.sol:DatacapGatewayDirect",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 193,
								"contract": "contracts/15_DatacapGatewayDirect.sol:DatacapGatewayDirect",
								"label": "mockAllocator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 195,
								"contract": "contracts/15_DatacapGatewayDirect.sol:DatacapGatewayDirect",
								"label": "storageProviderEscrowFactoryAddr",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IDatacapGateway.sol": {
				"IDatacapGateway": {
					"abi": [
						{
							"inputs": [],
							"name": "StorageProviderEscrowFactoryUnset",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "UnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "clientFilecoinAddress",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "grantDatacap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "clientFilecoinAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "grantDatacapMock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasAccess",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "storageProviderEscrowFactoryAddress",
									"type": "address"
								}
							],
							"name": "setStorageProviderEscrowFactory",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"grantDatacap(bytes,uint256)": "f4bd456d",
							"grantDatacapMock(address,uint256)": "ca09c885",
							"hasAccess()": "85a2dd15",
							"setStorageProviderEscrowFactory(address)": "9b85622c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"StorageProviderEscrowFactoryUnset\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"UnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"clientFilecoinAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantDatacap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"clientFilecoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantDatacapMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"storageProviderEscrowFactoryAddress\",\"type\":\"address\"}],\"name\":\"setStorageProviderEscrowFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDatacapGateway.sol\":\"IDatacapGateway\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDatacapGateway.sol\":{\"keccak256\":\"0xa6e358f3e8bb00c39b46e0c01208f3e9812af17e24a8b0cb52da12641704209e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0fae3f128c533d7c25d1fad3a5449e16c1e3fabce188219c7a94ef9790e19be1\",\"dweb:/ipfs/QmU7nc5MdyRPVdBZcjoXf6iVm8Hvs9bMkdcF2fgPrS3ic8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMockAllocator.sol": {
				"IMockAllocator": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyHasAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AmountEqualZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FunctionDisabled",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "allocator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allowanceBefore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allowanceAfter",
									"type": "uint256"
								}
							],
							"name": "AllowanceChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "allocator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "client",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DatacapAllocated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "clientAddress",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addVerifiedClient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "clientAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addVerifiedClientMock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AlreadyHasAllowance()": [
								{
									"details": "Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value"
								}
							],
							"AlreadyZero()": [
								{
									"details": "Thrown if trying to set allowance to 0 when it's already 0"
								}
							],
							"AmountEqualZero()": [
								{
									"details": "Thrown if trying to add 0 allowance or grant 0 datacap"
								}
							],
							"FunctionDisabled()": [
								{
									"details": "Thrown if trying to call disabled function"
								}
							],
							"InsufficientAllowance()": [
								{
									"details": "Thrown if caller doesn't have enough allowance for given action"
								}
							]
						},
						"events": {
							"AllowanceChanged(address,uint256,uint256)": {
								"params": {
									"allocator": "Allocator whose allowance has changed",
									"allowanceAfter": "Allowance after the change",
									"allowanceBefore": "Allowance before the change"
								}
							},
							"DatacapAllocated(address,bytes,uint256)": {
								"params": {
									"allocator": "Allocator who granted the datacap",
									"amount": "Amount of datacap",
									"client": "Client that received datacap (Filecoin address)"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addVerifiedClient(bytes,uint256)": {
								"details": "Emits DatacapAllocated eventReverts with InsufficientAllowance if caller doesn't have sufficient allowance",
								"params": {
									"amount": "Amount of datacap to grant",
									"clientAddress": "Filecoin address of the client"
								}
							}
						},
						"title": "Interface for Allocator contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addVerifiedClient(bytes,uint256)": "930fc006",
							"addVerifiedClientMock(address,uint256)": "63d67dff"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyHasAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountEqualZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FunctionDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowanceBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowanceAfter\",\"type\":\"uint256\"}],\"name\":\"AllowanceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"allocator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"client\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DatacapAllocated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"clientAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addVerifiedClient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addVerifiedClientMock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AlreadyHasAllowance()\":[{\"details\":\"Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value\"}],\"AlreadyZero()\":[{\"details\":\"Thrown if trying to set allowance to 0 when it's already 0\"}],\"AmountEqualZero()\":[{\"details\":\"Thrown if trying to add 0 allowance or grant 0 datacap\"}],\"FunctionDisabled()\":[{\"details\":\"Thrown if trying to call disabled function\"}],\"InsufficientAllowance()\":[{\"details\":\"Thrown if caller doesn't have enough allowance for given action\"}]},\"events\":{\"AllowanceChanged(address,uint256,uint256)\":{\"params\":{\"allocator\":\"Allocator whose allowance has changed\",\"allowanceAfter\":\"Allowance after the change\",\"allowanceBefore\":\"Allowance before the change\"}},\"DatacapAllocated(address,bytes,uint256)\":{\"params\":{\"allocator\":\"Allocator who granted the datacap\",\"amount\":\"Amount of datacap\",\"client\":\"Client that received datacap (Filecoin address)\"}}},\"kind\":\"dev\",\"methods\":{\"addVerifiedClient(bytes,uint256)\":{\"details\":\"Emits DatacapAllocated eventReverts with InsufficientAllowance if caller doesn't have sufficient allowance\",\"params\":{\"amount\":\"Amount of datacap to grant\",\"clientAddress\":\"Filecoin address of the client\"}}},\"title\":\"Interface for Allocator contract\",\"version\":1},\"userdoc\":{\"events\":{\"AllowanceChanged(address,uint256,uint256)\":{\"notice\":\"Emitted when allocator's allowance is changed by manager\"},\"DatacapAllocated(address,bytes,uint256)\":{\"notice\":\"Emitted when datacap is granted to a client\"}},\"kind\":\"user\",\"methods\":{\"addVerifiedClient(bytes,uint256)\":{\"notice\":\"Grant allowance to a client.\"}},\"notice\":\"Definition of core functions and events of the Allocator contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMockAllocator.sol\":\"IMockAllocator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMockAllocator.sol\":{\"keccak256\":\"0xd800b2cdec7fe10a6f748f54244e2c808213848917985229c83f125bf525f5bc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bf500e29b9e2d22869bba2c732901027873112f3796a33db35a940e2598cb8f2\",\"dweb:/ipfs/QmRNRnb3pfj1co4VWA2C8Ctop6G76XfqmhF4WFP2LaB6ko\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"AllowanceChanged(address,uint256,uint256)": {
								"notice": "Emitted when allocator's allowance is changed by manager"
							},
							"DatacapAllocated(address,bytes,uint256)": {
								"notice": "Emitted when datacap is granted to a client"
							}
						},
						"kind": "user",
						"methods": {
							"addVerifiedClient(bytes,uint256)": {
								"notice": "Grant allowance to a client."
							}
						},
						"notice": "Definition of core functions and events of the Allocator contract",
						"version": 1
					}
				}
			},
			"contracts/interfaces/IStorageProviderEscrowFactory.sol": {
				"IStorageProviderEscrowFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "DatacapGatewayUnset",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "createStorageProviderEscrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "datacapGateway",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllEscrows",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "getEscrowById",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "escrowContract",
									"type": "address"
								}
							],
							"name": "isEscrow",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "datacapGatewayAddress",
									"type": "address"
								}
							],
							"name": "setDatacapGateway",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Interface for Allocator contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createStorageProviderEscrow()": "44f8620c",
							"datacapGateway()": "8fc8f758",
							"getAllEscrows()": "9a6ac36f",
							"getEscrowById(uint256)": "20ca0418",
							"isEscrow(address)": "b166a09f",
							"setDatacapGateway(address)": "19f4a924"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DatacapGatewayUnset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"createStorageProviderEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"datacapGateway\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllEscrows\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getEscrowById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"escrowContract\",\"type\":\"address\"}],\"name\":\"isEscrow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"datacapGatewayAddress\",\"type\":\"address\"}],\"name\":\"setDatacapGateway\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Interface for Allocator contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Definition of core functions and events of the Allocator contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStorageProviderEscrowFactory.sol\":\"IStorageProviderEscrowFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IStorageProviderEscrowFactory.sol\":{\"keccak256\":\"0x8295b00cbe148a7ae6ca49252e2ef3181b5bbb79fda2831f15ce0d2dd5e1f30c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ca7dfeecdbe471778d97e5ceb477f41c967ec141f7bfa08d53f48881c3c8536d\",\"dweb:/ipfs/QmRpH94oQZBfNdgGJ7sUMMrHqyn8pq6yC3WvmdFia3drLy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Definition of core functions and events of the Allocator contract",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/15_DatacapGatewayDirect.sol": {
				"ast": {
					"absolutePath": "contracts/15_DatacapGatewayDirect.sol",
					"exportedSymbols": {
						"DatacapGatewayDirect": [
							316
						],
						"IDatacapGateway": [
							349
						],
						"IMockAllocator": [
							401
						],
						"IStorageProviderEscrowFactory": [
							440
						],
						"Ownable": [
							147
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "81:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 148,
							"src": "106:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 180,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "114:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMockAllocator.sol",
							"file": "./interfaces/IMockAllocator.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 402,
							"src": "175:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 182,
										"name": "IMockAllocator",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 401,
										"src": "183:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IStorageProviderEscrowFactory.sol",
							"file": "./interfaces/IStorageProviderEscrowFactory.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 441,
							"src": "239:93:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 184,
										"name": "IStorageProviderEscrowFactory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 440,
										"src": "247:29:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IDatacapGateway.sol",
							"file": "./interfaces/IDatacapGateway.sol",
							"id": 187,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 317,
							"sourceUnit": 350,
							"src": "333:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 186,
										"name": "IDatacapGateway",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 349,
										"src": "341:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 188,
										"name": "Ownable",
										"nameLocations": [
											"433:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "433:7:2"
									},
									"id": 189,
									"nodeType": "InheritanceSpecifier",
									"src": "433:7:2"
								},
								{
									"baseName": {
										"id": 190,
										"name": "IDatacapGateway",
										"nameLocations": [
											"442:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "442:15:2"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "442:15:2"
								}
							],
							"canonicalName": "DatacapGatewayDirect",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316,
								349,
								147,
								177
							],
							"name": "DatacapGatewayDirect",
							"nameLocation": "409:20:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0f2a7dd3",
									"id": 193,
									"mutability": "mutable",
									"name": "mockAllocator",
									"nameLocation": "479:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "464:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 192,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "464:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bcaf0d9a",
									"id": 195,
									"mutability": "mutable",
									"name": "storageProviderEscrowFactoryAddr",
									"nameLocation": "514:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "499:47:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 194,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "499:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "633:47:2",
										"statements": [
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 205,
														"name": "mockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "643:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 206,
														"name": "_mockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "659:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "643:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "643:30:2"
											}
										]
									},
									"id": 210,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 202,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 197,
													"src": "619:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 203,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 201,
												"name": "Ownable",
												"nameLocations": [
													"611:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "611:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "611:21:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "573:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "565:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "_mockAllocator",
												"nameLocation": "595:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "587:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:46:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "633:0:2"
									},
									"scope": 316,
									"src": "553:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										329
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "791:87:2",
										"statements": [
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "storageProviderEscrowFactoryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "801:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "storageProviderEscrowFactoryAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "836:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "801:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "801:70:2"
											}
										]
									},
									"functionSelector": "9b85622c",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 215,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 214,
												"name": "onlyOwner",
												"nameLocations": [
													"781:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "781:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "781:9:2"
										}
									],
									"name": "setStorageProviderEscrowFactory",
									"nameLocation": "695:31:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "storageProviderEscrowFactoryAddress",
												"nameLocation": "735:35:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "727:43:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:45:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:2"
									},
									"scope": 316,
									"src": "686:192:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "915:367:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 224,
														"name": "storageProviderEscrowFactoryAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "929:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "973:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "965:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 225,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "965:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "965:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "929:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "IfStatement",
												"src": "925:119:2",
												"trueBody": {
													"id": 233,
													"nodeType": "Block",
													"src": "977:67:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 230,
																	"name": "StorageProviderEscrowFactoryUnset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "998:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "998:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 232,
															"nodeType": "RevertStatement",
															"src": "991:42:2"
														}
													]
												}
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "factory",
														"nameLocation": "1084:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "1054:37:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IStorageProviderEscrowFactory_$440",
															"typeString": "contract IStorageProviderEscrowFactory"
														},
														"typeName": {
															"id": 236,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 235,
																"name": "IStorageProviderEscrowFactory",
																"nameLocations": [
																	"1054:29:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 440,
																"src": "1054:29:2"
															},
															"referencedDeclaration": 440,
															"src": "1054:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IStorageProviderEscrowFactory_$440",
																"typeString": "contract IStorageProviderEscrowFactory"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"arguments": [
														{
															"id": 239,
															"name": "storageProviderEscrowFactoryAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "1124:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 238,
														"name": "IStorageProviderEscrowFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "1094:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IStorageProviderEscrowFactory_$440_$",
															"typeString": "type(contract IStorageProviderEscrowFactory)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStorageProviderEscrowFactory_$440",
														"typeString": "contract IStorageProviderEscrowFactory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1054:103:2"
											},
											{
												"condition": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1171:29:2",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 244,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1189:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1193:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1189:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 242,
																"name": "factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "1172:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IStorageProviderEscrowFactory_$440",
																	"typeString": "contract IStorageProviderEscrowFactory"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1180:8:2",
															"memberName": "isEscrow",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 439,
															"src": "1172:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view external returns (bool)"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1172:28:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "1167:98:2",
												"trueBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "1202:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 249,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1243:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1247:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1243:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 248,
																	"name": "UnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "1223:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1223:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 252,
															"nodeType": "RevertStatement",
															"src": "1216:38:2"
														}
													]
												}
											},
											{
												"id": 255,
												"nodeType": "PlaceholderStatement",
												"src": "1274:1:2"
											}
										]
									},
									"id": 257,
									"name": "onlyEscrowContracts",
									"nameLocation": "893:19:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "912:2:2"
									},
									"src": "884:398:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										334
									],
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1358:28:2",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "1368:11:2"
											}
										]
									},
									"functionSelector": "85a2dd15",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 259,
												"name": "onlyEscrowContracts",
												"nameLocations": [
													"1323:19:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 257,
												"src": "1323:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1323:19:2"
										}
									],
									"name": "hasAccess",
									"nameLocation": "1297:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:2:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1352:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1352:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:6:2"
									},
									"scope": 316,
									"src": "1288:98:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										341
									],
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "1497:141:2",
										"statements": [
											{
												"assignments": [
													278
												],
												"declarations": [
													{
														"constant": false,
														"id": 278,
														"mutability": "mutable",
														"name": "allocator",
														"nameLocation": "1522:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 290,
														"src": "1507:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMockAllocator_$401",
															"typeString": "contract IMockAllocator"
														},
														"typeName": {
															"id": 277,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 276,
																"name": "IMockAllocator",
																"nameLocations": [
																	"1507:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 401,
																"src": "1507:14:2"
															},
															"referencedDeclaration": 401,
															"src": "1507:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$401",
																"typeString": "contract IMockAllocator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 282,
												"initialValue": {
													"arguments": [
														{
															"id": 280,
															"name": "mockAllocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "1549:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 279,
														"name": "IMockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "1534:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMockAllocator_$401_$",
															"typeString": "type(contract IMockAllocator)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1534:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMockAllocator_$401",
														"typeString": "contract IMockAllocator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1507:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "clientFilecoinAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "1601:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"id": 287,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1624:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 283,
															"name": "allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "1573:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$401",
																"typeString": "contract IMockAllocator"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1583:17:2",
														"memberName": "addVerifiedClient",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 393,
														"src": "1573:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (bytes memory,uint256) external"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1573:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "1573:58:2"
											}
										]
									},
									"functionSelector": "f4bd456d",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 274,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 273,
												"name": "onlyEscrowContracts",
												"nameLocations": [
													"1477:19:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 257,
												"src": "1477:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1477:19:2"
										}
									],
									"name": "grantDatacap",
									"nameLocation": "1401:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "clientFilecoinAddress",
												"nameLocation": "1429:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1414:36:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1414:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1460:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1452:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:54:2"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1497:0:2"
									},
									"scope": 316,
									"src": "1392:246:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										348
									],
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "1746:145:2",
										"statements": [
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "allocator",
														"nameLocation": "1771:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "1756:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMockAllocator_$401",
															"typeString": "contract IMockAllocator"
														},
														"typeName": {
															"id": 301,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 300,
																"name": "IMockAllocator",
																"nameLocations": [
																	"1756:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 401,
																"src": "1756:14:2"
															},
															"referencedDeclaration": 401,
															"src": "1756:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$401",
																"typeString": "contract IMockAllocator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"arguments": [
														{
															"id": 304,
															"name": "mockAllocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "1798:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 303,
														"name": "IMockAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "1783:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMockAllocator_$401_$",
															"typeString": "type(contract IMockAllocator)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMockAllocator_$401",
														"typeString": "contract IMockAllocator"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1756:56:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 310,
															"name": "clientFilecoinAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1854:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "1877:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 307,
															"name": "allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1822:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMockAllocator_$401",
																"typeString": "contract IMockAllocator"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1832:21:2",
														"memberName": "addVerifiedClientMock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "1822:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1822:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "1822:62:2"
											}
										]
									},
									"functionSelector": "ca09c885",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyEscrowContracts",
												"nameLocations": [
													"1726:19:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 257,
												"src": "1726:19:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1726:19:2"
										}
									],
									"name": "grantDatacapMock",
									"nameLocation": "1653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "clientFilecoinAddress",
												"nameLocation": "1678:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1670:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1709:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "1701:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:47:2"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1746:0:2"
									},
									"scope": 316,
									"src": "1644:247:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 317,
							"src": "400:1493:2",
							"usedErrors": [
								13,
								18,
								320,
								324
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "81:1812:2"
				},
				"id": 2
			},
			"contracts/interfaces/IDatacapGateway.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IDatacapGateway.sol",
					"exportedSymbols": {
						"IDatacapGateway": [
							349
						]
					},
					"id": 350,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDatacapGateway",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "IDatacapGateway",
							"nameLocation": "74:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "f37741d7",
									"id": 320,
									"name": "StorageProviderEscrowFactoryUnset",
									"nameLocation": "102:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:2:3"
									},
									"src": "96:42:3"
								},
								{
									"errorSelector": "32b2baa3",
									"id": 324,
									"name": "UnauthorizedAccount",
									"nameLocation": "150:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "178:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "170:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:17:3"
									},
									"src": "144:43:3"
								},
								{
									"functionSelector": "9b85622c",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setStorageProviderEscrowFactory",
									"nameLocation": "202:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "storageProviderEscrowFactoryAddress",
												"nameLocation": "242:35:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "234:43:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:45:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:0:3"
									},
									"scope": 349,
									"src": "193:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85a2dd15",
									"id": 334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasAccess",
									"nameLocation": "303:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:3"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "338:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "338:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:6:3"
									},
									"scope": 349,
									"src": "294:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f4bd456d",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantDatacap",
									"nameLocation": "360:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "clientFilecoinAddress",
												"nameLocation": "388:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "373:36:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "373:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "419:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "411:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:54:3"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:0:3"
									},
									"scope": 349,
									"src": "351:85:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ca09c885",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantDatacapMock",
									"nameLocation": "452:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "clientFilecoinAddress",
												"nameLocation": "477:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "469:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "508:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "500:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:47:3"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:0:3"
									},
									"scope": 349,
									"src": "443:82:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 350,
							"src": "64:463:3",
							"usedErrors": [
								320,
								324
							],
							"usedEvents": []
						}
					],
					"src": "39:489:3"
				},
				"id": 3
			},
			"contracts/interfaces/IMockAllocator.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMockAllocator.sol",
					"exportedSymbols": {
						"IMockAllocator": [
							401
						]
					},
					"id": 402,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMockAllocator",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 352,
								"nodeType": "StructuredDocumentation",
								"src": "64:127:4",
								"text": " @title Interface for Allocator contract\n @notice Definition of core functions and events of the Allocator contract"
							},
							"fullyImplemented": false,
							"id": 401,
							"linearizedBaseContracts": [
								401
							],
							"name": "IMockAllocator",
							"nameLocation": "202:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "223:87:4",
										"text": " @dev Thrown if caller doesn't have enough allowance for given action"
									},
									"errorSelector": "13be252b",
									"id": 355,
									"name": "InsufficientAllowance",
									"nameLocation": "321:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "342:2:4"
									},
									"src": "315:30:4"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "351:78:4",
										"text": " @dev Thrown if trying to add 0 allowance or grant 0 datacap"
									},
									"errorSelector": "b0da7f34",
									"id": 358,
									"name": "AmountEqualZero",
									"nameLocation": "440:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:4"
									},
									"src": "434:24:4"
								},
								{
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "464:155:4",
										"text": " @dev Thrown if trying to set allowance bigger than 0 when user has allowance, set allowance to 0 first if you want to set specific value"
									},
									"errorSelector": "494d1493",
									"id": 361,
									"name": "AlreadyHasAllowance",
									"nameLocation": "630:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:4"
									},
									"src": "624:28:4"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "658:82:4",
										"text": " @dev Thrown if trying to set allowance to 0 when it's already 0"
									},
									"errorSelector": "5657d5eb",
									"id": 364,
									"name": "AlreadyZero",
									"nameLocation": "751:11:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:2:4"
									},
									"src": "745:20:4"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "771:66:4",
										"text": " @dev Thrown if trying to call disabled function"
									},
									"errorSelector": "bf241488",
									"id": 367,
									"name": "FunctionDisabled",
									"nameLocation": "848:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "864:2:4"
									},
									"src": "842:25:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "873:259:4",
										"text": " @notice Emitted when allocator's allowance is changed by manager\n @param allocator Allocator whose allowance has changed\n @param allowanceBefore Allowance before the change\n @param allowanceAfter Allowance after the change"
									},
									"eventSelector": "d30aeeeb3755c0784618bd3ff45998e5b4be082df174ed87c3a79f37e2fb56a6",
									"id": 376,
									"name": "AllowanceChanged",
									"nameLocation": "1143:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "allocator",
												"nameLocation": "1176:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1160:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowanceBefore",
												"nameLocation": "1195:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1187:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowanceAfter",
												"nameLocation": "1220:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1212:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1159:76:4"
									},
									"src": "1137:99:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1242:236:4",
										"text": " @notice Emitted when datacap is granted to a client\n @param allocator Allocator who granted the datacap\n @param client Client that received datacap (Filecoin address)\n @param amount Amount of datacap"
									},
									"eventSelector": "9b88bd178c90ce12441ff8588a493795e519ac037930d64fdb0d15de4fb53e37",
									"id": 385,
									"name": "DatacapAllocated",
									"nameLocation": "1489:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"indexed": true,
												"mutability": "mutable",
												"name": "allocator",
												"nameLocation": "1522:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1506:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"indexed": true,
												"mutability": "mutable",
												"name": "client",
												"nameLocation": "1547:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1533:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1533:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1563:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1555:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:65:4"
									},
									"src": "1483:88:4"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "2863:294:4",
										"text": " @notice Grant allowance to a client.\n @param clientAddress Filecoin address of the client\n @param amount Amount of datacap to grant\n @dev Emits DatacapAllocated event\n @dev Reverts with InsufficientAllowance if caller doesn't have sufficient allowance"
									},
									"functionSelector": "930fc006",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addVerifiedClient",
									"nameLocation": "3171:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "clientAddress",
												"nameLocation": "3204:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3189:28:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3227:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3219:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:46:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3243:0:4"
									},
									"scope": 401,
									"src": "3162:82:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "63d67dff",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addVerifiedClientMock",
									"nameLocation": "3259:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "clientAddress",
												"nameLocation": "3289:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3281:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3312:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3304:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3304:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3280:39:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3328:0:4"
									},
									"scope": 401,
									"src": "3250:79:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 402,
							"src": "192:3139:4",
							"usedErrors": [
								355,
								358,
								361,
								364,
								367
							],
							"usedEvents": [
								376,
								385
							]
						}
					],
					"src": "39:3293:4"
				},
				"id": 4
			},
			"contracts/interfaces/IStorageProviderEscrowFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IStorageProviderEscrowFactory.sol",
					"exportedSymbols": {
						"IStorageProviderEscrowFactory": [
							440
						]
					},
					"id": 441,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 403,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStorageProviderEscrowFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 404,
								"nodeType": "StructuredDocumentation",
								"src": "64:127:5",
								"text": " @title Interface for Allocator contract\n @notice Definition of core functions and events of the Allocator contract"
							},
							"fullyImplemented": false,
							"id": 440,
							"linearizedBaseContracts": [
								440
							],
							"name": "IStorageProviderEscrowFactory",
							"nameLocation": "202:29:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "2bc84aa6",
									"id": 406,
									"name": "DatacapGatewayUnset",
									"nameLocation": "244:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:5"
									},
									"src": "238:28:5"
								},
								{
									"functionSelector": "8fc8f758",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "datacapGateway",
									"nameLocation": "281:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:5"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "315:9:5"
									},
									"scope": 440,
									"src": "272:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "19f4a924",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDatacapGateway",
									"nameLocation": "340:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "datacapGatewayAddress",
												"nameLocation": "366:21:5",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "358:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:31:5"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:0:5"
									},
									"scope": 440,
									"src": "331:67:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "44f8620c",
									"id": 419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createStorageProviderEscrow",
									"nameLocation": "413:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:2:5"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:5"
									},
									"scope": 440,
									"src": "404:48:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "20ca0418",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEscrowById",
									"nameLocation": "467:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "489:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "481:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:12:5"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "516:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:9:5"
									},
									"scope": 440,
									"src": "458:67:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6ac36f",
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllEscrows",
									"nameLocation": "541:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:2:5"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "580:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 428,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "580:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 429,
													"nodeType": "ArrayTypeName",
													"src": "580:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:18:5"
									},
									"scope": 440,
									"src": "532:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b166a09f",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isEscrow",
									"nameLocation": "613:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "escrowContract",
												"nameLocation": "630:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "622:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:24:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "669:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "668:6:5"
									},
									"scope": 440,
									"src": "604:71:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 441,
							"src": "192:485:5",
							"usedErrors": [
								406
							],
							"usedEvents": []
						}
					],
					"src": "39:639:5"
				},
				"id": 5
			}
		}
	}
}